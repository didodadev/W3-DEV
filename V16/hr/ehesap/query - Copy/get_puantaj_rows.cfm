<cfset puantaj_start_ = CREATEODBCDATETIME(CREATEDATE(attributes.sal_year,attributes.SAL_MON,1))>
<cfif isdefined("attributes.sal_mon_end")>
	<cfset puantaj_gun_ = daysinmonth(CREATEDATE(attributes.sal_year,attributes.sal_mon_end,1))>
	<cfset puantaj_finish_ = CREATEODBCDATETIME(dateadd("d",1,CREATEDATE(attributes.sal_year_end,attributes.sal_mon_end,puantaj_gun_)))>
	<cfset bu_ay_sonu = CREATEODBCDATETIME(dateadd("d",1,CREATEDATE(attributes.sal_year_end,attributes.sal_mon_end,puantaj_gun_)))>
<cfelse>
	<cfset puantaj_gun_ = daysinmonth(CREATEDATE(attributes.sal_year,attributes.SAL_MON,1))>
	<cfset puantaj_finish_ = CREATEODBCDATETIME(dateadd("d",1,CREATEDATE(attributes.sal_year,attributes.SAL_MON,puantaj_gun_)))>
	<cfset bu_ay_sonu = CREATEODBCDATETIME(dateadd("d",1,CREATEDATE(attributes.sal_year,attributes.SAL_MON,puantaj_gun_)))>
</cfif>
<cfif not isdefined("new_dsn2_alias")><cfset new_dsn2_alias = dsn2_alias></cfif>
<cfquery name="get_puantaj_rows" datasource="#dsn#">
	SELECT DISTINCT
		(SSK_ISVEREN_HISSESI+SSK_ISVEREN_HISSESI_5510+SSK_ISVEREN_HISSESI_5084) SSK_ISVEREN_HISSESI_HESAPLANAN,
		(SSK_ISVEREN_HISSESI-SSK_ISVEREN_HISSESI_GOV-SSK_ISVEREN_HISSESI_5921-SSK_ISVEREN_HISSESI_5746-SSK_ISVEREN_HISSESI_6111-SSK_ISVEREN_HISSESI_6486-SSK_ISVEREN_HISSESI_14857-ISNULL(SSK_ISVEREN_HISSESI_7103,0)-ISNULL(SSK_ISVEREN_HISSESI_7252,0)-ISNULL(SSK_ISVEREN_HISSESI_7256,0)) SSK_ISVEREN_HISSESI_,
		CASE 
			WHEN
				(GELIR_VERGISI = 0 AND INCOME_TAX_TEMP > 0)
			THEN
				INCOME_TAX_TEMP
			WHEN
				EMPLOYEES_PUANTAJ.SAL_YEAR >= 2022
			THEN
				GELIR_VERGISI+VERGI_INDIRIMI_5084+VERGI_IADESI+GELIR_VERGISI_INDIRIMI_5746+ISNULL(DAILY_MINIMUM_INCOME_TAX,0)
			WHEN 
				IS_5746_CONTROL = 0 
			THEN 
				(GELIR_VERGISI+VERGI_INDIRIMI_5084+VERGI_IADESI+GELIR_VERGISI_INDIRIMI_5746) 
			ELSE 
				(GELIR_VERGISI+VERGI_INDIRIMI_5084+VERGI_IADESI) 
		END AS GELIR_VERGISI_HESAPLANAN,
		(TOTAL_PAY_SSK_TAX+TOTAL_PAY_SSK+TOTAL_PAY_TAX+TOTAL_PAY) TOTAL_PAY_,
		(TOTAL_SALARY-YILLIK_IZIN_AMOUNT-EMPLOYEES_PUANTAJ_ROWS.KIDEM_AMOUNT-EMPLOYEES_PUANTAJ_ROWS.IHBAR_AMOUNT-EXT_SALARY-VERGI_ISTISNA_VERGI-(TOTAL_PAY_SSK_TAX+TOTAL_PAY_SSK+TOTAL_PAY_TAX+TOTAL_PAY)) NORMAL_KAZANC_,
		(TOTAL_SALARY-YILLIK_IZIN_AMOUNT-EMPLOYEES_PUANTAJ_ROWS.KIDEM_AMOUNT-EMPLOYEES_PUANTAJ_ROWS.IHBAR_AMOUNT-EXT_SALARY-VERGI_ISTISNA_VERGI-(TOTAL_PAY_SSK_TAX+TOTAL_PAY_SSK+TOTAL_PAY_TAX+TOTAL_PAY)+ISNULL((SELECT SUM(AMOUNT) FROM EMPLOYEES_PUANTAJ_ROWS_EXT WHERE EXT_TYPE = 1 AND FROM_SALARY = 1 AND	EMPLOYEE_PUANTAJ_ID = EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_PUANTAJ_ID),0)+BES_ISCI_HISSESI+ISNULL(OZEL_KESINTI_2_NET_FARK,0)) NORMAL_KAZANC_BRUT_KESINTI_DAHIL,
		((VERGI_ISTISNA_DAMGA-VERGI_ISTISNA_DAMGA_NET)+(VERGI_ISTISNA_SSK-VERGI_ISTISNA_SSK_NET)+(VERGI_ISTISNA_VERGI-VERGI_ISTISNA_VERGI_NET)) VERGI_ISTISNA_TUTAR_FARKLARI,
		(NET_UCRET-VERGI_IADESI+AVANS+OZEL_KESINTI+OZEL_KESINTI_2_NET+BES_ISCI_HISSESI) ICMAL_KESINTI_VE_AGI_ONCESI_NET,
		(NET_UCRET-VERGI_IADESI+AVANS+OZEL_KESINTI+OZEL_KESINTI_2_NET-ISNULL((SELECT SUM(AMOUNT_PAY) FROM EMPLOYEES_PUANTAJ_ROWS_EXT EXT WHERE EXT.EMPLOYEE_PUANTAJ_ID=EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_PUANTAJ_ID AND EXT.ACC_TYPE_ID IS NOT NULL AND EXT.EXT_TYPE=0),0)) KESINTI_VE_AGI_ONCESI_NET,
		NET_UCRET AS NET_UCRET_,
		(NET_UCRET-VERGI_IADESI-IHBAR_AMOUNT_NET-KIDEM_AMOUNT_NET+AVANS+OZEL_KESINTI+OZEL_KESINTI_2_NET+BES_ISCI_HISSESI) KESINTI_VE_AGI_ONCESI_NET_IHBARSIZ,
        (ISSIZLIK_ISCI_HISSESI+SSK_ISCI_HISSESI) TOTAL_SGK_ISCI_PRIM_,
		(ISSIZLIK_ISVEREN_HISSESI+SSK_ISVEREN_HISSESI-SSK_ISVEREN_HISSESI_GOV-SSK_ISVEREN_HISSESI_5921-SSK_ISVEREN_HISSESI_5746-SSK_ISVEREN_HISSESI_6111-SSK_ISVEREN_HISSESI_6486-ISNULL(SSK_ISVEREN_HISSESI_7103,0)-ISNULL(SSK_ISVEREN_HISSESI_7252,0)-ISNULL(SSK_ISVEREN_HISSESI_7256,0)) TOTAL_SGK_PRIM_,
		ISNULL(SSK_ISVEREN_HISSESI_46486,0) + ISNULL(SSK_ISVEREN_HISSESI_56486,0) + ISNULL(SSK_ISVEREN_HISSESI_66486,0) AS SSK_ISVEREN_HISSESI_6486_TOTAL,
		CASE WHEN (SSDF_ISVEREN_HISSESI>0) THEN SSK_ISCI_HISSESI_DUSULECEK ELSE 0 END AS SGDP_ISCI_PRIMI_FARK,
		CASE WHEN (SSDF_ISVEREN_HISSESI<=0) THEN SSK_ISCI_HISSESI_DUSULECEK ELSE 0 END AS SSK_ISCI_HISSESI_DUSULECEK_,
		ISNULL(EMPLOYEES_PUANTAJ_ROWS.ACCOUNT_BILL_TYPE,0) ACCOUNT_BILL_TYPE_,
		ISNULL((SELECT SUM(VERGI_ISTISNA_AMOUNT) FROM EMPLOYEES_PUANTAJ_ROWS_EXT EEP WHERE EEP.EMPLOYEE_PUANTAJ_ID = EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_PUANTAJ_ID AND EEP.EXT_TYPE = 2),0) VERGI_ISTISNA_AMOUNT,
		(ISNULL(SSK_ISVEREN_HISSESI_687,0) + ISNULL(SSK_ISCI_HISSESI_687,0) + ISNULL(ISSIZLIK_ISCI_HISSESI_687,0) + ISNULL(ISSIZLIK_ISVEREN_HISSESI_687,0)) AS SGK_PRIM_INDIRIMI_687,
		(ISNULL(SSK_ISVEREN_HISSESI_7103,0) + ISNULL(SSK_ISCI_HISSESI_7103,0) + ISNULL(ISSIZLIK_ISCI_HISSESI_7103,0) + ISNULL(ISSIZLIK_ISVEREN_HISSESI_7103,0)) AS SGK_PRIM_INDIRIMI_7103,
		ISNULL(SSK_ISVEREN_HISSESI_7103,0) AS SSK_ISVEREN_HISSESI_7103,
		ISNULL(SSK_ISCI_HISSESI_7103,0) AS SSK_ISCI_HISSESI_7103,
		ISNULL(ISSIZLIK_ISCI_HISSESI_7103,0) AS ISSIZLIK_ISCI_HISSESI_7103,
		ISNULL(ISSIZLIK_ISVEREN_HISSESI_7103,0) AS ISSIZLIK_ISVEREN_HISSESI_7103,
		(ISNULL(SSK_ISVEREN_HISSESI_7252,0) + ISNULL(SSK_ISCI_HISSESI_7252,0) + ISNULL(ISSIZLIK_ISCI_HISSESI_7252,0) + ISNULL(ISSIZLIK_ISVEREN_HISSESI_7252,0)) AS SGK_PRIM_INDIRIMI_7252,
		ISNULL(SSK_ISVEREN_HISSESI_7252,0) AS SSK_ISVEREN_HISSESI_7252,
		ISNULL(SSK_ISCI_HISSESI_7252,0) AS SSK_ISCI_HISSESI_7252,
		ISNULL(ISSIZLIK_ISCI_HISSESI_7252,0) AS ISSIZLIK_ISCI_HISSESI_7252,
		ISNULL(ISSIZLIK_ISVEREN_HISSESI_7252,0) AS ISSIZLIK_ISVEREN_HISSESI_7252,
		(ISNULL(SSK_ISVEREN_HISSESI_7256,0) + ISNULL(SSK_ISCI_HISSESI_7256,0) + ISNULL(ISSIZLIK_ISCI_HISSESI_7256,0) + ISNULL(ISSIZLIK_ISVEREN_HISSESI_7256,0)) AS SGK_PRIM_INDIRIMI_7256,
		ISNULL(SSK_ISVEREN_HISSESI_7256,0) AS SSK_ISVEREN_HISSESI_7256,
		ISNULL(SSK_ISCI_HISSESI_7256,0) AS SSK_ISCI_HISSESI_7256,
		ISNULL(ISSIZLIK_ISCI_HISSESI_7256,0) AS ISSIZLIK_ISCI_HISSESI_7256,
		ISNULL(SSK_ISVEREN_HISSESI_3294,0) AS SSK_ISVEREN_HISSESI_3294,
		ISNULL(ISSIZLIK_ISVEREN_HISSESI_7256,0) AS ISSIZLIK_ISVEREN_HISSESI_7256,
		ISNULL(DAMGA_VERGISI_INDIRIMI_5746,0) AS DAMGA_VERGISI_INDIRIMI_5746,
		ISNULL(INCOME_TAX_TEMP,0) INCOME_TAX_TEMP,
		ISNULL(STAMP_TAX_TEMP,0) STAMP_TAX_TEMP,
		(NET_UCRET-VERGI_IADESI+AVANS+OZEL_KESINTI) AS KESINTI_VE_AGI_ONCESI_NET_2,
		ISNULL(OZEL_KESINTI_2_NET_FARK,0) AS OZEL_KESINTI_2_NET_FARK,
        LAW_NUMBER_7103,
		(SSK_ISCI_HISSESI - SSK_ISCI_HISSESI_7256 - SSK_ISCI_HISSESI_7252 - SSK_ISCI_HISSESI_7103 - SSK_ISCI_HISSESI_687) AS SSK_ISCI_HISSESI_INDIRIMLI,
		OZEL_KESINTI_2,
		ISNULL(HEALTH_INSURANCE_PREMIUM_WORKER,0) HEALTH_INSURANCE_PREMIUM_WORKER,
		ISNULL(HEALTH_INSURANCE_PREMIUM_EMPLOYER,0) HEALTH_INSURANCE_PREMIUM_EMPLOYER,
		ISNULL(DEATH_INSURANCE_PREMIUM_WORKER,0) DEATH_INSURANCE_PREMIUM_WORKER,
		ISNULL(DEATH_INSURANCE_PREMIUM_EMPLOYER,0) DEATH_INSURANCE_PREMIUM_EMPLOYER,
		ISNULL(SHORT_TERM_PREMIUM_EMPLOYER,0) SHORT_TERM_PREMIUM_EMPLOYER,
		CASE 
			WHEN
				EMPLOYEES_PUANTAJ.SAL_YEAR <= 2021
			THEN
				DAMGA_VERGISI
			WHEN
				DAMGA_VERGISI > 0
			THEN
				DAMGA_VERGISI + DAILY_MINIMUM_WAGE_STAMP_TAX
			WHEN 
				(DAMGA_VERGISI = 0 AND  STAMP_TAX_TEMP > 0)
			THEN 
				STAMP_TAX_TEMP
			ELSE 
				0
		END AS INDIRIMSIZ_DAMGA_VERGISI,
        EMPLOYEES_PUANTAJ_ROWS.*,
		EMPLOYEES_PUANTAJ.SSK_OFFICE + ' ' + EMPLOYEES_PUANTAJ.SSK_OFFICE_NO AS SUBE_SSK_INFO,
		EMPLOYEES_PUANTAJ.*,
		EMPLOYEES.HIERARCHY,
		EMPLOYEES.DYNAMIC_HIERARCHY,
		EMPLOYEES.DYNAMIC_HIERARCHY_ADD,
		EMPLOYEES.EMPLOYEE_NAME,
		EMPLOYEES.EMPLOYEE_SURNAME,
		EMPLOYEES.GROUP_STARTDATE,
		EMPLOYEES.KIDEM_DATE,
		EMPLOYEES_IDENTY.TC_IDENTY_NO,
		EMPLOYEES_IDENTY.SOCIALSECURITY_NO,
		EMPLOYEES.EMPLOYEE_NO,
		EMPLOYEES_DETAIL.SEX,
		BRANCH.BRANCH_ID,
		BRANCH.RELATED_COMPANY,
		BRANCH.BRANCH_POSTCODE,
		BRANCH.BRANCH_TAX_OFFICE,
		BRANCH.BRANCH_FULLNAME,
		BRANCH.BRANCH_NAME,
		BRANCH.SSK_M,
		BRANCH.SSK_JOB,
		BRANCH.SSK_BRANCH,
		BRANCH.SSK_BRANCH_OLD,
		BRANCH.SSK_CITY,
		BRANCH.SSK_COUNTRY,
		BRANCH.SSK_CD,
		BRANCH.SSK_AGENT,
		BRANCH.SSK_NO B_SSK_NO,
		BRANCH.IS_5510,
		BRANCH.COMPANY_ID,
		BRANCH.ISKUR_BRANCH_NO,
		BRANCH.BRANCH_TAX_NO,
		BRANCH.BRANCH_ADDRESS,
		BRANCH.BRANCH_COUNTY,
		BRANCH.BRANCH_CITY,
		BRANCH.EXPENSE_USER_POS_ID,
		BRANCH.FULFILLMENT_OFFICER_POS_ID,
		BRANCH.SALARY_SYNDIC_POS_ID,
		BRANCH.DANGER_DEGREE_NO,
		OUR_COMPANY.NICK_NAME,
        CAST(OUR_COMPANY.ADDRESS AS NVARCHAR(MAX)) AS ADDRESS,
        OUR_COMPANY.T_NO,
        OUR_COMPANY.MERSIS_NO,
        OUR_COMPANY.WEB,
		DEPARTMENT.DEPARTMENT_HEAD,
		EMPLOYEES_IN_OUT.IS_5084 AS KISI_5084,
		EMPLOYEES_IN_OUT.IS_5510 AS KISI_5510,
		EMPLOYEES_IN_OUT.START_CUMULATIVE_TAX,
		EMPLOYEES_IN_OUT.IS_START_CUMULATIVE_TAX,
		EMPLOYEES_IN_OUT.CUMULATIVE_TAX_TOTAL,
		EMPLOYEES_IN_OUT.USE_SSK,
		EMPLOYEES_IN_OUT.USE_PDKS,
		EMPLOYEES_IN_OUT.SSK_STATUTE,
		EMPLOYEES_IN_OUT.START_DATE,
		EMPLOYEES_IN_OUT.FINISH_DATE,
		EMPLOYEES_IN_OUT.RETIRED_REGISTRY_NO,
		EMPLOYEES_IN_OUT.SERVICE_CLASS,
		EMPLOYEES_IN_OUT.SERVICE_TITLE,
		KUMULATIF_GELIR_MATRAH,
		<cfif fusebox.use_period>
			(
				SELECT
					TOP 1 EXPENSE
				FROM
					#new_dsn2_alias#.EXPENSE_CENTER AS EXPENSE_CENTER
				WHERE
					EXPENSE_CENTER.EXPENSE_CODE = EMPLOYEES_PUANTAJ_ROWS.EXPENSE_CODE
			) AS EXP_NAME,
			(
				SELECT
					TOP 1 EXPENSE_ID
				FROM
					#new_dsn2_alias#.EXPENSE_CENTER AS EXPENSE_CENTER
				WHERE
					EXPENSE_CENTER.EXPENSE_CODE = EMPLOYEES_PUANTAJ_ROWS.EXPENSE_CODE
			) AS EMP_EXPENSE_CENTER
		<cfelse>	
			(
				SELECT
					TOP 1 EXPENSE
				FROM
					EXPENSE_CENTER AS EXPENSE_CENTER
				WHERE
					EXPENSE_CENTER.EXPENSE_CODE = EMPLOYEES_PUANTAJ_ROWS.EXPENSE_CODE
			) AS EXP_NAME,
			(
				SELECT
					TOP 1 EXPENSE_ID
				FROM
					EXPENSE_CENTER AS EXPENSE_CENTER
				WHERE
					EXPENSE_CENTER.EXPENSE_CODE = EMPLOYEES_PUANTAJ_ROWS.EXPENSE_CODE
			) AS EMP_EXPENSE_CENTER
		</cfif>,
		EMPLOYEES_IN_OUT.BRANCH_ID,
		EMPLOYEES_IN_OUT.PUANTAJ_GROUP_IDS,
		EMPLOYEES_IN_OUT.DUTY_TYPE,
		EMPLOYEES_IN_OUT.REGISTRY_NO,
		EMPLOYEES_PUANTAJ.STATUE_TYPE,
		ACCOUNT_DEFF.DEFINITION,
        ISNULL((SELECT SUM(VERGI_ISTISNA_AMOUNT) AS VERGI_ISTISNA_AMOUNT FROM EMPLOYEES_PUANTAJ_ROWS_EXT RE WHERE RE.EXT_TYPE = 2 AND RE.EMPLOYEE_PUANTAJ_ID = EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_PUANTAJ_ID AND RE.VERGI_ISTISNA_AMOUNT IS NOT NULL),0) AS VERGI_ISTISNA_AMOUNT_ ,
        ISNULL(EMPLOYEES_PUANTAJ_ROWS.MONEY,'#session.ep.money#') MONEY_,
        ISNULL((SELECT ESC.WORTH FROM EMPLOYEES_SALARY_CHANGE ESC WHERE ESC.COMPANY_ID = 1 AND SALARY_YEAR = EMPLOYEES_PUANTAJ.SAL_YEAR AND SALARY_MONTH = EMPLOYEES_PUANTAJ.SAL_MON AND MONEY = EMPLOYEES_PUANTAJ_ROWS.MONEY),1) AS AMOUNT_RATE ,
        ISNULL((SELECT ESC.WORTH FROM EMPLOYEES_SALARY_CHANGE ESC WHERE ESC.COMPANY_ID = 1 AND SALARY_YEAR = EMPLOYEES_PUANTAJ.SAL_YEAR AND SALARY_MONTH = EMPLOYEES_PUANTAJ.SAL_MON AND MONEY = '#session.ep.money2#'),'') AS AMOUNT_RATE_2 ,
		OUR_COMPANY.ASSET_FILE_NAME2,
		OPR.*
		<cfif (isDefined("attributes.general_paper_tempate") and len(attributes.general_paper_tempate) and (attributes.general_paper_tempate contains 'interruption' or attributes.general_paper_tempate contains 'offtime' or attributes.general_paper_tempate contains 'default-7'))>
			,TITLE
		</cfif>
	FROM
		<cfif (isdefined("attributes.func_id") and len(attributes.func_id))>
			EMPLOYEE_POSITIONS,	
			EMPLOYEE_POSITIONS_CHANGE_HISTORY,
		</cfif>
		<cfif isdefined("attributes.is_virtual_puantaj") and attributes.is_virtual_puantaj eq 1>
			EMPLOYEES_PUANTAJ_VIRTUAL AS EMPLOYEES_PUANTAJ,
			EMPLOYEES_PUANTAJ_ROWS_VIRTUAL AS EMPLOYEES_PUANTAJ_ROWS,
		<cfelse>
			EMPLOYEES_PUANTAJ,
			EMPLOYEES_PUANTAJ_ROWS
			LEFT JOIN OFFICER_PAYROLL_ROW OPR ON OPR.EMPLOYEE_PAYROLL_ID = EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_PUANTAJ_ID
			<cfif (isDefined("attributes.general_paper_tempate") and len(attributes.general_paper_tempate) and (attributes.general_paper_tempate contains 'interruption' or attributes.general_paper_tempate contains 'offtime' or attributes.general_paper_tempate contains 'default-7'))>
				LEFT JOIN SETUP_TITLE ON SETUP_TITLE.TITLE_ID = EMPLOYEES_PUANTAJ_ROWS.TITLE_ID
			</cfif>,
		</cfif>
		EMPLOYEES,
		EMPLOYEES_DETAIL,
		EMPLOYEES_IDENTY,
		DEPARTMENT,
		OUR_COMPANY,
		BRANCH,
		EMPLOYEES_IN_OUT
		LEFT JOIN(
			SELECT 
				SETUP_SALARY_PAYROLL_ACCOUNTS_DEFF.DEFINITION,
				EMPLOYEES_IN_OUT_PERIOD.IN_OUT_ID 
			FROM 
				EMPLOYEES_IN_OUT_PERIOD,
				SETUP_SALARY_PAYROLL_ACCOUNTS_DEFF
			WHERE
				EMPLOYEES_IN_OUT_PERIOD.ACCOUNT_BILL_TYPE = SETUP_SALARY_PAYROLL_ACCOUNTS_DEFF.PAYROLL_ID AND 
				PERIOD_ID = <cfqueryparam cfsqltype="cf_sql_integer" value="#session.ep.period_id#">
		) AS ACCOUNT_DEFF ON EMPLOYEES_IN_OUT.IN_OUT_ID = ACCOUNT_DEFF.IN_OUT_ID
	WHERE
    	<cfif isdefined("puantaj_type_")>
    		PUANTAJ_TYPE = <cfqueryparam cfsqltype="cf_sql_integer" value="#puantaj_type_#"> AND	
        </cfif>
		<cfif isdefined("attributes.func_id") and len(attributes.func_id)>
			EMPLOYEE_POSITIONS.EMPLOYEE_ID = EMPLOYEES.EMPLOYEE_ID AND 
			EMPLOYEE_POSITIONS.IS_MASTER = 1 AND
			(
				EMPLOYEE_POSITIONS.FUNC_ID = <cfqueryparam cfsqltype="cf_sql_integer" value="#attributes.func_id#">
				OR
				(
					EMPLOYEE_POSITIONS_CHANGE_HISTORY.FUNC_ID = <cfqueryparam cfsqltype="cf_sql_integer" value="#attributes.func_id#"> 
					AND
					EMPLOYEE_POSITIONS_CHANGE_HISTORY.START_DATE < <cfqueryparam cfsqltype="cf_sql_timestamp" value="#puantaj_finish_#"> 
					AND 
					(EMPLOYEE_POSITIONS_CHANGE_HISTORY.FINISH_DATE >= <cfqueryparam cfsqltype="cf_sql_timestamp" value="#puantaj_start_#"> OR EMPLOYEE_POSITIONS_CHANGE_HISTORY.FINISH_DATE IS NULL)
				)
			)
			AND
		</cfif>
		<cfif isdefined("attributes.department") and listlen(attributes.department)>
			DEPARTMENT.DEPARTMENT_ID IN (#attributes.department#) AND	
		</cfif>
		<cfif isdefined("attributes.ssk_statute") and listlen(attributes.ssk_statute)>
			EMPLOYEES_IN_OUT.SSK_STATUTE IN (#attributes.ssk_statute#) AND
		</cfif>
		<cfif isdefined("attributes.puantaj_id_list") >
			EMPLOYEES_PUANTAJ_ROWS.PUANTAJ_ID IN (#attributes.puantaj_id_list#) AND
		<cfelseif isdefined("from_payroll_rows") and from_payroll_rows eq 1 and isdefined("attributes.from_cpa") and attributes.from_cpa eq 1>
			EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_PUANTAJ_ID = <cfqueryparam cfsqltype="cf_sql_integer" value="#attributes.PUANTAJ_ID#"> AND
		<cfelse>
			EMPLOYEES_PUANTAJ_ROWS.PUANTAJ_ID = <cfqueryparam cfsqltype="cf_sql_integer" value="#attributes.PUANTAJ_ID#"> AND
		</cfif>
			BRANCH.COMPANY_ID = OUR_COMPANY.COMP_ID AND
		<cfif isdefined("attributes.EXPENSE_CENTER") and listlen(attributes.EXPENSE_CENTER)>
			EMPLOYEES_PUANTAJ_ROWS.EXPENSE_CODE IN ('#replace(attributes.EXPENSE_CENTER,",","','","all")#') AND
		</cfif>
			EMPLOYEES_IN_OUT.DEPARTMENT_ID = DEPARTMENT.DEPARTMENT_ID AND
            ---EMPLOYEES_PUANTAJ_ROWS.DEPARTMENT_ID = DEPARTMENT.DEPARTMENT_ID AND 
			EMPLOYEES_PUANTAJ_ROWS.IN_OUT_ID = EMPLOYEES_IN_OUT.IN_OUT_ID AND
			EMPLOYEES_PUANTAJ_ROWS.PUANTAJ_ID = EMPLOYEES_PUANTAJ.PUANTAJ_ID AND
			EMPLOYEES.EMPLOYEE_ID = EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_ID AND
			EMPLOYEES.EMPLOYEE_ID = EMPLOYEES_DETAIL.EMPLOYEE_ID AND
			---EMPLOYEES_PUANTAJ.SSK_OFFICE = BRANCH.SSK_OFFICE AND
			---EMPLOYEES_PUANTAJ.SSK_OFFICE_NO = BRANCH.SSK_NO AND
			EMPLOYEES_IDENTY.EMPLOYEE_ID = EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_ID AND 
			EMPLOYEES_PUANTAJ_ROWS.EMPLOYEE_ID = EMPLOYEES_IN_OUT.EMPLOYEE_ID AND
			---EMPLOYEES_IN_OUT.BRANCH_ID = BRANCH.BRANCH_ID AND
            EMPLOYEES_PUANTAJ.SSK_BRANCH_ID = BRANCH.BRANCH_ID AND
			<cfif (isdefined("get_program_parameters.FIRST_DAY_MONTH") and len(get_program_parameters.FIRST_DAY_MONTH) and not(get_program_parameters.FIRST_DAY_MONTH eq 1 and get_program_parameters.LAST_DAY_MONTH eq 0)) and isdefined("finish_date_new") and len(finish_date_new) and isdefined("start_date_new") and len(start_date_new) >
				EMPLOYEES_IN_OUT.START_DATE <= <cfqueryparam CFSQLType = "cf_sql_timestamp" value = "#finish_date_new#">
				AND
				(
					(EMPLOYEES_IN_OUT.FINISH_DATE >= <cfqueryparam CFSQLType = "cf_sql_timestamp" value = "#start_date_new#">) OR EMPLOYEES_IN_OUT.FINISH_DATE IS NULL
				)
			<cfelse>
				EMPLOYEES_IN_OUT.START_DATE < <cfqueryparam cfsqltype="cf_sql_timestamp" value="#puantaj_finish_#"> AND 
				(EMPLOYEES_IN_OUT.FINISH_DATE >= <cfqueryparam cfsqltype="cf_sql_timestamp" value="#puantaj_start_#"> OR EMPLOYEES_IN_OUT.FINISH_DATE IS NULL)
			</cfif>
			<cfif not session.ep.ehesap>
			AND BRANCH.BRANCH_ID IN (
								SELECT
									BRANCH_ID
								FROM
									EMPLOYEE_POSITION_BRANCHES
								WHERE
									EMPLOYEE_POSITION_BRANCHES.POSITION_CODE = <cfqueryparam cfsqltype="cf_sql_integer" value="#session.ep.position_code#">
								)
			</cfif>
		<cfif isdefined("attributes.employee_name") and len(attributes.employee_name)>
			AND EMPLOYEES.EMPLOYEE_NAME LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.employee_name#%">
		</cfif>
		<cfif isdefined('attributes.hierarchy') and len(attributes.hierarchy)>
			AND 
				(
					EMPLOYEES.OZEL_KOD LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.hierarchy#%"> OR
					EMPLOYEES.OZEL_KOD2 LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.hierarchy#%"> OR
					EMPLOYEES.HIERARCHY LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.hierarchy#%"> OR
					EMPLOYEES.EMPLOYEE_ID IN(SELECT EMPLOYEE_ID FROM EMPLOYEE_POSITIONS WHERE OZEL_KOD LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.hierarchy#%">)
				)
		</cfif>
		<cfif isdefined('attributes.hierarchy_puantaj') and len(attributes.hierarchy_puantaj)>
			AND 
				(
					EMPLOYEES.OZEL_KOD LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.hierarchy_puantaj#%"> OR
					EMPLOYEES.OZEL_KOD2 LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.hierarchy_puantaj#%"> OR
					EMPLOYEES.HIERARCHY LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.hierarchy_puantaj#%"> OR
					EMPLOYEES.EMPLOYEE_ID IN(SELECT EMPLOYEE_ID FROM EMPLOYEE_POSITIONS WHERE OZEL_KOD LIKE <cfqueryparam cfsqltype="cf_sql_varchar" value="%#attributes.hierarchy_puantaj#%">)
				)
		</cfif>
		<cfif isdefined("attributes.duty_type") and listlen(attributes.duty_type)>
			AND EMPLOYEES_IN_OUT.DUTY_TYPE IN ('#replace(attributes.duty_type,",","','","all")#')
		</cfif>
		<cfif isdefined("attributes.period_code_cat") and listlen(attributes.period_code_cat)>
			<!---AND EMPLOYEES_IN_OUT.IN_OUT_ID IN(SELECT IN_OUT_ID FROM EMPLOYEES_IN_OUT_PERIOD WHERE PERIOD_ID = #session.ep.period_id# AND ACCOUNT_BILL_TYPE IN('#replace(attributes.period_code_cat,",","','","all")#'))--->
			AND EMPLOYEES_PUANTAJ_ROWS.ACCOUNT_BILL_TYPE IN('#replace(attributes.period_code_cat,",","','","all")#')
        </cfif>
		<cfif isdefined("attributes.ssk_statue") and len(attributes.ssk_statue)>
			AND EMPLOYEES_IN_OUT.USE_SSK = <cfqueryparam cfsqltype="cf_sql_integer" value="#attributes.ssk_statue#">
			<cfif attributes.ssk_statue eq 2>
				AND EMPLOYEES_PUANTAJ.STATUE_TYPE = <cfqueryparam CFSQLType = "cf_sql_integer" value = "#attributes.statue_type#">
				<cfif attributes.statue_type_individual neq 0>
					AND EMPLOYEES_PUANTAJ.STATUE_TYPE_INDIVIDUAL = <cfqueryparam CFSQLType = "cf_sql_integer" value = "#attributes.statue_type_individual#">
				</cfif>
			</cfif>
        </cfif>
		<cfinclude template="../../query/get_emp_codes.cfm">
		<cfif fusebox.dynamic_hierarchy>
			<cfloop list="#emp_code_list#" delimiters="+" index="code_i">
				<cfif database_type is "MSSQL">
					AND 
					('.' + EMPLOYEES.DYNAMIC_HIERARCHY + '.' + EMPLOYEES.DYNAMIC_HIERARCHY_ADD + '.') LIKE '%.#code_i#.%'
						
				<cfelseif database_type is "DB2">
					AND 
					('.' || EMPLOYEES.DYNAMIC_HIERARCHY || '.' || EMPLOYEES.DYNAMIC_HIERARCHY_ADD || '.') LIKE '%.#code_i#.%'
						
				</cfif>
			</cfloop>
		<cfelse>
			<cfloop list="#emp_code_list#" delimiters="+" index="code_i">
				<cfif database_type is "MSSQL">
					AND ('.' + EMPLOYEES.HIERARCHY + '.') LIKE '%.#code_i#.%'
				<cfelseif database_type is "DB2">
					AND ('.' || EMPLOYEES.HIERARCHY || '.') LIKE '%.#code_i#.%'
				</cfif>
			</cfloop>
		</cfif>
	ORDER BY
		EMPLOYEES.EMPLOYEE_NAME,
		EMPLOYEES.EMPLOYEE_SURNAME
</cfquery>
<!---
<pre><cfdump var="#get_puantaj_rows#">
---->