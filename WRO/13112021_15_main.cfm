<!-- Description : Holistic 21.1 tablo ve kolon farklarÄ± wrosu
Developer: Fatih Kara
Company : Workcube
Destination: Main -->
<querytag>
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'DICTIONARY_ID')
    BEGIN
      ALTER TABLE WRK_OUTPUT_TEMPLATES ADD DICTIONARY_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_CAUTION' AND COLUMN_NAME = 'INTERRUPTION_DENOMINATOR')
    BEGIN
      ALTER TABLE EMPLOYEES_CAUTION ADD INTERRUPTION_DENOMINATOR int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_CAUTION' AND COLUMN_NAME = 'INTERRUPTION_DIVIDEND')
    BEGIN
      ALTER TABLE EMPLOYEES_CAUTION ADD INTERRUPTION_DIVIDEND int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_CAUTION' AND COLUMN_NAME = 'INTERRUPTION_ID')
    BEGIN
      ALTER TABLE EMPLOYEES_CAUTION ADD INTERRUPTION_ID int;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_OFFTIME' AND COLUMN_NAME = 'CALC_CALENDAR_DAY')
    BEGIN 
      ALTER TABLE SETUP_OFFTIME ALTER COLUMN CALC_CALENDAR_DAY bit NOT NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'MY_SETTINGS' AND COLUMN_NAME = 'WEEK_START')
    BEGIN
      ALTER TABLE MY_SETTINGS ADD WEEK_START bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EVENT' AND COLUMN_NAME = 'CREATED_GOOGLE_EVENT_ID')
    BEGIN
      ALTER TABLE EVENT ADD CREATED_GOOGLE_EVENT_ID nvarchar(150);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EVENT' AND COLUMN_NAME = 'IS_GOOGLE_CAL')
    BEGIN
      ALTER TABLE EVENT ADD IS_GOOGLE_CAL bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMMANDMENT_HISTORY' AND COLUMN_NAME = 'EMP_APPROVE')
    BEGIN
      ALTER TABLE COMMANDMENT_HISTORY ADD EMP_APPROVE bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMMANDMENT_HISTORY' AND COLUMN_NAME = 'EMP_APPROVE_DATE')
    BEGIN
      ALTER TABLE COMMANDMENT_HISTORY ADD EMP_APPROVE_DATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EGOVERNMENT_INTEGRATION_TYPES')
    BEGIN
      CREATE TABLE [EGOVERNMENT_INTEGRATION_TYPES](	  [ID] int NOT NULL IDENTITY(1,1)	, [TYPE] nvarchar(50) NULL	, [ALIAS] nvarchar(50) NULL	, CONSTRAINT [PK__EGOVERNM__3214EC27F14F1AD1] PRIMARY KEY ([ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'STOCKS_LOCATION' AND COLUMN_NAME = 'IS_RECYCLE_LOCATION')
    BEGIN
      ALTER TABLE STOCKS_LOCATION ADD IS_RECYCLE_LOCATION int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'IS_ACCEPT_TEST')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD IS_ACCEPT_TEST bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'IS_ACCEPT')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD IS_ACCEPT bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'AMOUNT')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD AMOUNT float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'DESCRIPTION')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD DESCRIPTION nvarchar(300);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'UPDATE_DATE')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD UPDATE_DATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'SAMPLE_METHOD')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD SAMPLE_METHOD int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'STANDART_VALUE')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD STANDART_VALUE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'UPDATE_EMP')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD UPDATE_EMP int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'RESULT')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS_ROW ADD RESULT float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS_ROW' AND COLUMN_NAME = 'SAMPLE_NUMBER')
    BEGIN
     ALTER TABLE REFINERY_LAB_TESTS_ROW ADD SAMPLE_NUMBER float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WORKNET_RELATION_PRODUCT')
    BEGIN
      CREATE TABLE [WORKNET_RELATION_PRODUCT](	  [ID] int NOT NULL IDENTITY(1,1)	, [WORKNET_ID] int NULL	, [PRODUCT_ID] int NULL	, [RECORD_EMP] int NULL	, [RECORD_IP] nvarchar(100) NULL	, [RECORD_DATE] datetime NULL	, [UPDATE_EMP] int NULL	, [UPDATE_IP] nvarchar(100) NULL	, [UPDATE_DATE] datetime NULL	, [WORKNET] nvarchar(150) NULL	, [IMAGE_PATH] nvarchar(200) NULL	, [SERVER_IMAGE_PATH_ID] int NULL	, CONSTRAINT [PK__WORKNET___3214EC27B6B64BDA] PRIMARY KEY ([ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'GENERAL_PAPERS_MAIN' AND COLUMN_NAME = 'PACKAGE_NO')
    BEGIN
      ALTER TABLE GENERAL_PAPERS_MAIN ADD PACKAGE_NO nvarchar(40);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'GENERAL_PAPERS_MAIN' AND COLUMN_NAME = 'PACKAGE_NUMBER')
    BEGIN
      ALTER TABLE GENERAL_PAPERS_MAIN ADD PACKAGE_NUMBER int;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_WATOMIC_FAMILY' AND COLUMN_NAME = 'WRK_WATOMIC_FAMILY_ICON')
    BEGIN
      ALTER TABLE WRK_WATOMIC_FAMILY ALTER COLUMN WRK_WATOMIC_FAMILY_ICON varchar(50) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS' AND COLUMN_NAME = 'REPORT_CONTENT')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS ADD REPORT_CONTENT nvarchar(max);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'REFINERY_LAB_TESTS' AND COLUMN_NAME = 'SAMPLING_ID')
    BEGIN
      ALTER TABLE REFINERY_LAB_TESTS ADD SAMPLING_ID int;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WORKNET_PRODUCT_RELATION_SUPPLIER' AND COLUMN_NAME = 'COMPANY_ID')
    BEGIN
      ALTER TABLE WORKNET_PRODUCT_RELATION_SUPPLIER ALTER COLUMN COMPANY_ID varchar(100) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARY_FACTOR_DEFINITION' AND COLUMN_NAME = 'COLLECTIVE_AGREEMENT_BONUS_AMOUNT')
    BEGIN
      ALTER TABLE SALARY_FACTOR_DEFINITION ADD COLLECTIVE_AGREEMENT_BONUS_AMOUNT float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARY_FACTOR_DEFINITION' AND COLUMN_NAME = 'COLLECTIVE_AGREEMENT_BONUS_MONTH')
    BEGIN
      ALTER TABLE SALARY_FACTOR_DEFINITION ADD COLLECTIVE_AGREEMENT_BONUS_MONTH nvarchar(50);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARY_FACTOR_DEFINITION' AND COLUMN_NAME = 'HIGHEST_CIVIL_SERVANT_SALARY')
    BEGIN
      ALTER TABLE SALARY_FACTOR_DEFINITION ADD HIGHEST_CIVIL_SERVANT_SALARY float;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'CONSUMER_HISTORY' AND COLUMN_NAME = 'CONSUMER_PASSWORD')
    BEGIN
      ALTER TABLE CONSUMER_HISTORY ALTER COLUMN CONSUMER_PASSWORD nvarchar(300) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'GOOGLE_CLIENT_SECRET')
    BEGIN
      ALTER TABLE OUR_COMPANY_INFO ADD GOOGLE_CLIENT_SECRET nvarchar(150);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'ACCOUNTER_DOMAIN')
    BEGIN
      ALTER TABLE OUR_COMPANY_INFO ADD ACCOUNTER_DOMAIN nvarchar(150);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'GOOGLE_CLIENT_ID')
    BEGIN
      ALTER TABLE OUR_COMPANY_INFO ADD GOOGLE_CLIENT_ID nvarchar(150);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'EINVOICE_TYPE_ALIAS')
    BEGIN
      ALTER TABLE OUR_COMPANY_INFO ADD EINVOICE_TYPE_ALIAS nvarchar(50);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'IS_ACCOUNTER_INTEGRATED')
    BEGIN
      ALTER TABLE OUR_COMPANY_INFO ADD IS_ACCOUNTER_INTEGRATED bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'ACCOUNTER_KEY')
    BEGIN
      ALTER TABLE OUR_COMPANY_INFO ADD ACCOUNTER_KEY nvarchar(100);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_DAILY_IN_OUT_HISTORY' AND COLUMN_NAME = 'ALLOWANCE_ID')
    BEGIN
      ALTER TABLE EMPLOYEE_DAILY_IN_OUT_HISTORY ADD ALLOWANCE_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_DAILY_IN_OUT_HISTORY' AND COLUMN_NAME = 'SSK_STATUE')
    BEGIN
      ALTER TABLE EMPLOYEE_DAILY_IN_OUT_HISTORY ADD SSK_STATUE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_DAILY_IN_OUT_HISTORY' AND COLUMN_NAME = 'STATUE_TYPE')
    BEGIN
      ALTER TABLE EMPLOYEE_DAILY_IN_OUT_HISTORY ADD STATUE_TYPE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_DAILY_IN_OUT_HISTORY' AND COLUMN_NAME = 'TOTAL_WORK_HOUR')
    BEGIN
      ALTER TABLE EMPLOYEE_DAILY_IN_OUT_HISTORY ADD TOTAL_WORK_HOUR float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_DAILY_IN_OUT_HISTORY' AND COLUMN_NAME = 'DAILY_WORKING_HOUR')
    BEGIN
      ALTER TABLE EMPLOYEE_DAILY_IN_OUT_HISTORY ADD DAILY_WORKING_HOUR float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_DAILY_IN_OUT_HISTORY' AND COLUMN_NAME = 'FROM_HOURLY_ADDFARE')
    BEGIN
      ALTER TABLE EMPLOYEE_DAILY_IN_OUT_HISTORY ADD FROM_HOURLY_ADDFARE bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_DAILY_IN_OUT_HISTORY' AND COLUMN_NAME = 'PAPER_NO')
    BEGIN
      ALTER TABLE EMPLOYEE_DAILY_IN_OUT_HISTORY ADD PAPER_NO nvarchar(15);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'CONTENT_HISTORY' AND COLUMN_NAME = 'CONT_HEAD')
    BEGIN
      ALTER TABLE CONTENT_HISTORY ALTER COLUMN CONT_HEAD nvarchar(250) NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_BESTPRACTICE' AND COLUMN_NAME = 'BESTPRACTICE_LICENSE')
    BEGIN
      ALTER TABLE WRK_BESTPRACTICE ALTER COLUMN BESTPRACTICE_LICENSE nvarchar(50) NOT NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING_GROUP_ATTENDERS' AND COLUMN_NAME = 'NOTE_FOR_ATTENDER')
    BEGIN
      ALTER TABLE TRAINING_GROUP_ATTENDERS ADD NOTE_FOR_ATTENDER nvarchar(1500);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY' AND COLUMN_NAME = 'ACCOUNTER_KEY')
    BEGIN
      ALTER TABLE OUR_COMPANY ADD ACCOUNTER_KEY nvarchar(100);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PRO_WORKS' AND COLUMN_NAME = 'WORK_HEAD')
    BEGIN
      ALTER TABLE PRO_WORKS ALTER COLUMN WORK_HEAD nvarchar(250) NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMPANY' AND COLUMN_NAME = 'IS_PERSON')
    BEGIN
      ALTER TABLE COMPANY ALTER COLUMN IS_PERSON bit NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMPANY' AND COLUMN_NAME = 'USE_EFATURA')
    BEGIN
      ALTER TABLE COMPANY ALTER COLUMN USE_EFATURA bit NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMPANY_HISTORY' AND COLUMN_NAME = 'IS_PERSON')
    BEGIN
      ALTER TABLE COMPANY_HISTORY ALTER COLUMN IS_PERSON bit NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_WIDGETS' AND COLUMN_NAME = 'WIDGET_BOX_DATA')
    BEGIN
      ALTER TABLE PROTEIN_WIDGETS ALTER COLUMN WIDGET_BOX_DATA text NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_WIDGETS' AND COLUMN_NAME = 'WIDGET_EXTEND')
    BEGIN
      ALTER TABLE PROTEIN_WIDGETS ALTER COLUMN WIDGET_EXTEND text NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_WIDGETS' AND COLUMN_NAME = 'WIDGET_DATA')
    BEGIN
      ALTER TABLE PROTEIN_WIDGETS ALTER COLUMN WIDGET_DATA text NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_GIB')
    BEGIN
      CREATE TABLE [SETUP_GIB](	  [PARAM_ID] int NOT NULL IDENTITY(1,1)	, [GIB_USERNAME] nvarchar(250) NOT NULL	, [GIB_PASSWORD] nvarchar(250) NOT NULL	, [RECORD_EMP] int NULL	, [RECORD_DATE] datetime NULL);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_SITES' AND COLUMN_NAME = 'THEME_DATA')
    BEGIN
      ALTER TABLE PROTEIN_SITES ALTER COLUMN THEME_DATA text NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_SITES' AND COLUMN_NAME = 'ACCESS_DATA')
    BEGIN
      ALTER TABLE PROTEIN_SITES ALTER COLUMN ACCESS_DATA text NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_SITES' AND COLUMN_NAME = 'PRIMARY_DATA')
    BEGIN
      ALTER TABLE PROTEIN_SITES ALTER COLUMN PRIMARY_DATA text NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_SITES' AND COLUMN_NAME = 'ZONE_DATA')
    BEGIN
      ALTER TABLE PROTEIN_SITES ALTER COLUMN ZONE_DATA text NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_PAYMENT_INTERRUPTION' AND COLUMN_NAME = 'IS_DISCIPLINARY_PUNISHMENT')
    BEGIN
      ALTER TABLE SETUP_PAYMENT_INTERRUPTION ADD IS_DISCIPLINARY_PUNISHMENT bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_MENUS' AND COLUMN_NAME = 'MENU_LANGUAGE')
    BEGIN
      ALTER TABLE PROTEIN_MENUS ADD MENU_LANGUAGE varchar;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_MENUS' AND COLUMN_NAME = 'MENU_DATA')
    BEGIN
      ALTER TABLE PROTEIN_MENUS ALTER COLUMN MENU_DATA text NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING_GROUP_SUBJECTS' AND COLUMN_NAME = 'STATUS')
    BEGIN
      ALTER TABLE TRAINING_GROUP_SUBJECTS ADD STATUS bit;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'CONSUMER' AND COLUMN_NAME = 'CONSUMER_PASSWORD')
    BEGIN
      ALTER TABLE CONSUMER ALTER COLUMN CONSUMER_PASSWORD nvarchar(300) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARYPARAM_GET' AND COLUMN_NAME = 'CAUTION_ID')
    BEGIN
      ALTER TABLE SALARYPARAM_GET ADD CAUTION_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARYPARAM_GET' AND COLUMN_NAME = 'PROCESS_STAGE')
    BEGIN
      ALTER TABLE SALARYPARAM_GET ADD PROCESS_STAGE int;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'GUNLUK_RAPOR' AND COLUMN_NAME = 'OLAYLAR')
    BEGIN
      ALTER TABLE GUNLUK_RAPOR ALTER COLUMN OLAYLAR ntext NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'GUNLUK_RAPOR' AND COLUMN_NAME = 'INSAAT')
    BEGIN
      ALTER TABLE GUNLUK_RAPOR ALTER COLUMN INSAAT ntext NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'GUNLUK_RAPOR' AND COLUMN_NAME = 'ELEKTRIK')
    BEGIN
      ALTER TABLE GUNLUK_RAPOR ALTER COLUMN ELEKTRIK ntext NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'GUNLUK_RAPOR' AND COLUMN_NAME = 'MEKANIK')
    BEGIN
      ALTER TABLE GUNLUK_RAPOR ALTER COLUMN MEKANIK ntext NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_PAGES' AND COLUMN_NAME = 'PAGE_DATA')
    BEGIN
      ALTER TABLE PROTEIN_PAGES ALTER COLUMN PAGE_DATA text NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'IS_EDUCATION_ALLOWANCE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD IS_EDUCATION_ALLOWANCE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'STEP_NORMAL')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD STEP_NORMAL int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'IS_AUDIT_COMPENSATION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD IS_AUDIT_COMPENSATION bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'SUSPENSION_FINISHDATE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD SUSPENSION_FINISHDATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'FINANCIAL_RESPONSIBILITY')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD FINANCIAL_RESPONSIBILITY float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'SEVERANCE_PENSION_SCORE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD SEVERANCE_PENSION_SCORE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'IS_PENANCE_DEDUCTION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD IS_PENANCE_DEDUCTION bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'DEFECTION_FINISHDATE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD DEFECTION_FINISHDATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'ADMINISTRATIVE_ACADEMIC')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD ADMINISTRATIVE_ACADEMIC bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'BUSINESS_RISK_EMP')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD BUSINESS_RISK_EMP float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'IS_VETERAN')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD IS_VETERAN bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'JUL_DIFFICULTIES')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD JUL_DIFFICULTIES float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'IS_SUSPENSION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD IS_SUSPENSION bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'WORK_DIFFICULTY')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD WORK_DIFFICULTY float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'DEFECTION_STARTDATE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD DEFECTION_STARTDATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'ADDITIONAL_INDICATOR_COMPENSATION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD ADDITIONAL_INDICATOR_COMPENSATION float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'ADDITIONAL_SCORE_NORMAL')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD ADDITIONAL_SCORE_NORMAL float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'AUDIT_COMPENSATION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD AUDIT_COMPENSATION float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'GRADE_NORMAL')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD GRADE_NORMAL int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'SUSPENSION_STARTDATE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT ADD SUSPENSION_STARTDATE datetime;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'LIBRARY_ASSET' AND COLUMN_NAME = 'IMAGE_PATH')
    BEGIN
      ALTER TABLE LIBRARY_ASSET ALTER COLUMN IMAGE_PATH varchar(500) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'DEDUCTIBLE_CONTRIBUTION_RATE')
    BEGIN
      CREATE TABLE [DEDUCTIBLE_CONTRIBUTION_RATE](	  [DEDUCTIBLE_CONTRIBUTION_RATE_ID] int NOT NULL IDENTITY(1,1)	, [TITLE] nvarchar(150) NULL	, [STARTDATE] datetime NULL	, [FINISHDATE] datetime NULL	, [MIN_PAYMENT_1] float NULL	, [MAX_PAYMENT_1] float NULL	, [RATIO_1] float NULL	, [MIN_PAYMENT_2] float NULL	, [MAX_PAYMENT_2] float NULL	, [RATIO_2] float NULL	, [MIN_PAYMENT_3] float NULL	, [MAX_PAYMENT_3] float NULL	, [RATIO_3] float NULL	, [MIN_PAYMENT_4] float NULL	, [MAX_PAYMENT_4] float NULL	, [RATIO_4] float NULL	, [MIN_PAYMENT_5] float NULL	, [MAX_PAYMENT_5] float NULL	, [RATIO_5] float NULL	, [MIN_PAYMENT_6] float NULL	, [MAX_PAYMENT_6] float NULL	, [RATIO_6] float NULL	, [MIN_PAYMENT_7] float NULL	, [MAX_PAYMENT_7] float NULL	, [RATIO_7] float NULL	, [RECORD_DATE] datetime NULL	, [RECORD_IP] nvarchar(50) NULL	, [RECORD_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, [UPDATE_IP] nvarchar(50) NULL	, [UPDATE_EMP] int NULL	, CONSTRAINT [PK__DEDUCTIB__3008420D2AB542DD] PRIMARY KEY ([DEDUCTIBLE_CONTRIBUTION_RATE_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'ASSET_P_PARTS')
    BEGIN
      CREATE TABLE [ASSET_P_PARTS](	  [ASSET_P_PARTS_ID] int NOT NULL IDENTITY(1,1)	, [ASSET_P_ID] int NULL	, [PRODUCT_ID] int NULL	, [STOCK_ID] int NULL	, [CHANGE_PERIOD] int NULL	, [CHANGE_AMOUNT] int NULL	, [SPECT_ID] int NULL	, [RISK_POINT] int NULL	, [QUANTIY] int NULL	, [PRODUCT_UNIT_ID] int NULL	, [DETAIL] nvarchar(200) NULL	, [RECORD_DATE] datetime NULL	, [UPDATE_DATE] datetime NULL	, [RECORD_IP] nvarchar(50) NULL	, [UPDATE_IP] nvarchar(50) NULL	, [RECORD_EMP] int NULL	, [UPDATE_EMP] int NULL	, CONSTRAINT [PK_ASSET_P_PARTS] PRIMARY KEY ([ASSET_P_PARTS_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'IS_EDUCATION_ALLOWANCE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD IS_EDUCATION_ALLOWANCE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'STEP_NORMAL')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD STEP_NORMAL int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'IS_AUDIT_COMPENSATION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD IS_AUDIT_COMPENSATION bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'SUSPENSION_FINISHDATE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD SUSPENSION_FINISHDATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'FINANCIAL_RESPONSIBILITY')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD FINANCIAL_RESPONSIBILITY float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'SEVERANCE_PENSION_SCORE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD SEVERANCE_PENSION_SCORE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'IS_PENANCE_DEDUCTION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD IS_PENANCE_DEDUCTION bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'DEFECTION_FINISHDATE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD DEFECTION_FINISHDATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'ADMINISTRATIVE_ACADEMIC')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD ADMINISTRATIVE_ACADEMIC bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'BUSINESS_RISK_EMP')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD BUSINESS_RISK_EMP float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'IS_VETERAN')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD IS_VETERAN bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'JUL_DIFFICULTIES')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD JUL_DIFFICULTIES float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'STARTDATE_SHIFT')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD STARTDATE_SHIFT datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'IS_SUSPENSION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD IS_SUSPENSION bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'WORK_DIFFICULTY')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD WORK_DIFFICULTY float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'DEFECTION_STARTDATE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD DEFECTION_STARTDATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'FINISHDATE_SHIFT')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD FINISHDATE_SHIFT datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'ADDITIONAL_INDICATOR_COMPENSATION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD ADDITIONAL_INDICATOR_COMPENSATION float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'ADDITIONAL_SCORE_NORMAL')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD ADDITIONAL_SCORE_NORMAL float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'AUDIT_COMPENSATION')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD AUDIT_COMPENSATION float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'GRADE_NORMAL')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD GRADE_NORMAL int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'SUSPENSION_STARTDATE')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD SUSPENSION_STARTDATE datetime;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'USE_SSK')
    BEGIN
      ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ALTER COLUMN USE_SSK bit NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WODIBA_RULE_SETS' AND COLUMN_NAME = 'MATCH_COMPANY_BY_INVOICE_NUMBER')
    BEGIN
      ALTER TABLE WODIBA_RULE_SETS ADD MATCH_COMPANY_BY_INVOICE_NUMBER bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES' AND COLUMN_NAME = 'TEL_TYPE')
    BEGIN
        ALTER TABLE EMPLOYEES ADD  TEL_TYPE int NULL
    END
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME='GOOGLE_API_KEY')
    BEGIN
        ALTER TABLE OUR_COMPANY_INFO ADD GOOGLE_API_KEY nvarchar(150) NULL
    END  
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME='GOOGLE_LANGUAGE')
    BEGIN
        ALTER TABLE OUR_COMPANY_INFO ADD GOOGLE_LANGUAGE varchar(150) NULL
    END  
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'ESHIPMENT_INTEGRATION_INFO' AND COLUMN_NAME = 'ESHIPMENT_TYPE_ALIAS')
    BEGIN
      ALTER TABLE ESHIPMENT_INTEGRATION_INFO ADD ESHIPMENT_TYPE_ALIAS nvarchar(50);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_WATOMIC_SOLUTION' AND COLUMN_NAME = 'WRK_WATOMIC_SOLUTION_ID')
    BEGIN
      ALTER TABLE WRK_WATOMIC_SOLUTION ALTER COLUMN WRK_WATOMIC_SOLUTION_ID int NOT NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMMANDMENT' AND COLUMN_NAME = 'EMP_APPROVE')
    BEGIN
      ALTER TABLE COMMANDMENT ADD EMP_APPROVE bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMMANDMENT' AND COLUMN_NAME = 'EMP_APPROVE_DATE')
    BEGIN
      ALTER TABLE COMMANDMENT ADD EMP_APPROVE_DATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARYPARAM_PAY' AND COLUMN_NAME = 'VALID_DATE')
    BEGIN
      ALTER TABLE SALARYPARAM_PAY ADD VALID_DATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARYPARAM_PAY' AND COLUMN_NAME = 'IS_VALID')
    BEGIN
      ALTER TABLE SALARYPARAM_PAY ADD IS_VALID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARYPARAM_PAY' AND COLUMN_NAME = 'PROCESS_STAGE')
    BEGIN
      ALTER TABLE SALARYPARAM_PAY ADD PROCESS_STAGE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SALARYPARAM_PAY' AND COLUMN_NAME = 'VALID_EMPLOYEE_ID')
    BEGIN
      ALTER TABLE SALARYPARAM_PAY ADD VALID_EMPLOYEE_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WAI_SETTINGS')
    BEGIN
      CREATE TABLE [WAI_SETTINGS](	  [WAI_SETTINGS_ID] int NOT NULL IDENTITY(1,1)	, [NAME] nvarchar(50) NULL	, [EMPLOYEE_ID] int NULL	, [PERIOD] int NULL	, [RECORD_DATE] datetime NULL	, [RECORD_EMP] int NULL	, [RECORD_IP] nvarchar(50) NULL	, [UPDATE_EMP] int NULL	, [UPDATE_IP] nvarchar(50) NULL	, [UPDATE_DATE] datetime NULL	, CONSTRAINT [PK__WAI_SETT__64D5B9D2505D17CE] PRIMARY KEY ([WAI_SETTINGS_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'LAB_SAMPLING_ROW')
    BEGIN
      CREATE TABLE [LAB_SAMPLING_ROW](	  [SAMPLING_ROW_ID] int NOT NULL IDENTITY(1,1)	, [SAMPLING_ID] int NULL	, [STOCK_ID] int NULL	, [DESCRIPTION] nvarchar(250) NULL	, [LOT_NO] nvarchar(50) NULL	, [SPECT_ID] int NULL	, [SAMPLE_AMOUNT] float NULL	, [SERIAL_NO] nvarchar(50) NULL	, [PRODUCT_ID] int NULL	, [STOCK_UNIT_ID] int NULL	, [STOCK_ROW_ID] int NULL);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND COLUMN_NAME = 'IS_4691_CONTROL')
    BEGIN
      ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ALTER COLUMN IS_4691_CONTROL bit NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_APP' AND COLUMN_NAME = 'EMPAPP_PASSWORD')
    BEGIN
      ALTER TABLE EMPLOYEES_APP ALTER COLUMN EMPAPP_PASSWORD nvarchar(300) NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_TEMPLATES' AND COLUMN_NAME = 'DESIGN_DATA')
    BEGIN
      ALTER TABLE PROTEIN_TEMPLATES ALTER COLUMN DESIGN_DATA text NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMPANY_PARTNER' AND COLUMN_NAME = 'COMPANY_PARTNER_PASSWORD')
    BEGIN
      ALTER TABLE COMPANY_PARTNER ALTER COLUMN COMPANY_PARTNER_PASSWORD nvarchar(300) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WAI_QUESTIONS')
    BEGIN
      CREATE TABLE [WAI_QUESTIONS](	  [WAI_QUESTION_ID] int NOT NULL IDENTITY(1,1)	, [WAI_QUESTION] nvarchar(MAX) NULL	, CONSTRAINT [PK__WAI_QUES__4CDFB447448C9965] PRIMARY KEY ([WAI_QUESTION_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'QUIZ_TRAINING_SUBJECTS')
    BEGIN
      CREATE TABLE [QUIZ_TRAINING_SUBJECTS](	  [QUIZ_TRAINING_SUBJECTS] int NOT NULL IDENTITY(1,1)	, [QUIZ_ID] int NULL	, [TRAINING_SUBJECT_ID] int NULL	, [RECORD_EMP] int NULL	, [RECORD_DATE] datetime NULL	, [UPDATE_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, [RECORD_IP] nvarchar(50) NULL	, CONSTRAINT [PK__QUIZ_TRA__2F6A9520562CCD38] PRIMARY KEY ([QUIZ_TRAINING_SUBJECTS] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SPEC_PLP')
    BEGIN
      CREATE TABLE [SPEC_PLP](	  [PLP_ID] int NOT NULL	, [COMPANY_ID] int NULL	, [CONSUMER_ID] int NULL	, [STOCK_ID] int NULL	, [DESIGN_NAME] nvarchar(250) NULL	, [CATEGORY_ID] int NULL	, [WIDTH] int NULL	, [HEIGHT] int NULL	, [ORDER_QUANTITY] int NULL	, [GILDING_ID] int NULL	, [IS_LACQUER] bit NULL	, [IS_VARNISH] bit NULL	, [IS_CELLOPHANE] bit NULL	, [PRINTING_TECHNIQUE] int NULL	, [PRODUCT_ID] int NULL	, [QUANTITY_UNIT] int NULL	, [APPLICATION_ID] int NULL	, [MOLD_NO] int NULL	, [MOLD_COST] float NULL	, [PACKAGE_TYPE_ID] int NULL	, [PCS_PER_PACK] int NULL	, [NUMBER_OF_PACK] int NULL	, [IS_DESIGNED] bit NULL	, [IS_PRINT_DESIGNED] bit NULL	, [TIME_COST_DESIGN] int NULL	, [TIME_COST_PRINT] int NULL	, [DETAIL] nvarchar(500) NULL	, [CONFIGURATOR_NO] nvarchar(50) NULL	, [ORDER_ID] int NULL	, [PROCESS_STAGE] int NULL	, CONSTRAINT [PK__SPEC_PLP__7A531671B847AF79] PRIMARY KEY ([PLP_ID] ASC));
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'BUGS' AND COLUMN_NAME = 'WORKCUBE_NAME')
    BEGIN
      ALTER TABLE BUGS ALTER COLUMN WORKCUBE_NAME nvarchar(200) NOT NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_HEALTY' AND COLUMN_NAME = 'DOCTOR_EMP_ID')
    BEGIN
      ALTER TABLE EMPLOYEE_HEALTY ADD DOCTOR_EMP_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_HEALTY' AND COLUMN_NAME = 'DOCTOR_COMP_ID')
    BEGIN
      ALTER TABLE EMPLOYEE_HEALTY ADD DOCTOR_COMP_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEE_HEALTY' AND COLUMN_NAME = 'HEALTY_STAGE')
    BEGIN
      ALTER TABLE EMPLOYEE_HEALTY ADD HEALTY_STAGE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_ACADEMIC_PERSONNEL')
    BEGIN
      CREATE TABLE [SETUP_ACADEMIC_PERSONNEL](	  [SETUP_ACADEMIC_PERSONNEL_ID] int NOT NULL IDENTITY(1,1)	, [START_DATE] datetime NULL	, [FINISH_DATE] datetime NULL	, [RATE_1] float NULL	, [RATE_2] float NULL	, [RATE_3] float NULL	, [RATE_4] float NULL	, [RATE_5] float NULL	, [RATE_6] float NULL	, [TITLE] nvarchar(150) NULL	, [RECORD_DATE] datetime NULL	, [RECORD_IP] nvarchar(50) NULL	, [RECORD_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, [UPDATE_IP] nvarchar(50) NULL	, [UPDATE_EMP] int NULL	, CONSTRAINT [PK__SETUP_AC__0B5DBADB414C2E3D] PRIMARY KEY ([SETUP_ACADEMIC_PERSONNEL_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'LAB_SAMPING_ROW')
    BEGIN
      CREATE TABLE [LAB_SAMPING_ROW](	  [SAMPLING_ROW_ID] int NOT NULL IDENTITY(1,1)	, [SAMPLING_ID] int NULL	, [STOCK_ID] int NULL	, [DESCRIPTION] nvarchar(250) NULL	, [LOT_NO] nvarchar(50) NULL	, [SPECT_ID] int NULL	, [SAMPLE_AMOUNT] float NULL	, CONSTRAINT [PK__LAB_SAMP__FD51C17AF2D90E82] PRIMARY KEY ([SAMPLING_ROW_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'CUSTOMER_CARDS' AND COLUMN_NAME = 'CARD_LIMIT')
    BEGIN
      ALTER TABLE CUSTOMER_CARDS ADD CARD_LIMIT float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'CUSTOMER_CARDS' AND COLUMN_NAME = 'CARD_LIMIT_MONEY')
    BEGIN
      ALTER TABLE CUSTOMER_CARDS ADD CARD_LIMIT_MONEY nvarchar(50);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EARCHIVE_INTEGRATION_INFO' AND COLUMN_NAME = 'EARCHIVE_TYPE_ALIAS')
    BEGIN
      ALTER TABLE EARCHIVE_INTEGRATION_INFO ADD EARCHIVE_TYPE_ALIAS nvarchar(50);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'NORMAL_STEP')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD NORMAL_STEP float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'HIGH_EDUCATION_COMPENSATION_PAYROLL')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD HIGH_EDUCATION_COMPENSATION_PAYROLL float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'RETIREMENT_ALLOWANCE_PERSONAL_INTERRUPTION')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD RETIREMENT_ALLOWANCE_PERSONAL_INTERRUPTION float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'AUDIT_COMPENSATION_AMOUNT')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD AUDIT_COMPENSATION_AMOUNT float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'GENERAL_HEALTH_INSURANCE')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD GENERAL_HEALTH_INSURANCE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'HEALTH_INSURANCE_PREMIUM_5510')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD HEALTH_INSURANCE_PREMIUM_5510 float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'PENANCE_DEDUCTION')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD PENANCE_DEDUCTION float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'SGK_BASE')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD SGK_BASE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'ADDITIONAL_SCORE')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD ADDITIONAL_SCORE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'COLLECTIVE_AGREEMENT_BONUS')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD COLLECTIVE_AGREEMENT_BONUS float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'NORMAL_ADDITIONAL_SCORE')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD NORMAL_ADDITIONAL_SCORE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'RETIREMENT_ALLOWANCE_PERSONAL')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD RETIREMENT_ALLOWANCE_PERSONAL float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'HEALTH_INSURANCE_PREMIUM_PERSONAL_5510')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD HEALTH_INSURANCE_PREMIUM_PERSONAL_5510 float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'PLUS_RETIRED')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD PLUS_RETIRED float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'ADDITIONAL_INDICATOR_COMPENSATION')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD ADDITIONAL_INDICATOR_COMPENSATION float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'PLUS_RETIRED_PERSONAL')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD PLUS_RETIRED_PERSONAL float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'RETIREMENT_ALLOWANCE')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD RETIREMENT_ALLOWANCE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'ACADEMIC_INCENTIVE_ALLOWANCE_AMOUNT')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD ACADEMIC_INCENTIVE_ALLOWANCE_AMOUNT float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'RETIREMENT_ALLOWANCE_5510')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD RETIREMENT_ALLOWANCE_5510 float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'RETIREMENT_ALLOWANCE_PERSONAL_5510')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD RETIREMENT_ALLOWANCE_PERSONAL_5510 float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'NORMAL_GRADE')
    BEGIN
      ALTER TABLE OFFICER_PAYROLL_ROW ADD NORMAL_GRADE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WAI_QUESTIONS_ANSWERS')
    BEGIN
      CREATE TABLE [WAI_QUESTIONS_ANSWERS](	  [WAI_QUESTIONS_ANSWERS_ID] int NOT NULL IDENTITY(1,1)	, [WAI_QUESTION_ID] int NULL	, [WAI_ANSWER_ID] int NULL	, CONSTRAINT [PK__WAI_QUES__3E0CE074B2EFAB77] PRIMARY KEY ([WAI_QUESTIONS_ANSWERS_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WAI_ANSWERS')
    BEGIN
      CREATE TABLE [WAI_ANSWERS](	  [WAI_ANSWER_ID] int NOT NULL IDENTITY(1,1)	, [WAI_ANSWERS] nvarchar(MAX) NULL	, [FUNCTION_NAME] nvarchar(150) NULL	, CONSTRAINT [PK__WAI_ANSW__2152D117DE510F42] PRIMARY KEY ([WAI_ANSWER_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_WORKING_TYPE')
    BEGIN
      CREATE TABLE [SETUP_WORKING_TYPE](	  [WORKING_TYPE_ID] int NOT NULL IDENTITY(1,1)	, [WORKING_TYPE] int NULL	, [WORKING_ABBREVIATION] nvarchar(10) NULL	, [DETAIL] nvarchar(150) NULL	, [COLOR_CODE] nvarchar(150) NULL	, [RECORD_EMP] int NULL	, [RECORD_IP] nvarchar(50) NULL	, [RECORD_DATE] datetime NULL	, [UPDATE_EMP] int NULL	, [UPDATE_IP] nvarchar(50) NULL	, [UPDATE_DATE] datetime NULL	, CONSTRAINT [PK__SETUP_WO__635791D5469C8383] PRIMARY KEY ([WORKING_TYPE_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'LANGUAGE')
    BEGIN
      ALTER TABLE TRAINING ADD LANGUAGE nvarchar(50);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'PATH')
    BEGIN
      ALTER TABLE TRAINING ADD PATH varchar;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'VIDEO_LINK')
    BEGIN
      ALTER TABLE TRAINING ADD VIDEO_LINK bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'IS_EXTERNAL_LINK')
    BEGIN
      ALTER TABLE TRAINING ADD IS_EXTERNAL_LINK bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'VIDEO_PATH')
    BEGIN
      ALTER TABLE TRAINING ADD VIDEO_PATH nvarchar(200);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'IMAGE_SIZE')
    BEGIN
      ALTER TABLE TRAINING ADD IMAGE_SIZE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'TRN_IMG_DETAIL')
    BEGIN
      ALTER TABLE TRAINING ADD TRN_IMG_DETAIL nvarchar(250);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'TRN_IMG_NAME')
    BEGIN
      ALTER TABLE TRAINING ADD TRN_IMG_NAME nvarchar(200);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WODIBA_API_DEFINITIONS' AND COLUMN_NAME = 'REC_DATE')
    BEGIN
      ALTER TABLE WODIBA_API_DEFINITIONS ADD REC_DATE datetime;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WODIBA_API_DEFINITIONS' AND COLUMN_NAME = 'DEF_ID')
    BEGIN
      ALTER TABLE WODIBA_API_DEFINITIONS ADD DEF_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WODIBA_API_DEFINITIONS' AND COLUMN_NAME = 'OUR_COMPANY_ID')
    BEGIN
      ALTER TABLE WODIBA_API_DEFINITIONS ADD OUR_COMPANY_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WODIBA_API_DEFINITIONS' AND COLUMN_NAME = 'REC_IP')
    BEGIN
      ALTER TABLE WODIBA_API_DEFINITIONS ADD REC_IP nvarchar(50);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WODIBA_API_DEFINITIONS' AND COLUMN_NAME = 'REC_USER')
    BEGIN
      ALTER TABLE WODIBA_API_DEFINITIONS ADD REC_USER int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'LAB_SAMPLING')
    BEGIN
      CREATE TABLE [LAB_SAMPLING](	  [SAMPLING_ID] int NOT NULL IDENTITY(1,1)	, [DEPARTMENT_ID] int NULL	, [LOCATION_ID] int NULL	, [RECORD_EMP] int NULL	, [RECORD_DATE] datetime NULL	, [RECORD_IP] nvarchar(50) NULL	, [UPDATE_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, [UPDATE_IP] nvarchar(50) NULL	, [PROCESS_CAT] int NULL	, [OUR_COMPANY_ID] int NULL	, [SAMPLING_DATE] datetime NULL	, [SAMPLING_TIME] datetime NULL	, [SAMPLE_ANALYSIS_ID] int NULL	, CONSTRAINT [PK__LAB_SAMP__E3234563841AF35D] PRIMARY KEY ([SAMPLING_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_SESSION' AND COLUMN_NAME = 'WEEK_START')
    BEGIN
      ALTER TABLE WRK_SESSION ADD WEEK_START bit;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_WIDGET' AND COLUMN_NAME = 'WIDGET_STATUS')
    BEGIN
      ALTER TABLE WRK_WIDGET ALTER COLUMN WIDGET_STATUS nvarchar(50) NOT NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_MENU' AND COLUMN_NAME = 'USER_GROUP')
    BEGIN
      ALTER TABLE WRK_MENU ALTER COLUMN USER_GROUP text NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_MENU' AND COLUMN_NAME = 'BEST_PRACTISE')
    BEGIN
      ALTER TABLE WRK_MENU ALTER COLUMN BEST_PRACTISE text NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_MENU' AND COLUMN_NAME = 'MENU_JSON')
    BEGIN
      ALTER TABLE WRK_MENU ALTER COLUMN MENU_JSON text NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'QUIZ' AND COLUMN_NAME = 'TEST_TYPE')
    BEGIN
      ALTER TABLE QUIZ ADD TEST_TYPE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'CONTENT_QUESTIONS')
    BEGIN
      CREATE TABLE [CONTENT_QUESTIONS](	  [CONTENT_QUESTIONS_ID] int NOT NULL IDENTITY(1,1)	, [CONTENT_ID] int NULL	, [QUESTION_ID] int NULL	, [RECORD_EMP] int NULL	, [RECORD_DATE] datetime NULL	, [UPDATE_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, [RECORD_IP] nvarchar(50) NULL	, CONSTRAINT [PK__CONTENT___9630216B54A936DE] PRIMARY KEY ([CONTENT_QUESTIONS_ID] ASC));
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_MESSAGE_VISITOR' AND COLUMN_NAME = 'VISITOR_KEY')
    BEGIN
      ALTER TABLE WRK_MESSAGE_VISITOR ALTER COLUMN VISITOR_KEY nvarchar(100) NOT NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'LAB_TEST_RESULT')
    BEGIN
      CREATE TABLE [LAB_TEST_RESULT](	  [ID] int NOT NULL IDENTITY(1,1)	, [SAMPLING_ROW_ID] int NULL	, [SAMPLE_ANALYSIS_ROW_ID] int NULL	, [RESULT_OPTION] nvarchar(1) NULL	, [RESULT_VALUE] decimal(18,0) NULL	, CONSTRAINT [PK__LAB_TEST__3214EC27BC693337] PRIMARY KEY ([ID] ASC));
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_MENUS' AND COLUMN_NAME = 'MENU_LANGUAGE')
    BEGIN
      ALTER TABLE PROTEIN_MENUS ALTER COLUMN MENU_LANGUAGE varchar(10) NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'PATH')
    BEGIN
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_TRAINING_1' AND object_id = OBJECT_ID('[TRAINING]'))
      BEGIN
        DROP INDEX [NCL_TRAINING_1] ON [TRAINING] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_TRAINING_2' AND object_id = OBJECT_ID('[TRAINING]'))
      BEGIN
        DROP INDEX [NCL_TRAINING_2] ON [TRAINING] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_TRAINING_3' AND object_id = OBJECT_ID('[TRAINING]'))
      BEGIN
        DROP INDEX [NCL_TRAINING_3] ON [TRAINING]
      END;
      ALTER TABLE TRAINING ALTER COLUMN PATH varchar(255) NULL;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_TRAINING_1' AND object_id = OBJECT_ID('[TRAINING]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_TRAINING_1] ON [TRAINING] ([TRAINING_SEC_ID] ASC,[TRAIN_ID] ASC) 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_TRAINING_2' AND object_id = OBJECT_ID('[TRAINING]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_TRAINING_2] ON [TRAINING] ([SUBJECT_CURRENCY_ID] ASC) 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_TRAINING_3' AND object_id = OBJECT_ID('[TRAINING]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_TRAINING_3] ON [TRAINING] ([TRAIN_HEAD] ASC)
      END;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'DATA_DESIGN')
    BEGIN
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_HISTORY_1' AND object_id = OBJECT_ID('[COMPANY_HISTORY]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_HISTORY_1] ON [COMPANY_HISTORY] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_HISTORY_2' AND object_id = OBJECT_ID('[COMPANY_HISTORY]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_HISTORY_2] ON [COMPANY_HISTORY] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_HISTORY_3' AND object_id = OBJECT_ID('[COMPANY_HISTORY]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_HISTORY_3] ON [COMPANY_HISTORY] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_HISTORY_4' AND object_id = OBJECT_ID('[COMPANY_HISTORY]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_HISTORY_4] ON [COMPANY_HISTORY]  
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_SSK_EXPORTS_1' AND object_id = OBJECT_ID('[EMPLOYEES_SSK_EXPORTS]'))
      BEGIN
        DROP INDEX [NCL_EMPLOYEES_SSK_EXPORTS_1] ON [EMPLOYEES_SSK_EXPORTS]   
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_ROWS_1' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ_ROWS]'))
      BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_ROWS_1] ON [EMPLOYEES_PUANTAJ_ROWS]   
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_ROWS_2' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ_ROWS]'))
      BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_ROWS_2] ON [EMPLOYEES_PUANTAJ_ROWS]   
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_1' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_1] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_10' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_10] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_11' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_11] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_12' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_12] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_2' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_2] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_3' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_3] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_4' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_4] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_5' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_5] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_6' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_6] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_7' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_7] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_8' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_8] ON [COMPANY_PARTNER] 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_PARTNER_9' AND object_id = OBJECT_ID('[COMPANY_PARTNER]'))
      BEGIN
        DROP INDEX [NCL_COMPANY_PARTNER_9] ON [COMPANY_PARTNER]    
      END;
      ALTER TABLE WRK_OUTPUT_TEMPLATES ALTER COLUMN DATA_DESIGN varchar(4000) NULL;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_HISTORY_1' AND object_id = OBJECT_ID('[COMPANY_HISTORY]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_COMPANY_HISTORY_1] ON [COMPANY_HISTORY] ([COMPANY_ID] ASC) 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_HISTORY_2' AND object_id = OBJECT_ID('[COMPANY_HISTORY]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_COMPANY_HISTORY_2] ON [COMPANY_HISTORY] ([OUR_COMPANY_ID] ASC) 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_HISTORY_3' AND object_id = OBJECT_ID('[COMPANY_HISTORY]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_COMPANY_HISTORY_3] ON [COMPANY_HISTORY] ([PERIOD_ID] ASC) 
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_COMPANY_HISTORY_4' AND object_id = OBJECT_ID('[COMPANY_HISTORY]'))
      BEGIN
      CREATE NONCLUSTERED INDEX [NCL_COMPANY_HISTORY_4] ON [COMPANY_HISTORY] ([COMPANYCAT_ID] ASC)  
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_SSK_EXPORTS_1' AND object_id = OBJECT_ID('[EMPLOYEES_SSK_EXPORTS]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_SSK_EXPORTS_1] ON [EMPLOYEES_SSK_EXPORTS] ([SAL_MON] ASC,[SAL_YEAR] ASC,[SSK_OFFICE] ASC,[SSK_OFFICE_NO] ASC)         
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_ROWS_1' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ_ROWS]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_ROWS_1] ON [EMPLOYEES_PUANTAJ_ROWS] ([PUANTAJ_ID] DESC)  
      END;
      IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_ROWS_2' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ_ROWS]'))
      BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_ROWS_2] ON [EMPLOYEES_PUANTAJ_ROWS] ([EMPLOYEE_ID] ASC,[PUANTAJ_ID] DESC)    
      END;
    END;
</querytag>