<!-- Description : Main şemasına yeni alanlar ve tablolar eklendi.
Developer: Emine Yılmaz
Company : Workcube
Destination: Main -->
<querytag>
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAGE_WARNINGS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'WARNING_HEAD')
    BEGIN
        ALTER TABLE PAGE_WARNINGS ADD
        WARNING_HEAD nvarchar(1000) NOT NULL ;
    END;
    ELSE
    BEGIN
        ALTER TABLE PAGE_WARNINGS ALTER COLUMN WARNING_HEAD nvarchar(1000) NOT NULL ;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAGE_WARNINGS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'WARNING_DESCRIPTION')
    BEGIN
        ALTER TABLE PAGE_WARNINGS ADD
        WARNING_DESCRIPTION nvarchar(max) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE PAGE_WARNINGS ALTER COLUMN WARNING_DESCRIPTION nvarchar(max) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAGE_WARNINGS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'URL_LINK')
    BEGIN
        ALTER TABLE PAGE_WARNINGS ADD
        URL_LINK nvarchar(max) NOT NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE PAGE_WARNINGS ALTER COLUMN URL_LINK nvarchar(max) NOT NULL ;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAGE_WARNINGS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'RESPONSE')
    BEGIN
        ALTER TABLE PAGE_WARNINGS ADD
        RESPONSE nvarchar(max) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE PAGE_WARNINGS ALTER COLUMN RESPONSE nvarchar(max) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'FINANCIAL_AUDIT_ROW' AND TABLE_SCHEMA = '@_dsn_main_@')
    BEGIN
        CREATE TABLE [FINANCIAL_AUDIT_ROW](	  [FINANCIAL_AUDIT_ROW_ID] int NOT NULL IDENTITY(1,1)	, [FINANCIAL_AUDIT_ID] int NOT NULL	, [CODE] nvarchar(43) NULL	, [NAME] nvarchar(150) NULL	, [ACCOUNT_CODE] nvarchar(50) NULL	, [SIGN] nvarchar(43) NULL	, [BA] bit NULL	, [VIEW_AMOUNT_TYPE] int NULL	, [IFRS_CODE] nvarchar(50) NULL	, [NAME_LANG_NO] int NULL	, [IS_SHOW] bit NULL	, [IS_CUMULATIVE] bit NULL);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'EXPENSE_CENTER' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'ACTIVITY_ID')
    BEGIN
        ALTER TABLE EXPENSE_CENTER ADD ACTIVITY_ID int;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SALARYPARAM_PAY' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'BONUS_ID')
    BEGIN
        ALTER TABLE SALARYPARAM_PAY ADD BONUS_ID int;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SALARYPARAM_PAY' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'IS_RD_GELIR')
    BEGIN
        ALTER TABLE SALARYPARAM_PAY ADD
        IS_RD_GELIR bit NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE SALARYPARAM_PAY ALTER COLUMN IS_RD_GELIR bit NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SALARYPARAM_PAY' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'IS_RD_SSK')
    BEGIN
        ALTER TABLE SALARYPARAM_PAY ADD
        IS_RD_SSK bit NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE SALARYPARAM_PAY ALTER COLUMN IS_RD_SSK bit NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETUP_DECISIONMEDICINE' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'CODE')
    BEGIN
        ALTER TABLE SETUP_DECISIONMEDICINE ADD CODE nvarchar(250);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETUP_DECISIONMEDICINE' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'DRUG_MEDICINE')
    BEGIN
        ALTER TABLE SETUP_DECISIONMEDICINE ADD DRUG_MEDICINE nvarchar(max);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETUP_DECISIONMEDICINE' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'DRUG_ID')
    BEGIN
        ALTER TABLE SETUP_DECISIONMEDICINE ADD DRUG_ID int;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'BONUS_PAYROLL' AND TABLE_SCHEMA = '@_dsn_main_@')
    BEGIN
        CREATE TABLE [BONUS_PAYROLL](	  [BONUS_ID] int NOT NULL IDENTITY(1,1)	, [PAPER_NO] nvarchar(50) NULL	, [PROCESS_ID] int NULL	, [PROCESS_CAT] int NULL	, [EMPLOYEE_ID] int NULL	, [PAPER_DATE] datetime NULL	, [DETAIL] nvarchar(250) NULL	, [COMMENT_PAY_ID] int NULL	, [TERM] int NULL	, [START_SAL_MON] int NULL	, [END_SAL_MON] int NULL	, [RECORD_DATE] datetime NULL	, [RECORD_EMP] int NULL	, [RECORD_IP] nvarchar(50) NULL	, [UPDATE_DATE] datetime NULL	, [UPDATE_EMP] int NULL	, [UPDATE_IP] nvarchar(50) NULL	, CONSTRAINT [PK_BONUS_PAYROLL] PRIMARY KEY ([BONUS_ID] ASC));
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'TAX_DAYS_5746')
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ADD TAX_DAYS_5746 float;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'LAW_NUMBER_7103')
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ADD
        LAW_NUMBER_7103 int NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ALTER COLUMN LAW_NUMBER_7103 int NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'DOMAIN')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD DOMAIN nvarchar(50);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'CHECH_ID')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD CHECH_ID int;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'GENERAL_POINT')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD GENERAL_POINT int;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'TEST_USERID')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD TEST_USERID int;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'TEST_DATE')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD TEST_DATE datetime;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'FUSEACTION')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD
        FUSEACTION nvarchar(150) NOT NULL ;
    END;
    ELSE
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ALTER COLUMN FUSEACTION nvarchar(150) NOT NULL ;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'MODUL_SHORT_NAME')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD
        MODUL_SHORT_NAME nvarchar(200) NOT NULL ;
    END;
    ELSE
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ALTER COLUMN MODUL_SHORT_NAME nvarchar(200) NOT NULL ;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'VERSION')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD VERSION nvarchar(50);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'RECORD_ID')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD
        RECORD_ID nvarchar(20) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ALTER COLUMN RECORD_ID nvarchar(20) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'TEST_USER')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD TEST_USER nvarchar(150);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_MAIN' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'EVENT')
    BEGIN
        ALTER TABLE TEST_CHECK_MAIN ADD EVENT nvarchar(100);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WODIBA_BANK_ACTIONS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'ACCOUNT_ID')
    BEGIN
        ALTER TABLE WODIBA_BANK_ACTIONS ADD
        ACCOUNT_ID int NOT NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE WODIBA_BANK_ACTIONS ALTER COLUMN ACCOUNT_ID int NOT NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'FAVORITES' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'FAVORITE')
    BEGIN
        ALTER TABLE FAVORITES ADD
        FAVORITE nvarchar(max) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE FAVORITES ALTER COLUMN FAVORITE nvarchar(max) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PRO_WORKS_STEP' AND TABLE_SCHEMA = '@_dsn_main_@')
    BEGIN
        CREATE TABLE [PRO_WORKS_STEP](	  [WORK_STEP_ID] int NOT NULL IDENTITY(1,1)	, [WORK_ID] int NULL	, [WORK_STEP_DETAIL] nvarchar(MAX) NULL	, [WORK_STEP_COMPLETE_PERCENT] int NULL	, [COMPLETED_HOUR] int NULL	, [COMPLETED_MINUTE] int NULL	, [RECORD_DATE] datetime NOT NULL	, [RECORD_IP] nvarchar(50) NULL	, [RECORD_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, [UPDATE_EMP] int NULL	, [UPDATE_IP] nvarchar(50) NULL	, CONSTRAINT [PK_PRO_WORKS_STEP] PRIMARY KEY ([WORK_STEP_ID] ASC));
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ASSET_HISTORY' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'TV_CAT_ID')
    BEGIN
        ALTER TABLE ASSET_HISTORY ADD TV_CAT_ID nvarchar(500);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'ASSET_HISTORY' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'IS_TV_PUBLISH')
    BEGIN
        ALTER TABLE ASSET_HISTORY ADD IS_TV_PUBLISH int;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TEST_CHECK_ROW' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'SUCCESS')
    BEGIN
        ALTER TABLE TEST_CHECK_ROW ADD SUCCESS bit;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'MY_SETTINGS_P' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'PARTNER_ID')
    BEGIN
        ALTER TABLE MY_SETTINGS_P ADD
        PARTNER_ID int NOT NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE MY_SETTINGS_P ALTER COLUMN PARTNER_ID int NOT NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PROCESS_TYPE_ROWS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'DESTINATION_EVENT')
    BEGIN
        ALTER TABLE PROCESS_TYPE_ROWS ADD
        DESTINATION_EVENT nvarchar(50) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE PROCESS_TYPE_ROWS ALTER COLUMN DESTINATION_EVENT nvarchar(50) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'FINANCIAL_AUDIT' AND TABLE_SCHEMA = '@_dsn_main_@')
    BEGIN
        CREATE TABLE [FINANCIAL_AUDIT](	  [FINANCIAL_AUDIT_ID] int NOT NULL IDENTITY(1,1)	, [TABLE_NAME] nvarchar(250) NULL	, [TABLE_TYPE] int NULL	, [PROCESS_STAGE] int NULL	, [DETAIL] nvarchar(500) NULL	, [RECORD_DATE] datetime NULL	, [RECORD_EMP] int NULL	, [UPDATE_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, CONSTRAINT [PK_FINANCIAL_AUDIT] PRIMARY KEY ([FINANCIAL_AUDIT_ID] ASC));
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRAINING_CLASS' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'HOUR_NO')
    BEGIN
        ALTER TABLE TRAINING_CLASS ADD
        HOUR_NO float NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE TRAINING_CLASS ALTER COLUMN HOUR_NO float NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_MESSAGE' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'ACTION_PAGE')
    BEGIN
        ALTER TABLE WRK_MESSAGE ADD
        ACTION_PAGE nvarchar(500) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE WRK_MESSAGE ALTER COLUMN ACTION_PAGE nvarchar(500) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_MESSAGE' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'WARNING_HEAD')
    BEGIN
        ALTER TABLE WRK_MESSAGE ADD
        WARNING_HEAD nvarchar(500) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE WRK_MESSAGE ALTER COLUMN WARNING_HEAD nvarchar(500) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_MESSAGE' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'ACTION_COLUMN')
    BEGIN
        ALTER TABLE WRK_MESSAGE ADD
        ACTION_COLUMN nvarchar(50) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE WRK_MESSAGE ALTER COLUMN ACTION_COLUMN nvarchar(50) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'FINANCIAL_TABLES_COPIES' AND TABLE_SCHEMA = '@_dsn_main_@')
    BEGIN
        CREATE TABLE [FINANCIAL_TABLES_COPIES](	  [FINANCIAL_TABLE_ID] int NOT NULL IDENTITY(1,1)	, [TABLE_NAME] nvarchar(250) NULL	, [TABLE_PATH] nvarchar(250) NULL	, [IS_IFRS] bit NULL	, [PROCESS_STAGE] int NULL	, [RECORD_DATE] datetime NULL	, [RECORD_EMP] int NULL	, [UPDATE_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, [ARRANGEMENT_DATE] datetime NULL	, [ARRANGEMENT_EMP] int NULL);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'COMPANY' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'IS_CIVIL_COMPANY')
    BEGIN
        ALTER TABLE COMPANY ADD IS_CIVIL_COMPANY bit;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'EINVOICE_DEFINITION' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'COMP_ID')
    BEGIN
        ALTER TABLE EINVOICE_DEFINITION ADD
        COMP_ID int NOT NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE EINVOICE_DEFINITION ALTER COLUMN COMP_ID int NOT NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_SESSION' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'FUSEACTION')
    BEGIN
        ALTER TABLE WRK_SESSION ADD
        FUSEACTION nvarchar(250) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE WRK_SESSION ALTER COLUMN FUSEACTION nvarchar(250) NULL;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'UTILITIES' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'DETAIL')
    BEGIN
        ALTER TABLE UTILITIES ADD
        DETAIL nvarchar(max) NULL;
    END;
    ELSE
    BEGIN
        ALTER TABLE UTILITIES ALTER COLUMN DETAIL nvarchar(max) NULL;
    END;
    
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'GDPR_SENSITIVITY_LABEL' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'SENSITIVITY_LABEL_NO')
    BEGIN
        ALTER TABLE GDPR_SENSITIVITY_LABEL ADD SENSITIVITY_LABEL_NO int;
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETUP_HEALTH_ASSURANCE_TYPE' AND TABLE_SCHEMA = '@_dsn_main_@' AND COLUMN_NAME = 'CALCULATION_FORMULA')
    BEGIN
        ALTER TABLE SETUP_HEALTH_ASSURANCE_TYPE ADD CALCULATION_FORMULA nvarchar(max);
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WORKTIME_FLEXIBLE_ROW' AND TABLE_SCHEMA = '@_dsn_main_@')
    BEGIN
    CREATE TABLE [WORKTIME_FLEXIBLE_ROW]
    (
          [WORKTIME_FLEXIBLE_ROW_ID] int NOT NULL IDENTITY(1,1)
        , [WORKTIME_FLEXIBLE_ID] int NULL
        , [FLEXIBLE_START_HOUR] int NULL
        , [FLEXIBLE_START_MINUTE] int NULL
        , [FLEXIBLE_FINISH_HOUR] int NULL
        , [FLEXIBLE_FINISH_MINUTE] int NULL
        , [FLEXIBLE_MONTH] int NULL
        , [FLEXIBLE_DAY] int NULL
        , [FLEXIBLE_DATE] datetime NULL
        , [FLEXIBLE_YEAR] int NULL
        , [STAGE_ID] int NULL
        , [APPROVE_HR_EMP_ID] int NULL
        , [APPROVE_DATE] int NULL
        , [IS_APPROVE] int NULL
        , [APPROVE_EMP_ID_1] int NULL
        , [APPROVE_EMP_ID_2] int NULL
        , [IS_APPROVE_1] bit NULL
        , [IS_APPROVE_2] bit NULL
        , CONSTRAINT [PK__WORKTIME__FFC706F8B4484816] PRIMARY KEY ([WORKTIME_FLEXIBLE_ROW_ID] ASC)
    )
    ;
    END;
</querytag>