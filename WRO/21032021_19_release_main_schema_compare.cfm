<!-- Description : Release Main Schema Compare
Developer: UÄŸur Hamurpet
Company : Workcube
Destination: Main-->
<querytag>
    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='EPRODUCER_RECEIPT_INTEGRATION_INFO' )
    BEGIN
        CREATE TABLE [EPRODUCER_RECEIPT_INTEGRATION_INFO](	  [ID] int NOT NULL IDENTITY(1,1)	, [COMP_ID] int NULL	, [TEMPLATE_FILENAME] nvarchar(200) NULL	, [TEMPLATE_FILENAME_BASE64] nvarchar(250) NULL	, [EPRODUCER_NUMBER] nvarchar(50) NULL	, [EPRODUCER_PREFIX] nvarchar(50) NULL	, [EPRODUCER_TEST_SYSTEM] bit NULL	, [EPRODUCER_COMPANY_CODE] nvarchar(50) NULL	, [EPRODUCER_USER_NAME] nvarchar(50) NULL	, [EPRODUCER_PASSWORD] nvarchar(50) NULL	, [EPRODUCER_LIVE_URL] nvarchar(500) NULL	, [EPRODUCER_TEST_URL] nvarchar(500) NULL	, CONSTRAINT [PK_EPRODUCER_RECEIPT_INTEGRATION_INFO] PRIMARY KEY ([ID] ASC));
    END;
    
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'PAGE_MARGIN_LEFT')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        PAGE_MARGIN_LEFT float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'PAGE_HEADER_HEIGHT')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        PAGE_HEADER_HEIGHT float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'PAGE_HEIGHT')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        PAGE_HEIGHT float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'PAGE_MARGIN_RIGHT')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        PAGE_MARGIN_RIGHT float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'PAGE_FOOTER_HEIGHT')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        PAGE_FOOTER_HEIGHT float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'USE_LOGO')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        USE_LOGO bit NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'PAGE_MARGIN_TOP')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        PAGE_MARGIN_TOP float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'PAGE_WIDTH')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        PAGE_WIDTH float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'PAGE_MARGIN_BOTTOM')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        PAGE_MARGIN_BOTTOM float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'USE_ADRESS')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        USE_ADRESS bit NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'RULE_UNIT')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ADD
        RULE_UNIT int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAGE_WARNINGS' AND COLUMN_NAME = 'WRK_LOG_ID')
    BEGIN
        ALTER TABLE PAGE_WARNINGS ADD
        WRK_LOG_ID int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'CONTENT_BANNERS_USERS' AND COLUMN_NAME = 'CARRIER_ID')
    BEGIN
        ALTER TABLE CONTENT_BANNERS_USERS ADD
        CARRIER_ID int NULL
    END;

    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='WRK_MESSAGE_GROUP' )
    BEGIN
        CREATE TABLE [WRK_MESSAGE_GROUP](	  [WG_ID] int NOT NULL IDENTITY(1,1)	, [WG_NAME] nvarchar(500) NULL	, [WG_ACTION_WO] nvarchar(200) NULL	, [WG_ACTION_WO_EVENT] nvarchar(50) NULL	, [WG_ACTION_PARAMETER] nvarchar(200) NULL	, [WG_ACTION_ID] int NULL	, [RECORD_EMP] int NULL	, [RECORD_DATE] datetime NULL	, [RECORD_IP] nvarchar(50) NULL	, [UPDATE_EMP] int NULL	, [UPDATE_DATE] datetime NULL	, [UPDATE_IP] nvarchar(50) NULL	, CONSTRAINT [PK_WRK_MESSAGE_GROUP] PRIMARY KEY ([WG_ID] ASC));
    END;

    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='WRK_MESSAGE_GROUP_EMP_MSG' )
    BEGIN
        CREATE TABLE [WRK_MESSAGE_GROUP_EMP_MSG](	  [WGEM_ID] int NOT NULL IDENTITY(1,1)	, [WG_ID] int NOT NULL	, [WRK_MESSAGE_ID] int NOT NULL	, [EMPLOYEE_ID] int NOT NULL	, [IS_ALERTED] bit NULL DEFAULT((0))	, [IS_DELETED] bit NULL DEFAULT((0))	, CONSTRAINT [PK_WRK_MESSAGE_GROUP_EMP_MSG] PRIMARY KEY ([WGEM_ID] ASC));
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'STOCKS_LOCATION' AND COLUMN_NAME = 'PRESSURE')
    BEGIN
        ALTER TABLE STOCKS_LOCATION ADD
        PRESSURE float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'STOCKS_LOCATION' AND COLUMN_NAME = 'TEMPERATURE')
    BEGIN
        ALTER TABLE STOCKS_LOCATION ADD
        TEMPERATURE float NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'STOCKS_LOCATION' AND COLUMN_NAME = 'TEMPERATURE')
    BEGIN
        ALTER TABLE STOCKS_LOCATION ADD
        TEMPERATURE float NULL
    END;

    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='SAMPLE_REQ_PROCESS_COLOR' )
    BEGIN
        CREATE TABLE [SAMPLE_REQ_PROCESS_COLOR](	  [COLOR_ID] int NOT NULL IDENTITY(1,1)	, [PROCESS_NAME] nvarchar(50) NULL	, [PROCESS_ROW_ID] int NULL	, [COLOR] nvarchar(55) NULL	, CONSTRAINT [PK_SAMPLE_REQ_PROCESS_COLOR] PRIMARY KEY ([COLOR_ID] ASC));
    END;
    
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'EVOUCHER_DATE')
    BEGIN
        ALTER TABLE OUR_COMPANY_INFO ADD
        EVOUCHER_DATE datetime NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'EPRODUCER_RECEIPT_DATE')
    BEGIN
        ALTER TABLE OUR_COMPANY_INFO ADD
        EPRODUCER_RECEIPT_DATE datetime NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'IS_EPRODUCER_RECEIPT')
    BEGIN
        ALTER TABLE OUR_COMPANY_INFO ADD
        IS_EPRODUCER_RECEIPT bit NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'IS_EVOUCHER')
    BEGIN
        ALTER TABLE OUR_COMPANY_INFO ADD
        IS_EVOUCHER bit NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'OUR_COMPANY_INFO' AND COLUMN_NAME = 'WATALOGY_MEMBER_CODE')
    BEGIN
        ALTER TABLE OUR_COMPANY_INFO ADD
        WATALOGY_MEMBER_CODE nvarchar(50) NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PROTEIN_WIDGETS' AND COLUMN_NAME = 'WIDGET_BOX_DATA')
    BEGIN
        ALTER TABLE PROTEIN_WIDGETS ADD
        WIDGET_BOX_DATA nvarchar(MAX) NULL
    END;

    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='ERECEIPT_RELATION' )
    BEGIN
        CREATE TABLE [ERECEIPT_RELATION](	  [RELATION_ID] int NOT NULL IDENTITY(1,1)	, [ACTION_ID] int NULL	, [ACTION_TYPE] nvarchar(50) NULL	, [ERECEIPT_ID] nvarchar(50) NULL	, [UUID] nvarchar(50) NULL	, [PATH] nvarchar(250) NULL	, [PROFILE_ID] nvarchar(50) NULL	, [INTEGRATION_ID] nvarchar(50) NULL	, [IS_PAPER_UPDATE] bit NULL	, [STATUS_CODE] int NULL	, [STATUS_DESCRIPTION] nvarchar(250) NULL	, [STATUS_DATE] datetime NULL	, [RECORD_DATE] datetime NULL	, [RECORD_EMP] int NULL	, [RECORD_IP] nvarchar(50) NULL	, [RECEIPT_UUID] nvarchar(250) NULL	, [RECEIPT_ID] nvarchar(250) NULL	, CONSTRAINT [PK_ERECEIPT_RELATION] PRIMARY KEY ([RELATION_ID] ASC));
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'COMPANY_SECUREFUND' AND COLUMN_NAME = 'EXTENSION_TIME_FINISH_DATE')
    BEGIN
        ALTER TABLE COMPANY_SECUREFUND ADD
        EXTENSION_TIME_FINISH_DATE datetime NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OBJECTS' AND COLUMN_NAME = 'DATA_CFC')
    BEGIN
        ALTER TABLE WRK_OBJECTS ADD
        DATA_CFC nvarchar(250) NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OBJECTS' AND COLUMN_NAME = 'MAIN_VERSION')
    BEGIN
        ALTER TABLE WRK_OBJECTS ADD
        MAIN_VERSION nvarchar(250) NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_OBJECTS' AND COLUMN_NAME = 'DATA_PATH')
    BEGIN
        ALTER TABLE WRK_OBJECTS ADD
        DATA_PATH nvarchar(250) NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAYROLL_JOB' AND COLUMN_NAME = 'IN_OUT_ID')
    BEGIN
        ALTER TABLE PAYROLL_JOB ADD
        IN_OUT_ID int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAYROLL_JOB' AND COLUMN_NAME = 'PAYROLL_TYPE')
    BEGIN
        ALTER TABLE PAYROLL_JOB ADD
        PAYROLL_TYPE int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PAYROLL_JOB' AND COLUMN_NAME = 'EMPLOYEE_PAYROLL_ID')
    BEGIN
        ALTER TABLE PAYROLL_JOB ADD
        EMPLOYEE_PAYROLL_ID int NULL
    END;

    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='SECUREFUND_EXTENSION_TIME' )
    BEGIN
        CREATE TABLE [SECUREFUND_EXTENSION_TIME](	  [SECUREFUND_EXTENSION_TIME_ID] int NOT NULL IDENTITY(1,1)	, [SECUREFUND_ID] int NULL	, [ACTION_CAT_ID] int NULL	, [DETAIL] nvarchar(500) NULL	, [MONEY_CAT] nvarchar(43) NULL	, [EXPENSE_TOTAL] float NULL	, [MONEY_CAT_EXPENSE] nvarchar(43) NULL	, [COMMISSION_RATE] float NULL	, [EXTENSION_TIME_FINISH_DATE] datetime NULL	, [RECORD_DATE] datetime NULL	, [UPDATE_DATE] datetime NULL	, [UPDATE_EMP] int NULL	, [RECORD_EMP] int NULL	, [UPDATE_IP] nvarchar(50) NULL	, [RECORD_IP] nvarchar(50) NULL	, CONSTRAINT [PK_SECUREFUND_EXTENSION_TIME] PRIMARY KEY ([SECUREFUND_EXTENSION_TIME_ID] ASC));
    END;
    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='WRK_MESSAGE_GROUP_EMP' )
    BEGIN
        CREATE TABLE [WRK_MESSAGE_GROUP_EMP](	  [WGE_ID] int NOT NULL IDENTITY(1,1)	, [WG_ID] int NOT NULL	, [EMPLOYEE_ID] int NULL	, CONSTRAINT [PK_WRK_MESSAGE_GROUP_EMP] PRIMARY KEY ([WGE_ID] ASC));
    END;

    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETUP_PROGRAM_PARAMETERS' AND COLUMN_NAME = 'PARTIAL_WORK')
    BEGIN
        ALTER TABLE SETUP_PROGRAM_PARAMETERS ADD
        PARTIAL_WORK int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'SETUP_PROGRAM_PARAMETERS' AND COLUMN_NAME = 'PARTIAL_WORK_TIME')
    BEGIN
        ALTER TABLE SETUP_PROGRAM_PARAMETERS ADD
        PARTIAL_WORK_TIME int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'VISITOR_BOOK' AND COLUMN_NAME = 'VISIT_DATE')
    BEGIN
        ALTER TABLE VISITOR_BOOK ADD
        VISIT_DATE datetime NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'PROCESS_TYPE_ROWS' AND COLUMN_NAME = 'IS_STAGE_ACTION')
    BEGIN
        ALTER TABLE PROCESS_TYPE_ROWS ADD
        IS_STAGE_ACTION bit NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_MESSAGE' AND COLUMN_NAME = 'WG_ID')
    BEGIN
        ALTER TABLE WRK_MESSAGE ADD
        WG_ID int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_MESSAGE' AND COLUMN_NAME = 'IS_DELETED')
    BEGIN
        ALTER TABLE WRK_MESSAGE ADD
        IS_DELETED bit NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_MESSAGE' AND COLUMN_NAME = 'IS_DELIVERED')
    BEGIN
        ALTER TABLE WRK_MESSAGE ADD
        IS_DELIVERED bit NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'WRK_MESSAGE' AND COLUMN_NAME = 'DELETED_DATE')
    BEGIN
        ALTER TABLE WRK_MESSAGE ADD
        DELETED_DATE datetime NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'TOTAL_HOURS')
    BEGIN
        ALTER TABLE TRAINING ADD
        TOTAL_HOURS int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'PRODUCT_ID')
    BEGIN
        ALTER TABLE TRAINING ADD
        PRODUCT_ID int NULL
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = 'TRAINING' AND COLUMN_NAME = 'PRODUCT_ID')
    BEGIN
        ALTER TABLE TRAINING ADD
        PRODUCT_ID int NULL
    END;

    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='EVOUCHER_INTEGRATION_INFO' )
    BEGIN
        CREATE TABLE [EVOUCHER_INTEGRATION_INFO](	  [ID] int NOT NULL IDENTITY(1,1)	, [COMP_ID] int NULL	, [TEMPLATE_FILENAME] nvarchar(200) NULL	, [TEMPLATE_FILENAME_BASE64] nvarchar(250) NULL	, [EVOUCHER_NUMBER] nvarchar(50) NULL	, [EVOUCHER_PREFIX] nvarchar(50) NULL	, [EVOUCHER_TEST_SYSTEM] bit NULL	, [EVOUCHER_COMPANY_CODE] nvarchar(50) NULL	, [EVOUCHER_USER_NAME] nvarchar(50) NULL	, [EVOUCHER_PASSWORD] nvarchar(50) NULL	, [EVOUCHER_LIVE_URL] nvarchar(500) NULL	, [EVOUCHER_TEST_URL] nvarchar(500) NULL	, CONSTRAINT [PK_EVOUCHER_INTEGRATION_INFO] PRIMARY KEY ([ID] ASC));
    END;
    IF NOT EXISTS ( SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME='ERECEIPT_SENDING_DETAIL' )
    BEGIN
        CREATE TABLE [ERECEIPT_SENDING_DETAIL](	  [SENDING_DETAIL_ID] int NOT NULL IDENTITY(1,1)	, [SERVICE_RESULT] nvarchar(50) NULL	, [UUID] nvarchar(50) NULL	, [ERECEIPT_ID] nvarchar(50) NULL	, [STATUS_DESCRIPTION] nvarchar(50) NULL	, [STATUS_CODE] nvarchar(50) NULL	, [ERROR_CODE] nvarchar(50) NULL	, [ACTION_ID] int NULL	, [ACTION_TYPE] nvarchar(50) NULL	, [SERVICE_RESULT_DESCRIPTION] nvarchar(250) NULL	, [RECORD_DATE] datetime NULL	, [RECORD_EMP] int NULL	, [RECORD_IP] nvarchar(50) NULL	, CONSTRAINT [PK_ERECEIPT_SENDING_DETAIL] PRIMARY KEY ([SENDING_DETAIL_ID] ASC));
    END;

</querytag>