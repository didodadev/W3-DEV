<!-- Description : holistic 21.2 sürümü tablolar ve kolon değişiklikleri
Developer: Fatih Kara
Company : Workcube
Destination: Main -->
<querytag>  
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'MEMBER_ANALYSIS' AND COLUMN_NAME = 'COMMENT4')
    BEGIN
        ALTER TABLE MEMBER_ANALYSIS ALTER COLUMN COMMENT4 nvarchar(3999) NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'MEMBER_ANALYSIS' AND COLUMN_NAME = 'COMMENT3')
    BEGIN
        ALTER TABLE MEMBER_ANALYSIS ALTER COLUMN COMMENT3 nvarchar(3999) NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'MEMBER_ANALYSIS' AND COLUMN_NAME = 'COMMENT5')
    BEGIN
        ALTER TABLE MEMBER_ANALYSIS ALTER COLUMN COMMENT5 nvarchar(3999) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'MEMBER_ANALYSIS' AND COLUMN_NAME = 'DETAIL')
    BEGIN
        ALTER TABLE MEMBER_ANALYSIS ADD DETAIL nvarchar(3999);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'MEMBER_ANALYSIS' AND COLUMN_NAME = 'COMMENT2')
    BEGIN
        ALTER TABLE MEMBER_ANALYSIS ALTER COLUMN COMMENT2 nvarchar(3999) NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'MEMBER_ANALYSIS' AND COLUMN_NAME = 'COMMENT1')
    BEGIN
        ALTER TABLE MEMBER_ANALYSIS ALTER COLUMN COMMENT1 nvarchar(3999) NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_OUTPUT_TEMPLATES' AND COLUMN_NAME = 'DATA_DESIGN')
    BEGIN
        ALTER TABLE WRK_OUTPUT_TEMPLATES ALTER COLUMN DATA_DESIGN varchar(4000) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'JURY_MEMBERSHIP')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD JURY_MEMBERSHIP bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'LAND_COMPENSATION_SCORE')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD LAND_COMPENSATION_SCORE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'PAST_AGI_DAY')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD PAST_AGI_DAY int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'JURY_MEMBERSHIP_PERIOD')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD JURY_MEMBERSHIP_PERIOD int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'LAND_COMPENSATION_PERIOD')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD LAND_COMPENSATION_PERIOD int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_DEPARTMENT_TYPE')
    BEGIN
        CREATE TABLE [SETUP_DEPARTMENT_TYPE](
        [DEPARTMENT_TYPE_ID] int NOT NULL IDENTITY(1,1), 
        [DEPARTMENT_TYPE] nvarchar(100)  NULL, 
        [DETAIL] nvarchar(100)  NULL, 
        [RECORD_DATE] datetime NULL,
        [RECORD_EMP] int NULL, 
        [RECORD_IP] nvarchar(50)  NULL, 
        [UPDATE_DATE] datetime NULL, 
        [UPDATE_EMP] int NULL, 
        [UPDATE_IP] nvarchar(50)  NULL,
        CONSTRAINT [PK_SETUP_DEPARTMENT_TYPE] PRIMARY KEY ([DEPARTMENT_TYPE_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_DEPARTMENT_CAT')
    BEGIN
        CREATE TABLE [SETUP_DEPARTMENT_CAT](
        [DEPARTMENT_CAT_ID] int NOT NULL IDENTITY(1,1), 
        [DEPARTMENT_CAT] nvarchar(100)  NULL, 
        [DETAIL] nvarchar(100)  NULL, 
        [RECORD_DATE] datetime NULL, 
        [RECORD_EMP] int NULL, 
        [RECORD_IP] nvarchar(50)  NULL, 
        [UPDATE_DATE] datetime NULL, 
        [UPDATE_EMP] int NULL, 
        [UPDATE_IP] nvarchar(50)  NULL, 
        CONSTRAINT [PK_SETUP_DEPARTMENT_CAT] PRIMARY KEY ([DEPARTMENT_CAT_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'GDPR_DECLERATION')
    BEGIN
        CREATE TABLE [GDPR_DECLERATION](
        [GDPR_DECLERATION_ID] int NOT NULL IDENTITY(1,1), 
        [GDPR_DECLERATION_TEXT] nvarchar(1000) NULL, 
        [GDPR_DECLERATION_VERSION] int NULL, 
        [RECORD_DATE] datetime NULL, 
        [RECORD_EMP] int NULL, 
        [RECORD_IP] nvarchar(100) NULL, 
        [UPDATE_DATE] datetime NULL,
        [UPDATE_EMP] int NULL, 
        [UPDATE_IP] nvarchar(100)  NULL, 
        [AUTHOR] nvarchar(200)  NULL, 
        CONSTRAINT [PK__GDPR_DEC__4CA713513A134B69] PRIMARY KEY ([GDPR_DECLERATION_ID] ASC));
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_LANGUAGE_INFO' AND COLUMN_NAME = 'ITEM')
    BEGIN
        ALTER TABLE SETUP_LANGUAGE_INFO ALTER COLUMN ITEM nvarchar(max)  NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND COLUMN_NAME = 'PAST_AGI_DAY_PAYROLL')
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ADD PAST_AGI_DAY_PAYROLL float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'COMPANY_LAW_REQUEST' AND COLUMN_NAME = 'DEFAULT_RATE')
    BEGIN
        ALTER TABLE COMPANY_LAW_REQUEST ADD DEFAULT_RATE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_PROGRAM_PARAMETERS' AND COLUMN_NAME = 'FIRST_DAY_MONTH')
    BEGIN
        ALTER TABLE SETUP_PROGRAM_PARAMETERS ADD FIRST_DAY_MONTH int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_PROGRAM_PARAMETERS' AND COLUMN_NAME = 'LAST_DAY_MONTH')
    BEGIN
        ALTER TABLE SETUP_PROGRAM_PARAMETERS ADD LAST_DAY_MONTH int;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'BRANCH_HISTORY' AND COLUMN_NAME = 'SSK_OFFICE')
    BEGIN
        ALTER TABLE BRANCH_HISTORY ALTER COLUMN SSK_OFFICE nvarchar(250)  NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'BRANCH_HISTORY' AND COLUMN_NAME = 'BRANCH_FULLNAME')
    BEGIN
        ALTER TABLE BRANCH_HISTORY ALTER COLUMN BRANCH_FULLNAME nvarchar(250)  NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SUBSCRIPTION_COUNTER_ROWS')
    BEGIN
        CREATE TABLE [SUBSCRIPTION_COUNTER_ROWS]([COUNTER_ROW_ID] int NOT NULL IDENTITY(1,1), 
        [SUBSCRIPTION_NO] nvarchar(50) NULL, 
        [DOMAIN] nvarchar(50) NULL, 
        [DOMAIN_IP] nvarchar(50) NULL, 
        [ASSET_P_ID] int NULL, 
        [PRODUCT_ID] int NULL, 
        [AMOUNT] float NULL, 
        [PROCESS_TYPE] int NULL, 
        [PROCESS_DOC_NO] nvarchar(50) NULL, 
        [PROCESS_DATE] datetime NULL, 
        [WEX_DATE] datetime NULL, 
        [IS_CALCULATION] bit NULL, 
        CONSTRAINT [PK__SUBSCRIP__0E04506EABD1CAF5] PRIMARY KEY ([COUNTER_ROW_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_SERVICE_CLASS')
    BEGIN
        CREATE TABLE [SETUP_SERVICE_CLASS](
        [SERVICE_CLASS_ID] int NOT NULL IDENTITY(1,1), 
        [SERVICE_CLASS] nvarchar(100) NULL, 
        [DETAIL] nvarchar(100) NULL, 
        [SPECIAL_CODE] nvarchar(100) NULL, 
        [RECORD_DATE] datetime NULL	, 
        [RECORD_EMP] int NULL, 
        [RECORD_IP] nvarchar(50) NULL, 
        [UPDATE_DATE] datetime NULL, 
        [UPDATE_EMP] int NULL, 
        [UPDATE_IP] nvarchar(50) NULL, 
        CONSTRAINT [PK_SETUP_SERVICE_CLASS] PRIMARY KEY ([SERVICE_CLASS_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PRO_PROJECTS' AND COLUMN_NAME = 'LANGUAGE_ID')
    BEGIN
        ALTER TABLE PRO_PROJECTS ADD LANGUAGE_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PRO_PROJECTS' AND COLUMN_NAME = 'GOOGLE_PROJECT_FOLDER_ID')
    BEGIN
        ALTER TABLE PRO_PROJECTS ADD GOOGLE_PROJECT_FOLDER_ID nvarchar(200);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'BRANCH' AND COLUMN_NAME = 'SSK_OFFICE')
    BEGIN
        ALTER TABLE BRANCH ALTER COLUMN SSK_OFFICE nvarchar(250)  NULL;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'BRANCH' AND COLUMN_NAME = 'BRANCH_FULLNAME')
    BEGIN
        ALTER TABLE BRANCH ALTER COLUMN BRANCH_FULLNAME nvarchar(250)  NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'CONTENT_CAT' AND COLUMN_NAME = 'CONTENTCAT_DICTIONARY_ID')
    BEGIN
        ALTER TABLE CONTENT_CAT ADD CONTENTCAT_DICTIONARY_ID nvarchar(50);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_FIRM_TYPE' AND COLUMN_NAME = 'RECORD_DATE')
    BEGIN
        ALTER TABLE SETUP_FIRM_TYPE ALTER COLUMN RECORD_DATE datetime NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'DEPARTMENT' AND COLUMN_NAME = 'DEPARTMENT_CAT')
    BEGIN
        ALTER TABLE DEPARTMENT ADD DEPARTMENT_CAT int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'DEPARTMENT' AND COLUMN_NAME = 'SPECIAL_CODE2')
    BEGIN
        ALTER TABLE DEPARTMENT ADD SPECIAL_CODE2 nvarchar(100);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'DEPARTMENT' AND COLUMN_NAME = 'DEPARTMENT_TYPE')
    BEGIN
        ALTER TABLE DEPARTMENT ADD DEPARTMENT_TYPE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'RETIRED_ACADEMIC')
    BEGIN
        ALTER TABLE OFFICER_PAYROLL_ROW ADD RETIRED_ACADEMIC float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'LAND_COMPENSATION_AMOUNT')
    BEGIN
        ALTER TABLE OFFICER_PAYROLL_ROW ADD LAND_COMPENSATION_AMOUNT float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_SERVICE_TITLE')
    BEGIN
        CREATE TABLE [SETUP_SERVICE_TITLE]([SERVICE_TITLE_ID] int NOT NULL IDENTITY(1,1), 
        [SERVICE_CLASS_ID] int NULL, 
        [SERVICE_TITLE] nvarchar(100) NULL, 
        [SERVICE_TITLE_CODE] nvarchar(100) NULL, 
        [DETAIL] nvarchar(100) NULL, 
        [RECORD_DATE] datetime NULL, 
        [RECORD_EMP] int NULL, 
        [RECORD_IP] nvarchar(50) NULL, 
        [UPDATE_DATE] datetime NULL, 
        [UPDATE_EMP] int NULL, 
        [UPDATE_IP] nvarchar(50) NULL, 
        CONSTRAINT [PK_SETUP_SERVICE_TITLE] PRIMARY KEY ([SERVICE_TITLE_ID] ASC));
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WODIBA_API_DEFINITIONS' AND COLUMN_NAME = 'DEF_ID')
    BEGIN
        ALTER TABLE WODIBA_API_DEFINITIONS ALTER COLUMN DEF_ID int NOT NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'OFFICER_PAYROLL_ROW' AND COLUMN_NAME = 'RETIRED_ACADEMIC')
    BEGIN
        ALTER TABLE OFFICER_PAYROLL_ROW ADD RETIRED_ACADEMIC float;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_SSK_EXPORTS' AND COLUMN_NAME = 'SSK_OFFICE')
    BEGIN
        ALTER TABLE EMPLOYEES_SSK_EXPORTS ALTER COLUMN SSK_OFFICE nvarchar(250) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'CONTENT_CHAPTER' AND COLUMN_NAME = 'CHAPTER_DICTIONARY_ID')
    BEGIN
        ALTER TABLE CONTENT_CHAPTER ADD CHAPTER_DICTIONARY_ID nvarchar(50);
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_SITES' AND COLUMN_NAME = 'DOMAIN')
    BEGIN
        ALTER TABLE PROTEIN_SITES ALTER COLUMN DOMAIN nvarchar(999) NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'PROTEIN_SITES' AND COLUMN_NAME = 'PRIVACY_DATA')
    BEGIN
        ALTER TABLE PROTEIN_SITES ADD PRIVACY_DATA text;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_PAYMENT_INTERRUPTION' AND COLUMN_NAME = 'EXTRA_PAYMENT_ID')
    BEGIN
        ALTER TABLE SETUP_PAYMENT_INTERRUPTION ADD EXTRA_PAYMENT_ID nvarchar(50);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'SETUP_PAYMENT_INTERRUPTION' AND COLUMN_NAME = 'DYNAMIC_RULES_ID')
    BEGIN
        ALTER TABLE SETUP_PAYMENT_INTERRUPTION ADD DYNAMIC_RULES_ID int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'GDPR_APPROVE')
    BEGIN
        CREATE TABLE [GDPR_APPROVE](
        [GDPR_APPROVE_ID] int NOT NULL IDENTITY(1,1), 
        [GDPR_DELERATION_ID] int NULL, 
        [GDPR_APPROVE_DATE] datetime NULL, 
        [EMPLOYEE_ID] int NULL, 
        [PARTNER_ID] int NULL, 
        [CONSUMER_ID] int NULL, 
        [EMPLOYEE_APP_ID] int NULL, 
        [RECORD_IP] nvarchar(100)  NULL, 
        [RECORD_EMP] int NULL, 
        [RECORD_DATE] datetime NULL, 
        [UPDATE_IP] nvarchar(100)  NULL, 
        [UPDATE_EMP] int NULL, 
        [UPDATE_DATE] datetime NULL, 
        [APPROVE_EMP_ID] int NULL, 
        CONSTRAINT [PK__GDPR_APP__BFAB4B8B0867DC83] PRIMARY KEY ([GDPR_APPROVE_ID] ASC));
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'JURY_MEMBERSHIP')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ADD JURY_MEMBERSHIP bit;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'LAND_COMPENSATION_SCORE')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ADD LAND_COMPENSATION_SCORE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'SERVICE_CLASS')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ADD SERVICE_CLASS int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'PAST_AGI_DAY')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ADD PAST_AGI_DAY float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'SERVICE_TITLE')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ADD SERVICE_TITLE int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'JURY_MEMBERSHIP_PERIOD')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ADD JURY_MEMBERSHIP_PERIOD int;
    END;
    IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'ADMINISTRATIVE_ACADEMIC')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ALTER COLUMN ADMINISTRATIVE_ACADEMIC int NULL;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'LAND_COMPENSATION_PERIOD')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ADD LAND_COMPENSATION_PERIOD int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'WRK_OUTPUT_JOB' AND COLUMN_NAME = 'KEP_ADDRESS')
    BEGIN
        ALTER TABLE WRK_OUTPUT_JOB ADD KEP_ADDRESS nvarchar(200);
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT' AND COLUMN_NAME = 'JURY_NUMBER')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT ADD JURY_NUMBER int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_IN_OUT_HISTORY' AND COLUMN_NAME = 'JURY_NUMBER')
    BEGIN
        ALTER TABLE EMPLOYEES_IN_OUT_HISTORY ADD JURY_NUMBER int;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND COLUMN_NAME = 'DAILY_MINIMUM_WAGE_BASE_CUMULATE')
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ADD DAILY_MINIMUM_WAGE_BASE_CUMULATE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND COLUMN_NAME = 'MINIMUM_WAGE_CUMULATIVE')
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ADD MINIMUM_WAGE_CUMULATIVE float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND COLUMN_NAME = 'DAILY_MINIMUM_INCOME_TAX')
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ADD DAILY_MINIMUM_INCOME_TAX float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND COLUMN_NAME = 'DAILY_MINIMUM_WAGE_STAMP_TAX')
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ADD DAILY_MINIMUM_WAGE_STAMP_TAX float;
    END;
    IF NOT EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ_ROWS' AND COLUMN_NAME = 'DAILY_MINIMUM_WAGE')
    BEGIN
        ALTER TABLE EMPLOYEES_PUANTAJ_ROWS ADD 	DAILY_MINIMUM_WAGE float;
    END;

IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ' AND COLUMN_NAME = 'SSK_OFFICE')
BEGIN
    IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_1' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_1] ON [EMPLOYEES_PUANTAJ] 
    END;
    IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_2' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_2] ON [EMPLOYEES_PUANTAJ] 
    END;
    IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_3' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_3] ON [EMPLOYEES_PUANTAJ] 
    END;
    IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_4' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_4] ON [EMPLOYEES_PUANTAJ] 
    END;
        ALTER TABLE EMPLOYEES_PUANTAJ ALTER COLUMN SSK_OFFICE nvarchar(250) NULL;
    IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_1' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_1] ON [EMPLOYEES_PUANTAJ] ([SAL_YEAR] DESC,[SAL_MON] DESC,[SSK_OFFICE] ASC) 
    END;
    IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_2' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_2] ON [EMPLOYEES_PUANTAJ] ([SSK_OFFICE] ASC,[SSK_OFFICE_NO] ASC) 
    END;
    IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_3' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_3] ON [EMPLOYEES_PUANTAJ] ([SSK_OFFICE_NO] ASC) 
    END;
    IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_4' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_4] ON [EMPLOYEES_PUANTAJ] ([SAL_YEAR] DESC,[SAL_MON] DESC,[PUANTAJ_ID] DESC)  
    END;
END;


IF EXISTS (SELECT 'Y' FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = '@_dsn_main_@' AND TABLE_NAME = 'EMPLOYEES_PUANTAJ' AND COLUMN_NAME = 'PUANTAJ_BRANCH_FULL_NAME')
BEGIN
    IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_1' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_1] ON [EMPLOYEES_PUANTAJ] 
    END;
    IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_2' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_2] ON [EMPLOYEES_PUANTAJ] 
    END;
    IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_3' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_3] ON [EMPLOYEES_PUANTAJ] 
    END;
    IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_4' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        DROP INDEX [NCL_EMPLOYEES_PUANTAJ_4] ON [EMPLOYEES_PUANTAJ] 
    END;
        ALTER TABLE EMPLOYEES_PUANTAJ ALTER COLUMN PUANTAJ_BRANCH_FULL_NAME nvarchar(250) NULL;
    IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_1' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_1] ON [EMPLOYEES_PUANTAJ] ([SAL_YEAR] DESC,[SAL_MON] DESC,[SSK_OFFICE] ASC) 
    END;
    IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_2' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_2] ON [EMPLOYEES_PUANTAJ] ([SSK_OFFICE] ASC,[SSK_OFFICE_NO] ASC) 
    END;
    IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_3' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_3] ON [EMPLOYEES_PUANTAJ] ([SSK_OFFICE_NO] ASC) 
    END;
    IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='NCL_EMPLOYEES_PUANTAJ_4' AND object_id = OBJECT_ID('[EMPLOYEES_PUANTAJ]'))
    BEGIN
        CREATE NONCLUSTERED INDEX [NCL_EMPLOYEES_PUANTAJ_4] ON [EMPLOYEES_PUANTAJ] ([SAL_YEAR] DESC,[SAL_MON] DESC,[PUANTAJ_ID] DESC)  
    END;
END;

</querytag>