IF OBJECT_ID('@company_db@.EZGI_MASTER_PLAN_SABLON_HYR') IS NULL
BEGIN
EXECUTE('
CREATE VIEW @company_db@.[EZGI_MASTER_PLAN_SABLON_HYR]
AS
SELECT        EMPS.PROCESS_ID AS P, EMPS.MENU_HEAD AS M, EMPS.WORKSTATION_ID AS W, EMPS1.PROCESS_ID AS P1, EMPS1.MENU_HEAD AS M1, EMPS1.WORKSTATION_ID AS W1, EMPS2.PROCESS_ID AS P2, 
                         EMPS2.MENU_HEAD AS M2, EMPS2.WORKSTATION_ID AS W2, EMPS3.PROCESS_ID AS P3, EMPS3.MENU_HEAD AS M3, EMPS3.WORKSTATION_ID AS W3, EMPS4.PROCESS_ID AS P4, 
                         EMPS4.MENU_HEAD AS M4, EMPS4.WORKSTATION_ID AS W4, EMPS5.PROCESS_ID AS P5, EMPS5.MENU_HEAD AS M5, EMPS5.WORKSTATION_ID AS W5, EMPS.SHIFT_ID
FROM            EZGI_MASTER_PLAN_SABLON AS EMPS4 LEFT OUTER JOIN
                         EZGI_MASTER_PLAN_SABLON AS EMPS5 ON EMPS4.WORKSTATION_ID = EMPS5.UP_WORKSTATION_ID RIGHT OUTER JOIN
                         EZGI_MASTER_PLAN_SABLON AS EMPS3 ON EMPS4.UP_WORKSTATION_ID = EMPS3.WORKSTATION_ID RIGHT OUTER JOIN
                         EZGI_MASTER_PLAN_SABLON AS EMPS2 ON EMPS3.UP_WORKSTATION_ID = EMPS2.WORKSTATION_ID RIGHT OUTER JOIN
                         EZGI_MASTER_PLAN_SABLON AS EMPS1 ON EMPS2.UP_WORKSTATION_ID = EMPS1.WORKSTATION_ID RIGHT OUTER JOIN
                         EZGI_MASTER_PLAN_SABLON AS EMPS ON EMPS1.UP_WORKSTATION_ID = EMPS.WORKSTATION_ID
WHERE        (EMPS.SIRA = 1)
')
END;


IF OBJECT_ID('@company_db@.EZGI_MASTER_PLAN_SABLON_GRP') IS NULL
BEGIN
EXECUTE('
CREATE VIEW @company_db@.[EZGI_MASTER_PLAN_SABLON_GRP]
AS
SELECT        0 AS TYPE, P, M, W, SHIFT_ID
FROM            EZGI_MASTER_PLAN_SABLON_HYR
GROUP BY P, M, W, SHIFT_ID
UNION ALL
SELECT        1 AS TYPE, P1 AS P, M1 AS M, W1 AS W, SHIFT_ID
FROM            EZGI_MASTER_PLAN_SABLON_HYR AS EZGI_MASTER_PLAN_SABLON_HYR_1
GROUP BY P1, M1, W1, SHIFT_ID
UNION ALL
SELECT        2 AS TYPE, P2 AS P, M2 AS M, W2 AS W, SHIFT_ID
FROM            EZGI_MASTER_PLAN_SABLON_HYR AS EZGI_MASTER_PLAN_SABLON_HYR_2
GROUP BY P2, M2, W2, SHIFT_ID
UNION ALL
SELECT        3 AS TYPE, P3 AS P, M3 AS M, W3 AS W, SHIFT_ID
FROM            EZGI_MASTER_PLAN_SABLON_HYR AS EZGI_MASTER_PLAN_SABLON_HYR_3
GROUP BY P3, M3, W3, SHIFT_ID
UNION ALL
SELECT        4 AS TYPE, P4 AS P, M4 AS M, W4 AS W, SHIFT_ID
FROM            EZGI_MASTER_PLAN_SABLON_HYR AS EZGI_MASTER_PLAN_SABLON_HYR_4
GROUP BY P4, M4, W4, SHIFT_ID
UNION ALL
SELECT        5 AS TYPE, P5 AS P, M5 AS M, W5 AS W, SHIFT_ID
FROM            EZGI_MASTER_PLAN_SABLON_HYR AS EZGI_MASTER_PLAN_SABLON_HYR_5
GROUP BY P5, M5, W5, SHIFT_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_OPERATION_S') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_OPERATION_S]
AS
SELECT        TOP (100) PERCENT PO.P_ORDER_ID, PO.PO_RELATED_ID, PO.LOT_NO, PO.P_ORDER_NO, PO.PRODUCTION_LEVEL, PO.IS_STAGE, PO.START_DATE, S.STOCK_CODE, PO.SPEC_MAIN_ID, PO.STOCK_ID, 
                         S.PRODUCT_ID, S.PRODUCT_NAME, PO.SPECT_VAR_NAME, PO.QUANTITY, POR.P_OPERATION_ID, POR.OPERATION_TYPE_ID, OT.OPERATION_CODE, OT.OPERATION_TYPE, POR.AMOUNT, POR.STAGE, 
                         PRO.STATION_ID, PRO.REAL_TIME, PRO.WAIT_TIME, PRO.ACTION_EMPLOYEE_ID, PRO.ACTION_START_DATE, PRO.REAL_AMOUNT, PRO.LOSS_AMOUNT, W.STATION_NAME, POR.O_START_DATE, 
                         EMPR.MASTER_ALT_PLAN_ID, POR.O_STATION_IP, POR.O_TOTAL_PROCESS_TIME, POR.O_FINISH_DATE, OT.IS_VIRTUAL, PRO.OPERATION_GRUP_ID, PRO.OPERATION_RESULT_ID, 
                         PRO.OPERATION_GRUP_END_ID, OT.EZGI_H_SURE, W.EZGI_SETUP_TIME
FROM            	PRODUCTION_ORDERS AS PO INNER JOIN
                         PRODUCTION_OPERATION AS POR ON PO.P_ORDER_ID = POR.P_ORDER_ID INNER JOIN
                         OPERATION_TYPES AS OT ON POR.OPERATION_TYPE_ID = OT.OPERATION_TYPE_ID INNER JOIN
                         STOCKS AS S ON PO.STOCK_ID = S.STOCK_ID INNER JOIN
                         EZGI_MASTER_PLAN_RELATIONS AS EMPR ON PO.P_ORDER_ID = EMPR.P_ORDER_ID LEFT OUTER JOIN
                         WORKSTATIONS AS W INNER JOIN
                         PRODUCTION_OPERATION_RESULT AS PRO ON W.STATION_ID = PRO.STATION_ID ON POR.P_OPERATION_ID = PRO.OPERATION_ID
WHERE        (PO.IS_DEMONTAJ = 0) AND (PO.STATUS = 1)
ORDER BY PO.P_ORDER_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_MASTER_ALT_PLAN_PRODUCTION_ORDER') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_MASTER_ALT_PLAN_PRODUCTION_ORDER]
AS
SELECT        TOP (100) PERCENT EPS.P_ORDER_ID, EMPSG.TYPE AS SIRA, EPS.QUANTITY AS URETIM_EMIR_MIKTAR, EPS.AMOUNT AS URETIM_OPERASYON_MIKTAR, ISNULL(SUM(EPS.REAL_AMOUNT), 0) 
                         AS URETILEN_OPERASYON,
                             (SELECT        ISNULL(SUM(PORRR.AMOUNT), 0) AS RESULT_AMOUNT
                               FROM            PRODUCTION_ORDER_RESULTS AS PORR INNER JOIN
                                                         PRODUCTION_ORDER_RESULTS_ROW AS PORRR ON PORR.PR_ORDER_ID = PORRR.PR_ORDER_ID
                               WHERE        (PORRR.TYPE = 1) AND (PORR.P_ORDER_ID = EPS.P_ORDER_ID)) AS URETILEN_EMIR, EPS.LOT_NO, EPS.P_ORDER_NO, EPS.PRODUCT_NAME, EPS.SPECT_VAR_NAME, EPS.STOCK_ID, 
                         EPS.PRODUCT_ID, EPS.SPEC_MAIN_ID, EPS.STOCK_CODE, EPS.O_STATION_IP, EPS.OPERATION_TYPE, EPS.OPERATION_CODE, EPS.OPERATION_TYPE_ID, EPS.P_OPERATION_ID, EPS.IS_VIRTUAL, 
                         EMAP.RELATED_MASTER_ALT_PLAN_ID, EMAP.MASTER_ALT_PLAN_ID, EPS.IS_STAGE, EMPSG.SHIFT_ID
FROM            EZGI_OPERATION_S AS EPS INNER JOIN
                         EZGI_MASTER_ALT_PLAN AS EMAP ON EPS.MASTER_ALT_PLAN_ID = EMAP.MASTER_ALT_PLAN_ID INNER JOIN
                         EZGI_MASTER_PLAN_SABLON_GRP AS EMPSG ON EMAP.PROCESS_ID = EMPSG.P
WHERE        (EPS.STAGE <> 3) AND (EPS.IS_STAGE <> 2)
GROUP BY EPS.P_ORDER_ID, EMPSG.TYPE, EPS.QUANTITY, EPS.LOT_NO, EPS.P_ORDER_NO, EPS.PRODUCT_NAME, EPS.SPECT_VAR_NAME, EPS.STOCK_ID, EPS.PRODUCT_ID, EPS.SPEC_MAIN_ID, EPS.STOCK_CODE,
                          EMAP.MASTER_ALT_PLAN_ID, EPS.O_STATION_IP, EMAP.RELATED_MASTER_ALT_PLAN_ID, EPS.AMOUNT, EPS.OPERATION_TYPE, EPS.OPERATION_CODE, EPS.OPERATION_TYPE_ID, EPS.P_OPERATION_ID, 
                         EPS.IS_VIRTUAL, EPS.IS_STAGE, EMPSG.SHIFT_ID
ORDER BY SIRA DESC, EMAP.MASTER_ALT_PLAN_ID, EPS.P_ORDER_ID DESC
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_PIECE') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_PIECE]
AS
SELECT        EDRR.PIECE_ROW_ID, EDRR.DESIGN_MAIN_ROW_ID, EDRR.DESIGN_PACKAGE_ROW_ID, EDRR.DESIGN_ID, NULL AS PACKAGE_PARTNER_ID, NULL AS PACKAGE_IS_MASTER, EDRR.MASTER_PRODUCT_ID, 
                         EDRR.PIECE_TYPE, EDRR.PIECE_NAME, EDRR.PIECE_CODE, EDRR.PIECE_STATUS, EDRR.PIECE_COLOR_ID, EDRR.PIECE_RELATED_ID, EDRR.PIECE_DETAIL, EDRR.PIECE_AMOUNT, EDRR.MATERIAL_ID, 
                         EDRR.TRIM_TYPE, EDRR.TRIM_SIZE, EDRR.IS_FLOW_DIRECTION, EDRR.BOYU, EDRR.ENI, EDRR.KESIM_BOYU, EDRR.KESIM_ENI, EDRR.KALINLIK, EDRR.AGIRLIK, EDRR.PIECE_PARTNER_ID, 
                         EDRR.PIECE_IS_MASTER, EDRR.PIECE_PRICE, EDRR.PIECE_PRICE_MONEY, EDRR.PIECE_PACKAGE_ROTA, EDRR.PIECE_FLOOR, EDRR.RECORD_EMP, EDRR.RECORD_IP, EDRR.RECORD_DATE, 
                         EDRR.UPDATE_EMP, EDRR.UPDATE_IP, EDRR.UPDATE_DATE, EDRR.PIECE_SPECT_RELATED_ID
FROM            EZGI_DESIGN_PIECE_ROWS AS EDRR1 INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDR ON EDRR1.PIECE_ROW_ID = EDR.PIECE_ROW_ID RIGHT OUTER JOIN
                         EZGI_DESIGN_PIECE_ROWS AS EDRR ON EDR.RELATED_PIECE_ROW_ID = EDRR.PIECE_ROW_ID LEFT OUTER JOIN
                         EZGI_DESIGN_PACKAGE_ROW AS EDPR ON EDRR.DESIGN_PACKAGE_ROW_ID = EDPR.PACKAGE_ROW_ID
WHERE        (EDPR.PACKAGE_ROW_ID IS NULL) AND (EDR.RELATED_PIECE_ROW_ID IS NULL)
UNION ALL
SELECT        EDP.PIECE_ROW_ID, EDPR.DESIGN_MAIN_ROW_ID, EDPR.PACKAGE_ROW_ID AS DESIGN_PACKAGE_ROW_ID, EDPR.DESIGN_ID, EDPR.PACKAGE_PARTNER_ID, EDPR.PACKAGE_IS_MASTER, 
                         EDP.MASTER_PRODUCT_ID, EDP.PIECE_TYPE, EDP.PIECE_NAME, EDP.PIECE_CODE, EDP.PIECE_STATUS, EDP.PIECE_COLOR_ID, EDP.PIECE_RELATED_ID, EDP.PIECE_DETAIL, EDP.PIECE_AMOUNT, 
                         EDP.MATERIAL_ID, EDP.TRIM_TYPE, EDP.TRIM_SIZE, EDP.IS_FLOW_DIRECTION, EDP.BOYU, EDP.ENI, EDP.KESIM_BOYU, EDP.KESIM_ENI, EDP.KALINLIK, EDP.AGIRLIK, EDP.PIECE_PARTNER_ID, 
                         EDP.PIECE_IS_MASTER, EDP.PIECE_PRICE, EDP.PIECE_PRICE_MONEY, EDP.PIECE_PACKAGE_ROTA, EDP.PIECE_FLOOR, EDP.RECORD_EMP, EDP.RECORD_IP, EDP.RECORD_DATE, EDP.UPDATE_EMP, 
                         EDP.UPDATE_IP, EDP.UPDATE_DATE, EDP.PIECE_SPECT_RELATED_ID
FROM            EZGI_DESIGN_PACKAGE_ROW AS EDPR INNER JOIN
                         EZGI_DESIGN_PIECE_ROWS AS EDP ON EDPR.PACKAGE_ROW_ID = EDP.DESIGN_PACKAGE_ROW_ID
UNION ALL
SELECT DISTINCT 
                         EDP1.PIECE_ROW_ID, EDPR.DESIGN_MAIN_ROW_ID, NULL AS DESIGN_PACKAGE_ROW_ID, EDPR.DESIGN_ID, EDPR.PACKAGE_PARTNER_ID, EDPR.PACKAGE_IS_MASTER, EDP1.MASTER_PRODUCT_ID, 
                         EDP1.PIECE_TYPE, EDP1.PIECE_NAME, EDP1.PIECE_CODE, EDP1.PIECE_STATUS, EDP1.PIECE_COLOR_ID, EDP1.PIECE_RELATED_ID, EDP1.PIECE_DETAIL, EDP1.PIECE_AMOUNT, EDP1.MATERIAL_ID, 
                         EDP1.TRIM_TYPE, EDP1.TRIM_SIZE, EDP1.IS_FLOW_DIRECTION, EDP1.BOYU, EDP1.ENI, EDP1.KESIM_BOYU, EDP1.KESIM_ENI, EDP1.KALINLIK, EDP1.AGIRLIK, EDP1.PIECE_PARTNER_ID, 
                         EDP1.PIECE_IS_MASTER, EDP1.PIECE_PRICE, EDP1.PIECE_PRICE_MONEY, EDP1.PIECE_PACKAGE_ROTA, EDP1.PIECE_FLOOR, EDP1.RECORD_EMP, EDP1.RECORD_IP, EDP1.RECORD_DATE, 
                         EDP1.UPDATE_EMP, EDP1.UPDATE_IP, EDP1.UPDATE_DATE, EDP1.PIECE_SPECT_RELATED_ID
FROM            EZGI_DESIGN_PIECE_ROW AS EDRR INNER JOIN
                         EZGI_DESIGN_PIECE_ROWS AS EDP ON EDRR.PIECE_ROW_ID = EDP.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE_ROWS AS EDP1 ON EDRR.RELATED_PIECE_ROW_ID = EDP1.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PACKAGE_ROW AS EDPR ON EDP.DESIGN_PACKAGE_ROW_ID = EDPR.PACKAGE_ROW_ID
WHERE        (EDRR.PIECE_ROW_ROW_TYPE = 4)
UNION ALL
SELECT        EDP.PIECE_ROW_ID, EDPR.DESIGN_MAIN_ROW_ID, EDPR.PACKAGE_ROW_ID AS DESIGN_PACKAGE_ROW_ID, EDPR.DESIGN_ID, EDPR.PACKAGE_PARTNER_ID, EDPR.PACKAGE_IS_MASTER, 
                         EDP.MASTER_PRODUCT_ID, EDP.PIECE_TYPE, EDP.PIECE_NAME, EDP.PIECE_CODE, EDP.PIECE_STATUS, EDP.PIECE_COLOR_ID, EDP.PIECE_RELATED_ID, EDP.PIECE_DETAIL, 
                         EDP.PIECE_AMOUNT * EDPR.PACKAGE_AMOUNT AS PIECE_AMOUNT, EDP.MATERIAL_ID, EDP.TRIM_TYPE, EDP.TRIM_SIZE, EDP.IS_FLOW_DIRECTION, EDP.BOYU, EDP.ENI, EDP.KESIM_BOYU, 
                         EDP.KESIM_ENI, EDP.KALINLIK, EDP.AGIRLIK, EDP.PIECE_PARTNER_ID, EDP.PIECE_IS_MASTER, EDP.PIECE_PRICE, EDP.PIECE_PRICE_MONEY, EDP.PIECE_PACKAGE_ROTA, EDP.PIECE_FLOOR, 
                         EDP.RECORD_EMP, EDP.RECORD_IP, EDP.RECORD_DATE, EDP.UPDATE_EMP, EDP.UPDATE_IP, EDP.UPDATE_DATE, EDP.PIECE_SPECT_RELATED_ID
FROM            EZGI_DESIGN_PACKAGE_ROW AS EDPR INNER JOIN
                         EZGI_DESIGN_PACKAGE_ROW AS EDPR1 ON EDPR.PACKAGE_PARTNER_ID = EDPR1.PACKAGE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE_ROWS AS EDP ON EDPR.PACKAGE_PARTNER_ID = EDP.DESIGN_PACKAGE_ROW_ID
UNION ALL
SELECT  DISTINCT      EDP1.PIECE_ROW_ID, EDPR.DESIGN_MAIN_ROW_ID, NULL AS DESIGN_PACKAGE_ROW_ID, EDPR.DESIGN_ID, EDPR.PACKAGE_PARTNER_ID, EDPR.PACKAGE_IS_MASTER, EDP1.MASTER_PRODUCT_ID, 
                         EDP1.PIECE_TYPE, EDP1.PIECE_NAME, EDP1.PIECE_CODE, EDP1.PIECE_STATUS, EDP1.PIECE_COLOR_ID, EDP1.PIECE_RELATED_ID, EDP1.PIECE_DETAIL, EDP1.PIECE_AMOUNT, EDP1.MATERIAL_ID, 
                         EDP1.TRIM_TYPE, EDP1.TRIM_SIZE, EDP1.IS_FLOW_DIRECTION, EDP1.BOYU, EDP1.ENI, EDP1.KESIM_BOYU, EDP1.KESIM_ENI, EDP1.KALINLIK, EDP1.AGIRLIK, EDP1.PIECE_PARTNER_ID, 
                         EDP1.PIECE_IS_MASTER, EDP1.PIECE_PRICE, EDP1.PIECE_PRICE_MONEY, EDP1.PIECE_PACKAGE_ROTA, EDP1.PIECE_FLOOR, EDP1.RECORD_EMP, EDP1.RECORD_IP, EDP1.RECORD_DATE, 
                         EDP1.UPDATE_EMP, EDP1.UPDATE_IP, EDP1.UPDATE_DATE, EDP1.PIECE_SPECT_RELATED_ID
FROM            EZGI_DESIGN_PACKAGE_ROW AS EDPR INNER JOIN
                         EZGI_DESIGN_PACKAGE_ROW AS EDPR1 ON EDPR.PACKAGE_PARTNER_ID = EDPR1.PACKAGE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE_ROWS AS EDP ON EDPR.PACKAGE_PARTNER_ID = EDP.DESIGN_PACKAGE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDRR ON EDP.PIECE_ROW_ID = EDRR.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE_ROWS AS EDP1 ON EDRR.RELATED_PIECE_ROW_ID = EDP1.PIECE_ROW_ID
WHERE        (EDRR.PIECE_ROW_ROW_TYPE = 4)
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_PACKAGE') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_PACKAGE]
AS
SELECT        PACKAGE_ROW_ID, DESIGN_ID, DESIGN_MAIN_ROW_ID, MASTER_PRODUCT_ID, PACKAGE_RELATED_ID, PACKAGE_NUMBER, PACKAGE_NAME, PACKAGE_COLOR_ID, PACKAGE_DETAIL, PACKAGE_AMOUNT, 
                         PACKAGE_BOYU, PACKAGE_ENI, PACKAGE_KALINLIK, PACKAGE_WEIGHT, PACKAGE_PARTNER_ID, PACKAGE_IS_MASTER,PACKAGE_SPECT_RELATED_ID
FROM            EZGI_DESIGN_PACKAGE_ROW
WHERE        (ISNULL(PACKAGE_IS_MASTER, 1) <> 0)
UNION ALL
SELECT        EDPR.PACKAGE_ROW_ID, EDPR.DESIGN_ID, EDPR.DESIGN_MAIN_ROW_ID, EDPR1.MASTER_PRODUCT_ID, EDPR1.PACKAGE_RELATED_ID, EDPR.PACKAGE_NUMBER, EDPR1.PACKAGE_NAME, 
                         EDPR1.PACKAGE_COLOR_ID, EDPR1.PACKAGE_DETAIL, EDPR.PACKAGE_AMOUNT, EDPR1.PACKAGE_BOYU, EDPR1.PACKAGE_ENI, EDPR1.PACKAGE_KALINLIK, EDPR1.PACKAGE_WEIGHT, 
                         EDPR.PACKAGE_PARTNER_ID, EDPR.PACKAGE_IS_MASTER,EDPR.PACKAGE_SPECT_RELATED_ID
FROM            EZGI_DESIGN_PACKAGE_ROW AS EDPR INNER JOIN
                         EZGI_DESIGN_PACKAGE_ROW AS EDPR1 ON EDPR.PACKAGE_PARTNER_ID = EDPR1.PACKAGE_ROW_ID
WHERE        (ISNULL(EDPR.PACKAGE_IS_MASTER, 1) <> 1)
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_PAKET_CONTENT') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_PAKET_CONTENT]
AS
SELECT        TOP (100) PERCENT EDM.DESIGN_MAIN_ROW_ID AS MODUL_ID, PC.HIERARCHY + ''.'' + CAST(EDM.DESIGN_MAIN_ROW_ID AS VARCHAR) AS MODUL_CODE, EDM.DESIGN_MAIN_NAME AS MODUL_NAME, 
                         EDP.PACKAGE_ROW_ID AS PAKET_ID, EDP.PACKAGE_NAME AS PAKET_NAME, ''Adet'' AS PAKET_UNIT, CAST(EDP.PACKAGE_BOYU AS VARCHAR) + ''*'' + CAST(EDP.PACKAGE_ENI AS VARCHAR) 
                         + ''*'' + CAST(EDP.PACKAGE_KALINLIK AS VARCHAR) AS PAKET_EBAT, EDP.PACKAGE_WEIGHT AS PAKET_WEIGHT, EDP.PACKAGE_NUMBER AS PAKET_NO, 
                         EDP.PACKAGE_BOYU * EDP.PACKAGE_ENI * EDP.PACKAGE_KALINLIK AS PAKET_HACIM, EPP.PIECE_ROW_ID AS PARCA_ID, EPD.PIECE_DEFAULT_NAME AS PARCA_NAME, 
                         EPP.PIECE_AMOUNT AS PARCA_MIKTAR
FROM            EZGI_DESIGN AS ED INNER JOIN
                         EZGI_DESIGN_MAIN_ROW AS EDM ON ED.DESIGN_ID = EDM.DESIGN_ID INNER JOIN
                         PRODUCT_CAT AS PC ON ED.PRODUCT_CATID = PC.PRODUCT_CATID INNER JOIN
                         EZGI_DESIGN_PACKAGE AS EDP ON EDM.DESIGN_MAIN_ROW_ID = EDP.DESIGN_MAIN_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE AS EPP ON EDP.PACKAGE_ROW_ID = EPP.DESIGN_PACKAGE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE_DEFAULTS AS EPD ON EPP.MASTER_PRODUCT_ID = EPD.PIECE_DEFAULT_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_STOCK_RELATED') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_STOCK_RELATED]
AS
SELECT        1 AS TYPE, PIECE_ROW_ID AS ROW_ID, PIECE_RELATED_ID AS STOCK_ID
FROM            EZGI_DESIGN_PIECE
WHERE        (PIECE_RELATED_ID IS NOT NULL) AND (PIECE_TYPE IN (1,2))
UNION ALL
SELECT        1 AS TYPE, ED.PIECE_ROW_ID AS ROW_ID, E.PIECE_RELATED_ID AS STOCK_ID
FROM            EZGI_DESIGN_PIECE AS E INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS R ON E.PIECE_ROW_ID = R.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE AS ED ON R.RELATED_PIECE_ROW_ID = ED.PIECE_ROW_ID
WHERE        (E.PIECE_RELATED_ID IS NOT NULL) AND (E.PIECE_TYPE = 3)

UNION ALL
SELECT        2 AS TYPE, ED.PIECE_ROW_ID AS ROW_ID, EDP.PACKAGE_RELATED_ID AS STOCK_ID
FROM            EZGI_DESIGN_PACKAGE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE AS ED ON EDP.PACKAGE_ROW_ID = ED.DESIGN_PACKAGE_ROW_ID
WHERE        (EDP.PACKAGE_RELATED_ID IS NOT NULL) AND (ED.PIECE_TYPE IN (1,2))
UNION ALL
SELECT        2 AS TYPE, E.PIECE_ROW_ID AS ROW_ID, EDP.PACKAGE_RELATED_ID AS STOCK_ID
FROM            EZGI_DESIGN_PACKAGE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE AS ED ON EDP.PACKAGE_ROW_ID = ED.DESIGN_PACKAGE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS R ON ED.PIECE_ROW_ID = R.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PIECE AS E ON R.RELATED_PIECE_ROW_ID = E.PIECE_ROW_ID
WHERE        (EDP.PACKAGE_RELATED_ID IS NOT NULL) AND (ED.PIECE_TYPE = 3)
UNION ALL
SELECT        3 AS TYPE, ED.PIECE_ROW_ID AS ROW_ID, EDM.DESIGN_MAIN_RELATED_ID AS STOCK_ID
FROM            EZGI_DESIGN_PIECE AS ED INNER JOIN
                         EZGI_DESIGN_MAIN_ROW AS EDM ON ED.DESIGN_MAIN_ROW_ID = EDM.DESIGN_MAIN_ROW_ID
WHERE        (EDM.DESIGN_MAIN_RELATED_ID IS NOT NULL) AND (ED.PIECE_TYPE IN (1,2,3))
')
END;


IF OBJECT_ID('@company_db@.EZGI_THICKNESS') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_THICKNESS]
AS
SELECT        TOP (100) PERCENT @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL_ID AS THICKNESS_ID, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_VALUES AS THICKNESS_PLUS_VALUE, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL AS THICKNESS_VALUE, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL_CODE AS THICKNESS_NAME, @product_db@.PRODUCT_PROPERTY_DETAIL.UNIT, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.RECORD_EMP, @product_db@.PRODUCT_PROPERTY_DETAIL.RECORD_DATE, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.RECORD_IP, @product_db@.PRODUCT_PROPERTY_DETAIL.IS_ACTIVE
FROM            @product_db@.PRODUCT_PROPERTY_DETAIL INNER JOIN
                         EZGI_DESIGN_DEFAULTS ON @product_db@.PRODUCT_PROPERTY_DETAIL.PRPT_ID = EZGI_DESIGN_DEFAULTS.DEFAULT_THICKNESS_PROPERTY_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_PRODUCT_OLCU') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_PRODUCT_OLCU]
AS
SELECT        1 AS TYPE, PACKAGE_ROW_ID AS CODE_ID, PACKAGE_AMOUNT AS EMKTR, 0 AS BOY, 0 AS EN, 0 AS ALAN, 0 AS CEVRE, 0 AS KENAR1, 0 AS KENAR2, 0 AS KENAR3, 0 AS KENAR4, 0 AS KALINLIK
FROM            EZGI_DESIGN_PACKAGE AS EDP
UNION ALL
SELECT        2 AS TYPE, PIECE_ROW_ID AS CODE_ID, PIECE_AMOUNT AS EMKTR, BOYU AS BOY, ENI AS EN, BOYU * ENI / 1000000 AS ALAN, BOYU * 2 + ENI * 2 AS CEVRE, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 1)) * 1000, 0) AS KENAR1, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 2)) * 1000, 0) AS KENAR2, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 3)) * 1000, 0) AS KENAR3, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 4)) * 1000, 0) AS KENAR4, ISNULL
                             ((SELECT        THICKNESS_VALUE
                                 FROM            EZGI_THICKNESS
                                 WHERE        (THICKNESS_ID = EDP.KALINLIK)), 0) AS KALINLIK
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_RECETE_0') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_RECETE_0]
AS
SELECT        EDP.PIECE_ROW_ID, EDPR.STOCK_ID, SUM(EDPR.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID
WHERE        (EDP.PIECE_TYPE = 1) AND (EDPR.PIECE_ROW_ROW_TYPE = 1 OR
                         EDPR.PIECE_ROW_ROW_TYPE = 2) AND (EDP.PACKAGE_PARTNER_ID IS NULL)
GROUP BY EDPR.STOCK_ID, EDP.PIECE_ROW_ID
UNION ALL
SELECT        EDP.PIECE_ROW_ID, PT.RELATED_ID AS STOCK_ID, SUM(EDPR.AMOUNT * EDO.ALAN * PT.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PRODUCT_OLCU AS EDO ON EDPR.PIECE_ROW_ID = EDO.CODE_ID INNER JOIN
                         PRODUCT_TREE AS PT ON EDPR.STOCK_ID = PT.STOCK_ID
WHERE        (EDP.PIECE_TYPE = 1) AND (EDPR.PIECE_ROW_ROW_TYPE = 3) AND (EDP.PACKAGE_PARTNER_ID IS NULL)
GROUP BY EDPR.STOCK_ID, EDP.PIECE_ROW_ID, EDO.TYPE, EDO.ALAN, PT.RELATED_ID, PT.AMOUNT
HAVING        (EDO.TYPE = 2) AND (PT.RELATED_ID IS NOT NULL)
UNION ALL
SELECT        EDP.PIECE_ROW_ID, PT.RELATED_ID, SUM(EDPR.AMOUNT * PT.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID INNER JOIN
                         PRODUCT_TREE AS PT ON EDPR.STOCK_ID = PT.STOCK_ID
WHERE        (EDP.PIECE_TYPE = 1) AND (EDPR.PIECE_ROW_ROW_TYPE = 0) AND (EDP.PACKAGE_PARTNER_ID IS NULL)
GROUP BY EDP.PIECE_ROW_ID, PT.RELATED_ID
HAVING        (PT.RELATED_ID IS NOT NULL)
UNION ALL
SELECT        EDP.PIECE_ROW_ID, PT.RELATED_ID AS STOCK_ID, SUM(EDPR.AMOUNT * PT.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PRODUCT_OLCU AS EDO ON EDPR.PIECE_ROW_ID = EDO.CODE_ID INNER JOIN
                         PRODUCT_TREE AS PT ON EDPR.STOCK_ID = PT.STOCK_ID
WHERE        (EDP.PIECE_TYPE = 2) AND (EDPR.PIECE_ROW_ROW_TYPE = 3) AND (EDP.PACKAGE_PARTNER_ID IS NULL)
GROUP BY EDPR.STOCK_ID, EDP.PIECE_ROW_ID, EDO.TYPE, EDO.ALAN, PT.RELATED_ID, PT.AMOUNT
HAVING        (EDO.TYPE = 2) AND (PT.RELATED_ID IS NOT NULL)
UNION ALL
SELECT        EDP.PIECE_ROW_ID, EDPR.STOCK_ID, SUM(EDPR.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID
WHERE        (EDP.PACKAGE_PARTNER_ID IS NULL)
GROUP BY EDPR.STOCK_ID, EDP.PIECE_ROW_ID, EDP.PIECE_TYPE
HAVING        (EDP.PIECE_TYPE = 2)
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_RECETE_1') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_RECETE_1]
AS
SELECT        EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDPR0.STOCK_ID, EDP.PIECE_TYPE, SUM(EDP.PIECE_AMOUNT * EDPR0.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP INNER JOIN
                         EZGI_DESIGN_RECETE_0 AS EDPR0 ON EDP.PIECE_ROW_ID = EDPR0.PIECE_ROW_ID
WHERE        (EDP.PIECE_TYPE = 1)
GROUP BY EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDPR0.STOCK_ID, EDP.PIECE_TYPE
UNION ALL
SELECT        EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDPR.STOCK_ID, EDP.PIECE_TYPE, SUM(EDP.PIECE_AMOUNT * EDPR.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID
WHERE        (EDP.PIECE_TYPE = 2)
GROUP BY EDPR.STOCK_ID, EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDP.PIECE_TYPE
UNION ALL
SELECT        EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDPR.STOCK_ID, EDP.PIECE_TYPE, SUM(EDP.PIECE_AMOUNT * EDPR.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID
WHERE        (EDP.PIECE_TYPE = 3)
GROUP BY EDPR.STOCK_ID, EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDP.PIECE_TYPE
HAVING        (EDPR.STOCK_ID IS NOT NULL)
UNION ALL
SELECT        EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDR0.STOCK_ID, EDP.PIECE_TYPE, SUM(EDR0.AMOUNT * EDP.PIECE_AMOUNT * EDPR.AMOUNT) 
                         AS AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_RECETE_0 AS EDR0 ON EDPR.RELATED_PIECE_ROW_ID = EDR0.PIECE_ROW_ID
WHERE        (EDP.PIECE_TYPE = 3) AND (EDPR.STOCK_ID IS NULL)
GROUP BY EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDP.PIECE_TYPE, EDR0.STOCK_ID
UNION ALL
SELECT        DESIGN_ID, DESIGN_MAIN_ROW_ID, DESIGN_PACKAGE_ROW_ID, PIECE_ROW_ID, PIECE_RELATED_ID AS STOCK_ID, PIECE_TYPE, PIECE_AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP
WHERE        (PIECE_TYPE = 4)
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_PRODUCT_PROPERTIES') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_PRODUCT_PROPERTIES]
AS
SELECT        TOP (100) PERCENT TBL.PROPERTY_ID, TBL.PROPERTY, TBL.PROPERTY_DETAIL_ID, TBL.PROPERTY_DETAIL, TBL.UNIT, TBL.PROPERTY_VALUES, TBL.PROPERTY_DETAIL_CODE, PDP.PRODUCT_ID, 
                         S.STOCK_ID, S.PRODUCT_CODE, S.PRODUCT_NAME + '' '' + S.PROPERTY AS PRODUCT_NAME, S.PRODUCT_CATID
FROM            (SELECT        PP.PROPERTY_ID, PP.PROPERTY, PPD.PROPERTY_DETAIL_ID, PPD.PROPERTY_DETAIL, PPD.UNIT, PPD.PROPERTY_VALUES, PPD.PROPERTY_DETAIL_CODE
                          FROM            @product_db@.PRODUCT_PROPERTY AS PP INNER JOIN
                                                    @product_db@.PRODUCT_PROPERTY_DETAIL AS PPD ON PP.PROPERTY_ID = PPD.PRPT_ID
                          WHERE        (PPD.IS_ACTIVE = 1)) AS TBL INNER JOIN
                         @product_db@.PRODUCT_DT_PROPERTIES AS PDP ON TBL.PROPERTY_DETAIL_ID = PDP.VARIATION_ID INNER JOIN
                         STOCKS AS S ON PDP.PRODUCT_ID = S.PRODUCT_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_PRODUCT_PROPERTIES_UST') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_PRODUCT_PROPERTIES_UST]
AS
SELECT        COLOR.COLOR_ID, COLOR.COLOR, COLOR.COLOR_CODE, COLOR.STOCK_ID, THICKNESS.THICKNESS_ID, THICKNESS.THICKNESS_VALUE, THICKNESS.THICKNESS_PLUS, THICKNESS.THICKNESS_NAME, 
                         EXT_THICKNESS.KALINLIK_ETKISI_ID, EXT_THICKNESS.KALINLIK_ETKISI_NAME, EXT_THICKNESS.KALINLIK_ETKISI_CODE, COLOR.PRODUCT_ID, COLOR.PRODUCT_NAME, COLOR.PRODUCT_CODE, 
                         COLOR.PRODUCT_CATID, PC.LIST_ORDER_NO, THICKNESS.UNIT
FROM            PRODUCT_CAT AS PC INNER JOIN
                             (SELECT        EDPP1.PROPERTY_DETAIL_ID AS COLOR_ID, EDPP1.PROPERTY_DETAIL AS COLOR, EDPP1.PROPERTY_DETAIL_CODE AS COLOR_CODE, EDPP1.STOCK_ID, EDPP1.PRODUCT_CODE, 
                                                         EDPP1.PRODUCT_NAME, EDPP1.PRODUCT_ID, EDPP1.PRODUCT_CATID
                               FROM            EZGI_DESIGN_PRODUCT_PROPERTIES AS EDPP1 INNER JOIN
                                                         EZGI_DESIGN_DEFAULTS AS EDD1 ON EDPP1.PROPERTY_ID = EDD1.DEFAULT_COLOR_PROPERTY_ID) AS COLOR ON PC.PRODUCT_CATID = COLOR.PRODUCT_CATID FULL OUTER JOIN
                             (SELECT        EDPP0.PROPERTY_DETAIL_ID AS KALINLIK_ETKISI_ID, EDPP0.PROPERTY_DETAIL AS KALINLIK_ETKISI_NAME, EDPP0.PROPERTY_DETAIL_CODE AS KALINLIK_ETKISI_CODE, 
                                                         EDPP0.STOCK_ID
                               FROM            EZGI_DESIGN_PRODUCT_PROPERTIES AS EDPP0 INNER JOIN
                                                         EZGI_DESIGN_DEFAULTS AS EDD0 ON EDPP0.PROPERTY_ID = EDD0.DEFAULT_THICKNESS_EXT_PROPERTY_ID) AS EXT_THICKNESS ON 
                         COLOR.STOCK_ID = EXT_THICKNESS.STOCK_ID FULL OUTER JOIN
                             (SELECT        EDPP2.PROPERTY_DETAIL_ID AS THICKNESS_ID, EDPP2.PROPERTY_DETAIL AS THICKNESS_VALUE, EDPP2.PROPERTY_VALUES AS THICKNESS_PLUS, 
                                                         EDPP2.PROPERTY_DETAIL_CODE AS THICKNESS_NAME, EDPP2.STOCK_ID, EDPP2.UNIT
                               FROM            EZGI_DESIGN_PRODUCT_PROPERTIES AS EDPP2 INNER JOIN
                                                         EZGI_DESIGN_DEFAULTS AS EDD2 ON EDPP2.PROPERTY_ID = EDD2.DEFAULT_THICKNESS_PROPERTY_ID) AS THICKNESS ON COLOR.STOCK_ID = THICKNESS.STOCK_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_RECETE') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_RECETE]
AS
SELECT        EDP.PIECE_ROW_ID, EDPR.STOCK_ID, SUM(EDPR.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID
WHERE        (EDP.PIECE_TYPE = 1) AND (EDPR.PIECE_ROW_ROW_TYPE <> 3)
GROUP BY EDPR.STOCK_ID, EDP.PIECE_ROW_ID
UNION ALL
SELECT        EDP.PIECE_ROW_ID, EDPR.STOCK_ID, SUM(EDPR.AMOUNT * EDO.ALAN) AS AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PRODUCT_OLCU AS EDO ON EDPR.PIECE_ROW_ID = EDO.CODE_ID
WHERE        (EDP.PIECE_TYPE = 1) AND (EDPR.PIECE_ROW_ROW_TYPE = 3)
GROUP BY EDPR.STOCK_ID, EDP.PIECE_ROW_ID, EDO.ALAN
UNION ALL
SELECT        EDP.PIECE_ROW_ID, EDPR.STOCK_ID, SUM(EDPR.AMOUNT) AS AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID
WHERE        (EDP.PIECE_TYPE = 2) AND (EDPR.PIECE_ROW_ROW_TYPE <> 3)
GROUP BY EDPR.STOCK_ID, EDP.PIECE_ROW_ID
UNION ALL
SELECT        EDP.PIECE_ROW_ID, EDPR.STOCK_ID, SUM(EDPR.AMOUNT * EDO.ALAN) AS AMOUNT
FROM            EZGI_DESIGN_PIECE_ROWS AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID INNER JOIN
                         EZGI_DESIGN_PRODUCT_OLCU AS EDO ON EDPR.PIECE_ROW_ID = EDO.CODE_ID
WHERE        (EDP.PIECE_TYPE = 2) AND (EDPR.PIECE_ROW_ROW_TYPE = 3)
GROUP BY EDPR.STOCK_ID, EDP.PIECE_ROW_ID, EDO.ALAN
')
END;


IF OBJECT_ID('@company_db@.EZGI_PRODUCT_TREE_BOM') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_PRODUCT_TREE_BOM]
AS
SELECT     PT1.STOCK_ID, PT1.AMOUNT, PT1.IS_TREE, PT1.RELATED_ID AS STOCK_ID2, PT2.AMOUNT AS AMOUNT2, PT2.IS_TREE AS IS_TREE2, 
                      PT2.RELATED_ID AS STOCK_ID3, PT3.AMOUNT AS AMOUNT3, PT3.IS_TREE AS IS_TREE3, PT3.RELATED_ID AS STOCK_ID4, PT4.AMOUNT AS AMOUNT4, 
                      PT4.IS_TREE AS IS_TREE4, PT4.RELATED_ID AS STOCK_ID5, PT5.AMOUNT AS AMOUNT5, PT5.IS_TREE AS IS_TREE5, PT5.RELATED_ID AS STOCK_ID6, 
                      PT6.AMOUNT AS AMOUNT6, PT6.IS_TREE AS IS_TREE6, PT6.RELATED_ID AS STOCK_ID7, PT7.AMOUNT AS AMOUNT7, PT7.IS_TREE AS IS_TREE7, 
                      PT7.RELATED_ID AS STOCK_ID8, PT8.AMOUNT AS AMOUNT8, PT8.IS_TREE AS IS_TREE8, PT8.RELATED_ID AS STOCK_ID9, PT9.AMOUNT AS AMOUNT9, 
                      PT9.IS_TREE AS IS_TREE9, PT9.RELATED_ID AS STOCK_ID10
FROM         PRODUCT_TREE AS PT9 INNER JOIN
                      PRODUCT_TREE AS PT8 ON PT9.STOCK_ID = PT8.RELATED_ID RIGHT OUTER JOIN
                      PRODUCT_TREE AS PT7 ON PT8.STOCK_ID = PT7.RELATED_ID RIGHT OUTER JOIN
                      PRODUCT_TREE AS PT6 ON PT7.STOCK_ID = PT6.RELATED_ID RIGHT OUTER JOIN
                      PRODUCT_TREE AS PT5 ON PT6.STOCK_ID = PT5.RELATED_ID RIGHT OUTER JOIN
                      PRODUCT_TREE AS PT4 ON PT5.STOCK_ID = PT4.RELATED_ID RIGHT OUTER JOIN
                      PRODUCT_TREE AS PT3 ON PT4.STOCK_ID = PT3.RELATED_ID RIGHT OUTER JOIN
                      PRODUCT_TREE AS PT2 ON PT3.STOCK_ID = PT2.RELATED_ID RIGHT OUTER JOIN
                      PRODUCT_TREE AS PT1 ON PT2.STOCK_ID = PT1.RELATED_ID
WHERE     (ISNULL(PT1.OPERATION_TYPE_ID, 0) = 0) AND (ISNULL(PT3.OPERATION_TYPE_ID, 0) = 0) AND (ISNULL(PT2.OPERATION_TYPE_ID, 0) = 0) AND 
                      (ISNULL(PT4.OPERATION_TYPE_ID, 0) = 0) AND (ISNULL(PT5.OPERATION_TYPE_ID, 0) = 0) AND (ISNULL(PT6.OPERATION_TYPE_ID, 0) = 0) AND 
                      (ISNULL(PT7.OPERATION_TYPE_ID, 0) = 0) AND (ISNULL(PT8.OPERATION_TYPE_ID, 0) = 0) AND (ISNULL(PT9.OPERATION_TYPE_ID, 0) = 0)
')
END;


IF OBJECT_ID('@company_db@.EZGI_PRODUCT_TREE_BOM1') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_PRODUCT_TREE_BOM1]
AS
SELECT     1 AS TIP, EBM.STOCK_ID, EBM.IS_TREE, EBM.STOCK_ID2, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, 1 AS AMOUNT2, 
                      1 AS AMOUNT3, 1 AS AMOUNT4, 1 AS AMOUNT5, 1 AS AMOUNT6,1 AS AMOUNT7,1 AS AMOUNT8,1 AS AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID2 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE, EBM.STOCK_ID2, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, S.IS_PRODUCTION, 
                      S.PRODUCT_ID
UNION ALL
SELECT     2 AS TIP, EBM.STOCK_ID, EBM.IS_TREE2, EBM.STOCK_ID3, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      1 AS AMOUNT3, 1 AS AMOUNT4,1 AS AMOUNT5, 1 AS AMOUNT6,1 AS AMOUNT7,1 AS AMOUNT8,1 AS AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID3 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE2, EBM.STOCK_ID3, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      S.IS_PRODUCTION, S.PRODUCT_ID
UNION ALL
SELECT     3 AS TIP, EBM.STOCK_ID, EBM.IS_TREE3, EBM.STOCK_ID4, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, 1 AS AMOUNT4, 1 AS AMOUNT5, 1 AS AMOUNT6,1 AS AMOUNT7,1 AS AMOUNT8,1 AS AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID4 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE3, EBM.STOCK_ID4, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, S.IS_PRODUCTION, S.PRODUCT_ID
UNION ALL
SELECT     4 AS TIP, EBM.STOCK_ID, EBM.IS_TREE4, EBM.STOCK_ID5, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, 1 AS AMOUNT5, 1 AS AMOUNT6,1 AS AMOUNT7,1 AS AMOUNT8,1 AS AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID5 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE4, EBM.STOCK_ID5, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, S.IS_PRODUCTION, S.PRODUCT_ID
UNION ALL
SELECT     5 AS TIP, EBM.STOCK_ID, EBM.IS_TREE5, EBM.STOCK_ID6, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5, 1 AS AMOUNT6,1 AS AMOUNT7,1 AS AMOUNT8,1 AS AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID6 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE5, EBM.STOCK_ID6, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5,S.IS_PRODUCTION, S.PRODUCT_ID
                      
UNION ALL
SELECT     6 AS TIP, EBM.STOCK_ID, EBM.IS_TREE6, EBM.STOCK_ID7, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5, EBM.AMOUNT6,1 AS AMOUNT7,1 AS AMOUNT8,1 AS AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID7 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE6, EBM.STOCK_ID7, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5,EBM.AMOUNT6, S.IS_PRODUCTION, S.PRODUCT_ID
                      
UNION ALL
SELECT     7 AS TIP, EBM.STOCK_ID, EBM.IS_TREE7, EBM.STOCK_ID8, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5, EBM.AMOUNT6,EBM.AMOUNT7,1 AS AMOUNT8,1 AS AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID8 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE7, EBM.STOCK_ID8, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5,EBM.AMOUNT6,EBM.AMOUNT7,S.IS_PRODUCTION, S.PRODUCT_ID
                      
UNION ALL
SELECT     8 AS TIP, EBM.STOCK_ID, EBM.IS_TREE8, EBM.STOCK_ID9, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5, EBM.AMOUNT6,EBM.AMOUNT7,EBM.AMOUNT8,1 AS AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID9 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE8, EBM.STOCK_ID9, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5,EBM.AMOUNT6,EBM.AMOUNT7,EBM.AMOUNT8,S.IS_PRODUCTION, S.PRODUCT_ID
                      
UNION ALL
SELECT     9 AS TIP, EBM.STOCK_ID, EBM.IS_TREE9, EBM.STOCK_ID10, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5, EBM.AMOUNT6,EBM.AMOUNT7,EBM.AMOUNT8,EBM.AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
FROM         EZGI_PRODUCT_TREE_BOM AS EBM INNER JOIN
                      STOCKS AS S ON EBM.STOCK_ID10 = S.STOCK_ID
GROUP BY EBM.STOCK_ID, EBM.IS_TREE9, EBM.STOCK_ID10, S.STOCK_CODE, S.PRODUCT_NAME, S.PRODUCT_CODE_2, EBM.AMOUNT, EBM.AMOUNT2, 
                      EBM.AMOUNT3, EBM.AMOUNT4, EBM.AMOUNT5,EBM.AMOUNT6,EBM.AMOUNT7,EBM.AMOUNT8,EBM.AMOUNT9, S.IS_PRODUCTION, S.PRODUCT_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_DESIGN_OPERATION_TIME') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_DESIGN_OPERATION_TIME]
AS
SELECT DISTINCT        EPR.SIRA, EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDP.PIECE_TYPE, OTT.OPERATION_TYPE, EPR.OPERATION_TYPE_ID, 
                         EDP.PIECE_AMOUNT AS EMKTR, EPR.AMOUNT AS OMKTR, EDP.BOYU AS BOY, EDP.ENI AS EN, EDP.BOYU * EDP.ENI / 1000000 AS ALAN, EDP.BOYU * 2 + EDP.ENI * 2 AS CEVRE, ISNULL
                             ((SELECT        SUM(AMOUNT) AS AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW
                                 WHERE        (PIECE_ROW_ROW_TYPE = 4) AND (PIECE_ROW_ID = EDP.PIECE_ROW_ID)), 0) AS MMKTR, ISNULL
                             ((SELECT        SUM(AMOUNT) AS AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_1
                                 WHERE        (PIECE_ROW_ROW_TYPE = 2) AND (PIECE_ROW_ID = EDP.PIECE_ROW_ID)), 0) AS AMKTR, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 1)) * 1000, 0) AS KENAR1, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 2)) * 1000, 0) AS KENAR2, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 3)) * 1000, 0) AS KENAR3, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 4)) * 1000, 0) AS KENAR4, OTT.EZGI_H_SURE AS HSURE, OTT.O_MINUTE AS ISURE, 
                         OTT.EZGI_FORMUL AS FORMUL
FROM            EZGI_DESIGN_PIECE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROTA AS EPR ON EDP.PIECE_ROW_ID = EPR.PIECE_ROW_ID INNER JOIN
                         OPERATION_TYPES AS OTT ON EPR.OPERATION_TYPE_ID = OTT.OPERATION_TYPE_ID
WHERE        (EDP.PIECE_TYPE <> 4)
UNION ALL
SELECT        1 AS SIRA, EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.DESIGN_PACKAGE_ROW_ID, EDP.PIECE_ROW_ID, EDP.PIECE_TYPE, OTT.OPERATION_TYPE, PT.OPERATION_TYPE_ID, 
                         EDP.PIECE_AMOUNT AS EMKTR, PT.AMOUNT AS OMKTR, EDP.BOYU AS BOY, EDP.ENI AS EN, EDP.BOYU * EDP.ENI / 1000000 AS ALAN, EDP.BOYU * 2 + EDP.ENI * 2 AS CEVRE, ISNULL
                             ((SELECT        SUM(AMOUNT) AS AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW
                                 WHERE        (PIECE_ROW_ROW_TYPE = 4) AND (PIECE_ROW_ID = EDP.PIECE_ROW_ID)), 0) AS MMKTR, ISNULL
                             ((SELECT        SUM(AMOUNT) AS AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_1
                                 WHERE        (PIECE_ROW_ROW_TYPE = 2) AND (PIECE_ROW_ID = EDP.PIECE_ROW_ID)), 0) AS AMKTR, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 1)) * 1000, 0) AS KENAR1, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 2)) * 1000, 0) AS KENAR2, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 3)) * 1000, 0) AS KENAR3, ISNULL
                             ((SELECT        AMOUNT
                                 FROM            EZGI_DESIGN_PIECE_ROW AS EZGI_DESIGN_PIECE_ROW_2
                                 WHERE        (PIECE_ROW_ID = EDP.PIECE_ROW_ID) AND (PIECE_ROW_ROW_TYPE = 1) AND (SIRA_NO = 4)) * 1000, 0) AS KENAR4, OTT.EZGI_H_SURE AS HSURE, OTT.O_MINUTE AS ISURE, 
                         OTT.EZGI_FORMUL AS FORMUL
FROM            EZGI_DESIGN_PIECE AS EDP INNER JOIN
                         EZGI_DESIGN_PIECE_ROW AS EDPR ON EDP.PIECE_ROW_ID = EDPR.PIECE_ROW_ID INNER JOIN
                         PRODUCT_TREE AS PT ON EDPR.STOCK_ID = PT.STOCK_ID INNER JOIN
                         OPERATION_TYPES AS OTT ON PT.OPERATION_TYPE_ID = OTT.OPERATION_TYPE_ID
WHERE        (EDP.PIECE_TYPE IN (1, 2)) AND (EDPR.PIECE_ROW_ROW_TYPE = 3) AND (PT.OPERATION_TYPE_ID IS NOT NULL)
UNION ALL
SELECT        99 AS SIRA, EDP.DESIGN_ID, EDP.DESIGN_MAIN_ROW_ID, EDP.PACKAGE_ROW_ID, 0 AS PIECE_ROW_ID, 0 AS PIECE_TYPE, OTT.OPERATION_TYPE, OTT.OPERATION_TYPE_ID, 
                         EDP.PACKAGE_AMOUNT AS EMKTR, EDP.PACKAGE_AMOUNT AS OMKTR, 0 AS BOY, 0 AS EN, 0 AS ALAN, 0 AS CEVRE, ISNULL
                             ((SELECT        SUM(PIECE_AMOUNT) AS EMKTR
                                 FROM            EZGI_DESIGN_PIECE
                                 WHERE        (DESIGN_PACKAGE_ROW_ID = EDP.PACKAGE_ROW_ID) AND (PIECE_TYPE <> 4)), 0) AS MMKTR, ISNULL
                             ((SELECT        SUM(PIECE_AMOUNT) AS PIECE_AMOUNT
                                 FROM            EZGI_DESIGN_PIECE AS EZGI_DESIGN_PIECE_1
                                 WHERE        (DESIGN_PACKAGE_ROW_ID = EDP.PACKAGE_ROW_ID) AND (PIECE_TYPE = 4)), 0) AS AMKTR, 0 AS KENAR1, 0 AS KENAR2, 0 AS KENAR3, 0 AS KENAR4, OTT.EZGI_H_SURE AS HSURE, 
                         OTT.O_MINUTE AS ISURE, OTT.EZGI_FORMUL AS FORMUL
FROM            OPERATION_TYPES AS OTT INNER JOIN
                         EZGI_DESIGN_DEFAULTS AS EDD ON OTT.OPERATION_TYPE_ID = EDD.DEFAULT_PACKAGE_OPERATION_TYPE_ID CROSS JOIN
                         EZGI_DESIGN_PACKAGE AS EDP
')
END;


IF OBJECT_ID('@company_db@.EZGI_IFLOW_PRODUCTION_ORDER_LOT_NO') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_IFLOW_PRODUCTION_ORDER_LOT_NO]
AS
SELECT        P.LOT_NO, ROUND(P.QUANTITY, 4) AS EMIR, ISNULL(ROUND(TBL.AMOUNT, 4), 0) AS URETILEN, ROUND(P.QUANTITY, 4) - ISNULL(ROUND(TBL.AMOUNT, 4), 0) AS KALAN
FROM            PRODUCTION_ORDERS AS P LEFT OUTER JOIN
                             (SELECT        POR.P_ORDER_ID, SUM(PORR.AMOUNT) AS AMOUNT
                               FROM            PRODUCTION_ORDER_RESULTS AS POR INNER JOIN
                                                         PRODUCTION_ORDER_RESULTS_ROW AS PORR ON POR.PR_ORDER_ID = PORR.PR_ORDER_ID
                               WHERE        (PORR.TYPE = 1) AND (POR.IS_STOCK_FIS = 1)
                               GROUP BY POR.P_ORDER_ID) AS TBL ON P.P_ORDER_ID = TBL.P_ORDER_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_IFLOW_PRODUCTION_ORDER_LOT_NO_STAGE') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_IFLOW_PRODUCTION_ORDER_LOT_NO_STAGE]
AS
SELECT        IFLOW_P_ORDER_ID, LOT_NO, ISNULL(CASE WHEN
                             (SELECT        SUM(URETILEN) AS IS_STAGE
                               FROM            EZGI_IFLOW_PRODUCTION_ORDER_LOT_NO
                               WHERE        (LOT_NO = E.LOT_NO)) = 0 THEN 0 WHEN
                             (SELECT        SUM(KALAN) AS IS_STAGE
                               FROM            EZGI_IFLOW_PRODUCTION_ORDER_LOT_NO
                               WHERE        (LOT_NO = E.LOT_NO)) = 0 THEN 2 WHEN
                             (SELECT        SUM(KALAN) AS IS_STAGE
                               FROM            EZGI_IFLOW_PRODUCTION_ORDER_LOT_NO
                               WHERE        (LOT_NO = E.LOT_NO)) > 0 THEN 1 END, 4) AS IS_STAGE
FROM            EZGI_IFLOW_PRODUCTION_ORDERS AS E
')
END;


IF OBJECT_ID('@company_db@.EZGI_COLORS') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_COLORS]
AS
SELECT        @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL_ID AS COLOR_ID, @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL AS COLOR_NAME, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.RECORD_EMP, @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL_CODE, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.RECORD_DATE, @product_db@.PRODUCT_PROPERTY_DETAIL.IS_ACTIVE, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.RELATED_STOCK_ID
FROM            @product_db@.PRODUCT_PROPERTY_DETAIL INNER JOIN
                         @product_db@.PRODUCT_PROPERTY_OUR_COMPANY ON 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.PRPT_ID = @product_db@.PRODUCT_PROPERTY_OUR_COMPANY.PROPERTY_ID INNER JOIN
                         EZGI_DESIGN_DEFAULTS ON @product_db@.PRODUCT_PROPERTY_DETAIL.PRPT_ID = EZGI_DESIGN_DEFAULTS.DEFAULT_COLOR_PROPERTY_ID
WHERE        (@product_db@.PRODUCT_PROPERTY_OUR_COMPANY.OUR_COMPANY_ID = @company_id@)
')
END;


IF OBJECT_ID('@company_db@.EZGI_OPERATION_M') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_OPERATION_M]
AS
SELECT        TOP (100) PERCENT PO.P_ORDER_ID, PO.PO_RELATED_ID, PO.LOT_NO, PO.P_ORDER_NO, PO.PRODUCTION_LEVEL, PO.IS_STAGE, PO.START_DATE, S.STOCK_CODE, PO.SPEC_MAIN_ID, PO.STOCK_ID, 
                         S.PRODUCT_ID, S.PRODUCT_NAME, PO.SPECT_VAR_NAME, PO.QUANTITY, POR.P_OPERATION_ID, POR.OPERATION_TYPE_ID, OT.OPERATION_CODE, OT.OPERATION_TYPE, POR.AMOUNT, POR.STAGE, 
                         PRO.STATION_ID, PRO.REAL_TIME, PRO.WAIT_TIME, PRO.ACTION_EMPLOYEE_ID, PRO.ACTION_START_DATE, PRO.REAL_AMOUNT, PRO.LOSS_AMOUNT, W.STATION_NAME, POR.O_START_DATE, 
                         POR.O_STATION_IP, POR.O_TOTAL_PROCESS_TIME, POR.O_FINISH_DATE, OT.IS_VIRTUAL, PRO.OPERATION_GRUP_ID, PRO.OPERATION_RESULT_ID, PRO.OPERATION_GRUP_END_ID, 
                         POR.O_CURRENT_NUMBER, S.STOCK_CODE_2
FROM            PRODUCTION_ORDERS AS PO INNER JOIN
                         PRODUCTION_OPERATION AS POR ON PO.P_ORDER_ID = POR.P_ORDER_ID INNER JOIN
                         OPERATION_TYPES AS OT ON POR.OPERATION_TYPE_ID = OT.OPERATION_TYPE_ID INNER JOIN
                         STOCKS AS S ON PO.STOCK_ID = S.STOCK_ID LEFT OUTER JOIN
                         WORKSTATIONS AS W INNER JOIN
                         PRODUCTION_OPERATION_RESULT AS PRO ON W.STATION_ID = PRO.STATION_ID ON POR.P_OPERATION_ID = PRO.OPERATION_ID
WHERE        (PO.IS_DEMONTAJ = 0) AND (PO.STATUS = 1)
')
END;


IF OBJECT_ID('@company_db@.EZGI_ORDER_REL_RESULT') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_ORDER_REL_RESULT]
AS
SELECT     ORR.ORDER_ROW_ID, ORR1.ORDER_ROW_ID AS ORDER_ROW_ID1, ORR2.ORDER_ROW_ID AS ORDER_ROW_ID2, PO.P_ORDER_ID, ORR.QUANTITY, 
                      ISNULL(ORR1.QUANTITY, 0) AS O_QUANTITY1, ISNULL(ORR2.QUANTITY, 0) AS O_QUANTITY2, ISNULL(PO.QUANTITY, 0) AS P_QUANTITY, 
                      ORR1.ORDER_ROW_CURRENCY AS O_DURUM1, ORR2.ORDER_ROW_CURRENCY AS O_DURUM2, PO.IS_STAGE AS P_DURUM
FROM         ORDER_ROW AS ORR LEFT OUTER JOIN
                      PRODUCTION_ORDERS AS PO LEFT OUTER JOIN
                      PRODUCTION_ORDERS_ROW AS POR ON PO.P_ORDER_ID = POR.PRODUCTION_ORDER_ID ON 
                      ORR.ORDER_ROW_ID = POR.ORDER_ROW_ID LEFT OUTER JOIN
                      ORDER_ROW AS ORR1 ON ORR.WRK_ROW_ID = ORR1.WRK_ROW_RELATION_ID LEFT OUTER JOIN
                      ORDER_ROW AS ORR2 RIGHT OUTER JOIN
                      EZGI_ORDERS_ORDERS_REL AS EOOR ON ORR2.ORDER_ROW_ID = EOOR.P_ORDER_ROW_ID ON 
                      ORR.ORDER_ROW_ID = EOOR.S_ORDER_ROW_ID LEFT OUTER JOIN
                      EZGI_ORDER_TESHIR AS EOT ON ORR.ORDER_ROW_ID = EOT.ORDER_ROW_ID
WHERE     (ISNULL(PO.PRODUCTION_LEVEL, 0) = 0) AND (EOT.ORDER_ROW_ID IS NULL)
')
END;


IF OBJECT_ID('@company_db@.EZGI_PAKET_LIST') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_PAKET_LIST]
AS
SELECT        TOP (100) PERCENT S.STOCK_ID AS MODUL_ID, S.STOCK_CODE AS MODUL_CODE, S.PRODUCT_NAME AS MODUL_NAME, S2.STOCK_ID AS PAKET_ID, S2.STOCK_CODE AS PAKET_CODE, 
                         S2.PRODUCT_NAME AS PAKET_NAME, S2.BARCOD, PT.AMOUNT, S.PRODUCT_STATUS
FROM            PRODUCT_TREE AS PT INNER JOIN
                         STOCKS AS S ON PT.STOCK_ID = S.STOCK_ID INNER JOIN
                          STOCKS AS S2 ON PT.RELATED_ID = S2.STOCK_ID
WHERE        (S.IS_KARMA = 0) AND (S.STOCK_CODE LIKE N''01.152.01%'')
UNION ALL
SELECT        TOP (100) PERCENT S.STOCK_ID AS MODUL_ID, S.STOCK_CODE AS MODUL_CODE, S.PRODUCT_NAME AS MODUL_NAME, S2.STOCK_ID AS PAKET_ID, S2.STOCK_CODE AS PAKET_CODE, 
                         S2.PRODUCT_NAME AS PAKET_NAME, S2.BARCOD, KP.PRODUCT_AMOUNT AS AMOUNT, S.PRODUCT_STATUS
FROM             STOCKS AS S2 INNER JOIN
                         @product_db@.KARMA_PRODUCTS AS KP ON S2.STOCK_ID = KP.STOCK_ID INNER JOIN
                         STOCKS AS S ON KP.KARMA_PRODUCT_ID = S.PRODUCT_ID
WHERE        (S.IS_KARMA = 1) AND (S.STOCK_CODE LIKE N''01.152.01%'')
')
END;


IF OBJECT_ID('@company_db@.EZGI_PAKET_SAYISI') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_PAKET_SAYISI]
AS
SELECT        S.STOCK_ID AS MODUL_ID, S2.STOCK_ID AS PAKET_ID, S2.BARCOD, SUM(PT.AMOUNT) AS PAKET_SAYISI
FROM            PRODUCT_TREE AS PT INNER JOIN
                         STOCKS AS S ON PT.STOCK_ID = S.STOCK_ID INNER JOIN
                         STOCKS AS S2 ON PT.RELATED_ID = S2.STOCK_ID
WHERE        ISNULL(S.IS_KARMA, 0) = 0 AND (S2.STOCK_CODE LIKE N''01.151.01.01%'') AND (S.PACKAGE_CONTROL_TYPE = 2) OR
                         ISNULL(S.IS_KARMA, 0) = 0 AND (S2.STOCK_CODE LIKE N''01.151.02.08%'') AND (S.PACKAGE_CONTROL_TYPE = 2) OR
                         ISNULL(S.IS_KARMA, 0) = 0 AND (S.PACKAGE_CONTROL_TYPE = 2) AND (S2.STOCK_CODE LIKE N''01.151.02.30%'')
GROUP BY S2.BARCOD, S.STOCK_ID, S2.STOCK_ID
UNION ALL
SELECT        STOCK_ID AS MODUL_ID, STOCK_ID AS PAKET_ID, BARCOD, 1 AS PAKET_SAYISI
FROM            STOCKS
WHERE        ISNULL(IS_KARMA, 0) = 0 AND ISNULL(PACKAGE_CONTROL_TYPE, 1) = 1
UNION ALL
SELECT        S.STOCK_ID AS MODUL_ID, S2.STOCK_ID AS PAKET_ID, S2.BARCOD, SUM(KP.PRODUCT_AMOUNT * PT.AMOUNT) AS PAKET_SAYISI
FROM            @product_db@.KARMA_PRODUCTS AS KP INNER JOIN
                         STOCKS AS S ON KP.KARMA_PRODUCT_ID = S.PRODUCT_ID INNER JOIN
                         PRODUCT_TREE AS PT INNER JOIN
                         STOCKS AS S2 ON PT.RELATED_ID = S2.STOCK_ID ON KP.STOCK_ID = PT.STOCK_ID
WHERE        (S.IS_KARMA = 1) AND (S2.STOCK_CODE LIKE N''01.151.01.01%'') AND (S.PACKAGE_CONTROL_TYPE = 2) OR
                         (S.IS_KARMA = 1) AND (S2.STOCK_CODE LIKE N''01.151.02.08%'') AND (S.PACKAGE_CONTROL_TYPE = 2)
GROUP BY S2.BARCOD, S.STOCK_ID, S2.STOCK_ID
UNION ALL
SELECT        S.STOCK_ID AS MODUL_ID, S2.STOCK_ID AS PAKET_ID, S2.BARCOD, KP.PRODUCT_AMOUNT AS PAKET_SAYISI
FROM            @product_db@.KARMA_PRODUCTS AS KP INNER JOIN
                         STOCKS AS S ON KP.KARMA_PRODUCT_ID = S.PRODUCT_ID INNER JOIN
                         STOCKS AS S2 ON KP.STOCK_ID = S2.STOCK_ID
WHERE        (S.IS_KARMA = 1) AND ISNULL(S.PACKAGE_CONTROL_TYPE, 1) = 1
GROUP BY S2.BARCOD, S.STOCK_ID, S2.STOCK_ID, KP.PRODUCT_AMOUNT
')
END;


IF OBJECT_ID('@company_db@.EZGI_PRODUCT_PLACE') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_PRODUCT_PLACE]
AS
SELECT        PRODUCT_PLACE_ID, SHELF_CODE, PLACE_STATUS, CAST(STORE_ID AS VARCHAR(5)) + ''-'' + CAST(LOCATION_ID AS VARCHAR(5)) AS DEPO
FROM            PRODUCT_PLACE
')
END;


IF OBJECT_ID('@company_db@.EZGI_RECETE2') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_RECETE2]
AS
SELECT     SMR0.SPECT_MAIN_ID AS S0_SPECT_MAIN_ID, SMR0.STOCK_ID AS S0_STOCK_ID, SMR0.AMOUNT AS S0_AMOUNT, 
                      SMR0.OPERATION_TYPE_ID AS S0_OPERATION_TYPE_ID, SMR0.RELATED_TREE_ID AS S0_RELATED_TREE_ID, 
                      SMR0.RELATED_MAIN_SPECT_ID AS S1_MAIN_SPECT_ID, SMR1.STOCK_ID AS S1_STOCK_ID, SMR1.AMOUNT AS S1_AMOUNT, 
                      SMR1.OPERATION_TYPE_ID AS S1_OPERATION_TYPE_ID, SMR1.RELATED_TREE_ID AS S1_RELATED_TREE_ID, 
                      SMR1.RELATED_MAIN_SPECT_ID AS S2_MAIN_SPECT_ID, SMR2.STOCK_ID AS S2_STOCK_ID, SMR2.AMOUNT AS S2_AMOUNT, 
                      SMR2.OPERATION_TYPE_ID AS S2_OPERATION_TYPE_ID, SMR2.RELATED_TREE_ID AS S2_RELATED_TREE_ID, 
                      SMR2.RELATED_MAIN_SPECT_ID AS S3_MAIN_SPECT_ID, SMR3.STOCK_ID AS S3_STOCK_ID, SMR3.AMOUNT AS S3_AMOUNT, 
                      SMR3.OPERATION_TYPE_ID AS S3_OPERATION_TYPE_ID, SMR3.RELATED_TREE_ID AS S3_RELATED_TREE_ID, 
                      SMR3.RELATED_MAIN_SPECT_ID AS S4_MAIN_SPECT_ID, SMR4.STOCK_ID AS S4_STOCK_ID, SMR4.AMOUNT AS S4_AMOUNT, 
                      SMR4.OPERATION_TYPE_ID AS S4_OPERATION_TYPE_ID, SMR4.RELATED_TREE_ID AS S4_RELATED_TREE_ID, 
                      SMR4.RELATED_MAIN_SPECT_ID AS S5_MAIN_SPECT_ID, SMR5.STOCK_ID AS S5_STOCK_ID, SMR5.AMOUNT AS S5_AMOUNT, 
                      SMR5.OPERATION_TYPE_ID AS S5_OPERATION_TYPE_ID, SMR5.RELATED_TREE_ID AS S5_RELATED_TREE_ID, 
                      SMR5.RELATED_MAIN_SPECT_ID AS S6_MAIN_SPECT_ID, SMR6.STOCK_ID AS S6_STOCK_ID, SMR6.AMOUNT AS S6_AMOUNT, 
                      SMR6.OPERATION_TYPE_ID AS S6_OPERATION_TYPE_ID, SMR6.RELATED_TREE_ID AS S6_RELATED_TREE_ID, 
                      SMR6.RELATED_MAIN_SPECT_ID AS S7_MAIN_SPECT_ID
FROM         SPECT_MAIN_ROW AS SMR6 RIGHT OUTER JOIN
                      SPECT_MAIN_ROW AS SMR5 ON SMR6.SPECT_MAIN_ID = SMR5.RELATED_MAIN_SPECT_ID RIGHT OUTER JOIN
                      SPECT_MAIN_ROW AS SMR4 ON SMR5.SPECT_MAIN_ID = SMR4.RELATED_MAIN_SPECT_ID RIGHT OUTER JOIN
                      SPECT_MAIN_ROW AS SMR3 ON SMR4.SPECT_MAIN_ID = SMR3.RELATED_MAIN_SPECT_ID RIGHT OUTER JOIN
                      SPECT_MAIN_ROW AS SMR2 ON SMR3.SPECT_MAIN_ID = SMR2.RELATED_MAIN_SPECT_ID RIGHT OUTER JOIN
                      SPECT_MAIN_ROW AS SMR1 ON SMR2.SPECT_MAIN_ID = SMR1.RELATED_MAIN_SPECT_ID RIGHT OUTER JOIN
                      SPECT_MAIN_ROW AS SMR0 ON SMR1.SPECT_MAIN_ID = SMR0.RELATED_MAIN_SPECT_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_SALE_ORDER_RESERVED_LOCATION_DEMONTE') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_SALE_ORDER_RESERVED_LOCATION_DEMONTE]
AS
SELECT        LOCATION_ID, DELIVER_DEPT_ID, PRODUCT_ID, STOCK_ID, SUM(PRODUCT_AMOUNT * RESERVE_SALE_ORDER_STOCK) AS RESERVE_SALE_ORDER_STOCK
FROM            (SELECT        ORDS.LOCATION_ID, ORDS.DELIVER_DEPT_ID, SUM(ORR.RESERVE_STOCK_OUT - ORR.STOCK_OUT) AS RESERVE_SALE_ORDER_STOCK, KP.KARMA_PRODUCT_ID, KP.PRODUCT_ID, 
                                                    KP.STOCK_ID, KP.PRODUCT_AMOUNT
                          FROM            GET_ORDER_ROW_RESERVED AS ORR INNER JOIN
                                                    ORDERS AS ORDS ON ORR.ORDER_ID = ORDS.ORDER_ID INNER JOIN
                                                    STOCKS AS S ON ORR.STOCK_ID = S.STOCK_ID INNER JOIN
                                                    @product_db@.KARMA_PRODUCTS AS KP ON S.PRODUCT_ID = KP.KARMA_PRODUCT_ID
                          WHERE        (ORR.RESERVE_STOCK_OUT - ORR.STOCK_OUT > 0) AND (S.IS_KARMA = 1)
                          GROUP BY ORDS.DELIVER_DEPT_ID, ORDS.LOCATION_ID, KP.KARMA_PRODUCT_ID, KP.PRODUCT_ID, KP.STOCK_ID, KP.PRODUCT_AMOUNT) AS TBL
GROUP BY LOCATION_ID, DELIVER_DEPT_ID, PRODUCT_ID, STOCK_ID
')
END;


IF OBJECT_ID('@company_db@.EZGI_THICKNESS_EXT') IS NULL
BEGIN
EXECUTE('

CREATE VIEW @company_db@.[EZGI_THICKNESS_EXT]
AS
SELECT        TOP (100) PERCENT @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL_ID AS THICKNESS_ID, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL AS THICKNESS_VALUE, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_VALUES AS THICKNESS_PRODUCT_NAME, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.PROPERTY_DETAIL_CODE AS THICKNESS_NAME, @product_db@.PRODUCT_PROPERTY_DETAIL.UNIT, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.RECORD_EMP, @product_db@.PRODUCT_PROPERTY_DETAIL.RECORD_DATE, 
                         @product_db@.PRODUCT_PROPERTY_DETAIL.RECORD_IP, @product_db@.PRODUCT_PROPERTY_DETAIL.IS_ACTIVE
FROM            @product_db@.PRODUCT_PROPERTY_DETAIL INNER JOIN
                         EZGI_DESIGN_DEFAULTS ON @product_db@.PRODUCT_PROPERTY_DETAIL.PRPT_ID = EZGI_DESIGN_DEFAULTS.DEFAULT_THICKNESS_EXT_PROPERTY_ID
')
END;